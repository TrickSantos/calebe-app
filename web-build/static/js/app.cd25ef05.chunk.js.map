{"version":3,"sources":["assets/new.png","src/Services/api.tsx","src/Context/AuthContext.tsx","src/Pages/Desafios.tsx","src/Pages/Ranking.tsx","src/Components/VideoPlayer.tsx","src/Components/Post.tsx","src/Pages/Feed.tsx","src/Pages/Configuracoes.tsx","src/Components/index.tsx","src/Pages/Editar.tsx","src/Pages/Equipe.tsx","src/Pages/EditarEquipe.tsx","src/Pages/Devocional.tsx","src/Routes/app.routes.tsx","src/Pages/Login.tsx","src/Routes/auth.routes.tsx","src/Routes/index.routes.tsx","src/index.tsx","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins.ttf"],"names":["module","exports","api","axios","create","baseURL","interceptors","request","use","config","a","async","AsyncStorage","getItem","headers","Authorization","common","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","storageUser","storageToken","JSON","parse","defaults","loadStorage","Provider","value","signed","login","email","password","resolve","post","then","response","data","token","setItem","stringify","catch","erro","logout","clear","useAuth","useContext","style","StyleSheet","shadowRanking","borderColor","borderWidth","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","backgroundColor","shadow","marginVertical","elevation","avatarBg","Container","styled","View","Text","EquipeContainer","Equipe","Pontuacao","DesafiosContainer","Desafios","TouchableOpacity","equipe","avatar","Image","source","uri","size","Icon","icon","nome","ScrollView","Posicao","Colocacao","PrimeiroContainer","RankingContainer","Row","PosicaoAvatar","ColocacaoContainer","Ranking","navigation","equipes","setEquipes","undefined","primeiro","setPrimeiro","segundo","setSegundo","terceiro","setTerceiro","get","temp","length","shift","e","console","log","finally","animating","color","MaterialCommunityIcons","name","map","index","id","key","onPress","navigate","VideoPlayer","video","videoRef","useRef","Video","ref","useNativeControls","resizeMode","Header","Content","Footer","Verso","Devocional","Titulo","Avatar","NullAvatar","LikeText","CommentText","ActionContainer","Post","useNavigation","likes","curtidas","setCurtidas","comentarios","comments","setComments","some","el","userId","liked","setLiked","autor","FontAwesome5","titulo","verso","cover","numberOfLines","conteudo","delete","put","MaterialIcons","AntDesign","FeedContainer","SafeAreaView","Feed","posts","setPosts","page","setPage","pageSize","setPageSize","concat","meta","lastPage","addListener","FlatList","paddingHorizontal","keyExtractor","item","toString","renderItem","refreshing","ListFooterComponent","onEndReachedThreshold","onEndReached","PerfilContainer","NomeText","EquipeText","MenuContainer","Menu","Configuracoes","Feather","Input","TextInput","ErrorText","Button","ButtonInsideText","Label","FormItem","InfoText","FormContainer","Action","ClickButton","Editar","useForm","control","handleSubmit","message","setMessage","display","setDisplay","onSubmit","replace","ImagePicker","granted","alert","pickerResult","cancelled","block","fetch","res","blob","form","FormData","append","defaultValue","render","field","onBlur","onChange","placeholderTextColor","placeholder","rules","pattern","autoCompleteType","secureTextEntry","marginBottom","Snackbar","visible","onDismiss","Membros","Membro","Nome","route","params","setEquipe","goBack","perfil","equipeId","membros","membro","EditarEquipe","foto","setFoto","instagram","Scroll","Comentario","Comentarios","CommentariosContainer","Comentar","InputIconText","Descricao","Number","Click","comentario","setComentario","setLikes","setComentarios","marginRight","multiline","onChangeText","maxLength","textAlignVertical","usuario","Tab","createBottomTabNavigator","ConfigStack","createStackNavigator","RankingStack","FeedStack","FeedRoutes","Navigator","initialRouteName","Screen","component","options","headerShown","RankingRoutes","ConfigRoutes","AppRoutes","tabBarOptions","showLabel","activeTintColor","inactiveTintColor","tabBarIcon","Entypo","Logo","LoginForm","TextButton","TextButtonInside","Login","recuperar","setRecuperar","mode","reset","onRecuperar","logo","required","fieldState","SimpleLineIcons","disabled","AppStack","AuthRoutes","Routes","flex","justifyContent","alignItems","ActivityIndicator","App","NavigationContainer","Main","useFonts","Poppins","require","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.cd25ef05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new.fffe9f1a.png\";","import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst api = axios.create({\r\n  baseURL: __DEV__ ? \"http://192.168.15.23:3333\" : \"https://api.calebe.online\",\r\n});\r\n\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n    config.headers.common.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport api from \"../Services/api\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { IUsuario } from \"../../declarations\";\r\n\r\ninterface AuthContextProps {\r\n  signed: boolean;\r\n  user: IUsuario | null;\r\n  setUser: React.Dispatch<React.SetStateAction<IUsuario | null>>;\r\n  login(email: string, password: string): Promise<AxiosResponse>;\r\n  logout(): Promise<AxiosResponse>;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({} as AuthContextProps);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUsuario | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadStorage() {\r\n      const storageUser = await AsyncStorage.getItem(\"auth:user\");\r\n      const storageToken = await AsyncStorage.getItem(\"auth:token\");\r\n      if (storageToken && storageUser) {\r\n        setUser(JSON.parse(storageUser));\r\n        setLoading(false);\r\n        api.defaults.headers.Authorization = `Bearer ${storageToken}`;\r\n      } else if (!storageUser) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadStorage();\r\n  }, []);\r\n\r\n  async function login(email: string, password: string) {\r\n    return new Promise<AxiosResponse>((resolve, reject) => {\r\n      api\r\n        .post(\"/login\", { email, password })\r\n        .then(async (response) => {\r\n          const { token, user } = response.data;\r\n          setUser(user);\r\n\r\n          await AsyncStorage.setItem(\"auth:user\", JSON.stringify(user)).then(\r\n            async () => {\r\n              await AsyncStorage.setItem(\"auth:token\", token).then(() => {\r\n                api.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n                api.defaults.headers.Authorization = `Bearer ${token}`;\r\n\r\n                resolve(response);\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          reject(erro);\r\n        });\r\n    });\r\n  }\r\n\r\n  async function logout() {\r\n    return new Promise<AxiosResponse>((resolve) => {\r\n      api.post(\"/logout\").then(async (response) => {\r\n        await AsyncStorage.clear().then(() => {\r\n          setUser(null);\r\n          resolve(response);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ signed: !!user, user, setUser, login, logout, loading }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  return context;\r\n}\r\n\r\nexport default AuthContext;\r\n","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Avatar } from \"react-native-paper\";\r\nimport { Feather, MaterialIcons } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nconst Desafios = () => {\r\n  const { user } = useAuth();\r\n  return (\r\n    <Container>\r\n      <Text>Desafios</Text>\r\n      <EquipeContainer style={style.shadow}>\r\n        {user?.equipe.avatar ? (\r\n          <Avatar.Image\r\n            style={style.shadowRanking}\r\n            source={{ uri: user?.equipe.avatar }}\r\n            size={80}\r\n          />\r\n        ) : (\r\n          <Avatar.Icon style={style.shadowRanking} icon=\"account\" size={80} />\r\n        )}\r\n        <Equipe>{user?.equipe.nome}</Equipe>\r\n        <Pontuacao>0</Pontuacao>\r\n      </EquipeContainer>\r\n      <DesafiosContainer>\r\n        {/* <Row>\r\n          <Desafio style={style.shadow}>\r\n            <Feather\r\n              name=\"award\"\r\n              size={20}\r\n              style={{ margin: \"1rem\" }}\r\n              color=\"#127c82\"\r\n            />\r\n            <Titulo>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n            </Titulo>\r\n            <Tag>\r\n              <Valor>+ 100</Valor>\r\n            </Tag>\r\n            <MaterialIcons name=\"arrow-right\" size={28} color=\"#5CEAA0\" />\r\n          </Desafio>\r\n        </Row> */}\r\n      </DesafiosContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst EquipeContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  margin: 0.5rem;\r\n`;\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst DesafiosContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Desafio = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 200;\r\n  font-size: 14px;\r\n  color: white;\r\n`;\r\n\r\nconst Tag = styled.View`\r\n  background-color: #5ceaa0;\r\n\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Valor = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  color: white;\r\n  font-size: 12px;\r\n  margin: 5px 10px;\r\n`;\r\n\r\nexport default Desafios;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { IEquipe } from \"../../declarations\";\r\nimport api from \"../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { RankingStackParamList } from \"../Routes/app.routes\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Scroll = styled.ScrollView``;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Posicao = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Colocacao = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n`;\r\n\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst PrimeiroContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst RankingContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst EquipeContainer = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst PosicaoAvatar = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0.5rem;\r\n`;\r\n\r\nconst ColocacaoContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0 1rem;\r\n  margin-top: -120px;\r\n  width: 100%;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Ranking\">;\r\n\r\nconst Ranking = ({ navigation }: Props) => {\r\n  const [equipes, setEquipes] = useState<IEquipe[]>([] as IEquipe[]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [primeiro, setPrimeiro] = useState<IEquipe | undefined>(undefined);\r\n  const [segundo, setSegundo] = useState<IEquipe | undefined>(undefined);\r\n  const [terceiro, setTerceiro] = useState<IEquipe | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    async function getEquipes() {\r\n      setLoading(true);\r\n      await api\r\n        .get(\"/equipe\")\r\n        .then(({ data }) => {\r\n          let temp: IEquipe[] = data;\r\n          if (temp.length > 3) {\r\n            setPrimeiro(temp.shift());\r\n            setSegundo(temp.shift());\r\n            setTerceiro(temp.shift());\r\n          }\r\n          setEquipes(temp);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Text>Ranking de Equipes</Text>\r\n      {loading ? (\r\n        <Container>\r\n          <ActivityIndicator animating={true} color=\"#fff\" />\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          {primeiro && segundo && terceiro && (\r\n            <>\r\n              <PrimeiroContainer>\r\n                <PosicaoAvatar>\r\n                  <Posicao>1</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {primeiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: primeiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{primeiro.nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </PrimeiroContainer>\r\n              <ColocacaoContainer>\r\n                <PosicaoAvatar>\r\n                  <Posicao>2</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {segundo.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: segundo.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{segundo.nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n                <PosicaoAvatar>\r\n                  <Posicao>3</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {terceiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: terceiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Posicao>{terceiro.nome}</Posicao>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </ColocacaoContainer>\r\n            </>\r\n          )}\r\n          <RankingContainer>\r\n            {equipes.map(({ id, avatar, nome }, index) => (\r\n              <Row key={id}>\r\n                <Colocacao>\r\n                  <Posicao>{index + 1}</Posicao>\r\n                </Colocacao>\r\n                <EquipeContainer\r\n                  style={style.shadow}\r\n                  onPress={() => navigation.navigate(\"Equipe\", { id })}\r\n                >\r\n                  {avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.avatarBg}\r\n                      source={{ uri: avatar }}\r\n                      size={50}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.avatarBg}\r\n                      icon=\"account\"\r\n                      size={50}\r\n                    />\r\n                  )}\r\n                  <Equipe>{nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </EquipeContainer>\r\n              </Row>\r\n            ))}\r\n          </RankingContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ranking;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Video } from \"expo-av\";\r\n\r\ninterface Props {\r\n  video: string;\r\n}\r\n\r\nconst VideoPlayer = ({ video }: Props) => {\r\n  const videoRef = useRef<Video>(null);\r\n\r\n  return (\r\n    <Video\r\n      ref={videoRef}\r\n      source={{ uri: video }}\r\n      useNativeControls\r\n      resizeMode=\"contain\"\r\n      style={{ width: \"100%\" }}\r\n    />\r\n  );\r\n};\r\nexport default VideoPlayer;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport { FontAwesome5, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Image } from \"react-native\";\r\n\r\nconst Container = styled.View`\r\n  background-color: #ffffff;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Header = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Content = styled.TouchableOpacity`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #000;\r\n  font-size: 12px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Devocional = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst NullAvatar = styled.View`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #bdbdbd;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LikeText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #e80d0d;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CommentText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ActionContainer = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n`;\r\n\r\ninterface Props {\r\n  post: IDevocional;\r\n}\r\n\r\nconst Post = ({ post }: Props) => {\r\n  const { user } = useAuth();\r\n  const navigation = useNavigation();\r\n  const [curtidas, setCurtidas] = useState(post.likes.length);\r\n  const [comments, setComments] = useState(post.comentarios.length);\r\n  const [liked, setLiked] = useState(\r\n    post.likes.some((el) => el.userId === user?.id)\r\n  );\r\n\r\n  const handleCurtir = async () => {\r\n    await api.put(`/curtir/${post.id}`).then(({ data }) => {\r\n      const { likes, comentarios }: IDevocional = data;\r\n      setCurtidas(likes.length);\r\n      setComments(comentarios.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n  const handleUnlike = async () => {\r\n    await api.delete(`/curtida/${post.id}`).then(({ data }) => {\r\n      const { likes, comentarios }: IDevocional = data;\r\n      setCurtidas(likes.length);\r\n      setComments(comentarios.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        marginVertical: 10,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n      }}\r\n    >\r\n      <Header onPress={() => navigation.navigate(\"Devocional\", post)}>\r\n        {post.autor.avatar ? (\r\n          <Avatar source={{ uri: post.autor.avatar }} />\r\n        ) : (\r\n          <NullAvatar>\r\n            <FontAwesome5 name=\"user\" size={16} color=\"black\" />\r\n          </NullAvatar>\r\n        )}\r\n        <Titulo>{post.titulo}</Titulo>\r\n      </Header>\r\n      <Content onPress={() => navigation.navigate(\"Devocional\", post)}>\r\n        {post.video ? (\r\n          <VideoPlayer video={post.video} />\r\n        ) : (\r\n          <>\r\n            <Verso>{post.verso}</Verso>\r\n            {post.cover ? (\r\n              <Image\r\n                source={{ uri: post.cover }}\r\n                resizeMode=\"contain\"\r\n                style={{ width: \"100%\", height: 250 }}\r\n              />\r\n            ) : null}\r\n            <Devocional numberOfLines={10}>{post.conteudo}</Devocional>\r\n          </>\r\n        )}\r\n      </Content>\r\n      <Footer>\r\n        <ActionContainer onPress={liked ? handleUnlike : handleCurtir}>\r\n          <LikeText>{curtidas}</LikeText>\r\n          {liked ? (\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          ) : (\r\n            <MaterialIcons name=\"favorite-outline\" size={18} color=\"#e80d0d\" />\r\n          )}\r\n        </ActionContainer>\r\n        <ActionContainer>\r\n          <CommentText>{comments}</CommentText>\r\n          <AntDesign name=\"message1\" size={18} color=\"black\" />\r\n        </ActionContainer>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, ListRenderItem } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport Post from \"../Components/Post\";\r\nimport api from \"../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { FeedStackParamList } from \"../Routes/app.routes\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\n\r\nconst FeedContainer = styled.SafeAreaView`\r\n  flex: 1;\r\n  background-color: #127c82;\r\n`;\r\n\r\ntype Props = StackScreenProps<FeedStackParamList, \"Feed\">;\r\n\r\nconst Feed = ({ navigation }: Props) => {\r\n  const [posts, setPosts] = useState<IDevocional[]>([] as IDevocional[]);\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        setLoading(true);\r\n        await api\r\n          .get(`/devocional?status=true&page=${page}`)\r\n          .then(({ data }) => {\r\n            setPosts(posts.concat(data.data));\r\n            setPageSize(data.meta.lastPage);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getPosts();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      try {\r\n        setLoading(true);\r\n        await api\r\n          .get(`/devocional?status=true&page=${page}`)\r\n          .then(({ data }) => {\r\n            setPosts(data.data);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const loadMore = () => {\r\n    if (pageSize > page) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FeedContainer>\r\n      <FlatList\r\n        data={posts}\r\n        style={{ paddingHorizontal: 20 }}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => <Post post={item} />}\r\n        refreshing={loading}\r\n        ListFooterComponent={() =>\r\n          loading ? <ActivityIndicator size=\"large\" color=\"#fff\" /> : null\r\n        }\r\n        onEndReachedThreshold={0.1}\r\n        onEndReached={loadMore}\r\n      />\r\n    </FeedContainer>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React, { useState } from \"react\";\r\nimport { Feather, AntDesign } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport styled from \"styled-components/native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst EquipeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst MenuContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Menu = styled.TouchableOpacity`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Configuracoes = ({ navigation }: Props) => {\r\n  const { logout, user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <PerfilContainer>\r\n        <Avatar.Image\r\n          source={{\r\n            uri: user?.avatar,\r\n          }}\r\n        />\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <EquipeText>{`Equipe ${user?.equipe.nome}`}</EquipeText>\r\n      </PerfilContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu onPress={() => navigation.navigate(\"Editar\")}>\r\n          <Feather name=\"user\" size={24} color=\"#127c82\" />\r\n          <NomeText>Editar conta</NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"#127c82\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu\r\n          onPress={async () => {\r\n            setLoading(true);\r\n            await logout().finally(() => setLoading(false));\r\n          }}\r\n        >\r\n          <AntDesign name=\"logout\" size={24} color=\"red\" />\r\n          <NomeText style={{ color: \"red\" }}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"red\" />\r\n            ) : (\r\n              \"Sair\"\r\n            )}\r\n          </NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"red\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Configuracoes;\r\n","import styled from \"styled-components/native\";\r\n\r\nexport const Input = styled.TextInput`\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ErrorText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  color: red;\r\n`;\r\n\r\nexport const Button = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #5ea6a9;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ButtonInsideText = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n`;\r\n\r\nexport const Label = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nexport const FormItem = styled.View`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 1rem;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { IUsuario } from \"../../declarations\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Editar = ({ navigation }: Props) => {\r\n  const { user, setUser } = useAuth();\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/usuario/${user?.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setUser(data);\r\n            await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/usuario/${user?.id}`, data)\r\n      .then(async ({ data }) => {\r\n        setUser(data);\r\n        await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.replace(\"Configuracao\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.replace(\"Configuracao\")}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          <Avatar.Image\r\n            source={{\r\n              uri: user?.avatar,\r\n            }}\r\n            size={90}\r\n          />\r\n        </ClickButton>\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={user?.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue={user?.email}\r\n            rules={{\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"email\"\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Email\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Senha</Label>\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"password\"\r\n                secureTextEntry\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Senha\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Editar;\r\n","import { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { RankingStackParamList } from \"../Routes/app.routes\";\r\nimport { IEquipe } from \"../../declarations\";\r\nimport api from \"../Services/api\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Membros = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Membro = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Equipe\">;\r\n\r\nconst Equipe = ({\r\n  navigation,\r\n  route: {\r\n    params: { id },\r\n  },\r\n}: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [equipe, setEquipe] = useState<IEquipe | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function getEquipe() {\r\n      setLoading(true);\r\n      await api\r\n        .get(`/equipe/${id}`)\r\n        .then(({ data }) => {\r\n          setEquipe(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipe();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#FFF\" />\r\n        </ClickButton>\r\n      </Action>\r\n      {loading ? (\r\n        <ActivityIndicator animating={true} color=\"#fff\" />\r\n      ) : (\r\n        <>\r\n          {equipe && (\r\n            <PerfilContainer>\r\n              {equipe.avatar ? (\r\n                <Avatar.Image\r\n                  source={{\r\n                    uri: equipe.avatar,\r\n                  }}\r\n                  size={90}\r\n                />\r\n              ) : (\r\n                <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n              )}\r\n\r\n              <NomeText>{equipe.nome}</NomeText>\r\n              {!(user?.perfil === \"membro\" || user?.equipeId !== id) && (\r\n                <ClickButton\r\n                  onPress={() => navigation.navigate(\"Editar\", { ...equipe })}\r\n                >\r\n                  <InfoText>Editar Equipe</InfoText>\r\n                </ClickButton>\r\n              )}\r\n            </PerfilContainer>\r\n          )}\r\n          <Membros>\r\n            {equipe?.membros.map((membro) => (\r\n              <Membro style={style.shadow} key={membro.id}>\r\n                {membro.avatar ? (\r\n                  <Avatar.Image\r\n                    source={{\r\n                      uri: membro.avatar,\r\n                    }}\r\n                    size={50}\r\n                  />\r\n                ) : (\r\n                  <Avatar.Icon\r\n                    style={style.avatarBg}\r\n                    icon=\"account\"\r\n                    size={50}\r\n                  />\r\n                )}\r\n                <Nome>{membro.nome}</Nome>\r\n                <Feather name=\"chevron-right\" size={24} color=\"#5ea6a9\" />\r\n              </Membro>\r\n            ))}\r\n          </Membros>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Equipe;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { IUsuario } from \"../../declarations\";\r\nimport { RankingStackParamList } from \"../Routes/app.routes\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Editar\">;\r\n\r\nconst EditarEquipe = ({ navigation, route: { params } }: Props) => {\r\n  const [foto, setFoto] = useState(params.avatar);\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/equipe/${params.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setFoto(data.avatar);\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/equipe/${params.id}`, data)\r\n      .then(async () => {\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.goBack();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          {foto ? (\r\n            <Avatar.Image\r\n              source={{\r\n                uri: foto,\r\n              }}\r\n              size={90}\r\n            />\r\n          ) : (\r\n            <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n          )}\r\n        </ClickButton>\r\n        <NomeText>{params.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={params.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"instagram\"\r\n            control={control}\r\n            defaultValue={params.instagram}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Instagram\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditarEquipe;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Input } from \"../Components\";\r\nimport { Avatar, Snackbar } from \"react-native-paper\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { FeedStackParamList } from \"../Routes/app.routes\";\r\nimport VideoPlayer from \"../Components/VideoPlayer\";\r\nimport api from \"../Services/api\";\r\nimport { AxiosError } from \"axios\";\r\nimport { Image } from \"react-native\";\r\n\r\ntype Props = StackScreenProps<FeedStackParamList, \"Devocional\">;\r\nconst Devocional = ({ navigation, route }: Props) => {\r\n  const post = route.params;\r\n  const [comentario, setComentario] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const [likes, setLikes] = useState(post.likes.length);\r\n  const [comentarios, setComentarios] = useState(post.comentarios);\r\n\r\n  const onComment = async () => {\r\n    await api\r\n      .put(`/comentar/${post.id}`, { comentario })\r\n      .then(({ data }) => {\r\n        setComentarios(data.comentarios);\r\n        setLikes(data.likes);\r\n        setComentario(\"\");\r\n      })\r\n      .catch(({ response }: AxiosError) => {\r\n        setMessage(response?.data);\r\n        setDisplay(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Scroll>\r\n      <Container>\r\n        <Action>\r\n          <Click\r\n            style={{ marginRight: \"1rem\" }}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n          </Click>\r\n          <Titulo>\r\n            <Text>{post.titulo}</Text>\r\n          </Titulo>\r\n        </Action>\r\n        <Content>\r\n          {post.video ? (\r\n            <VideoPlayer video={post.video} />\r\n          ) : (\r\n            <>\r\n              <Verso>{post.verso}</Verso>\r\n              {post.cover ? (\r\n                <Image\r\n                  source={{ uri: post.cover }}\r\n                  resizeMode=\"contain\"\r\n                  style={{ width: \"100%\", height: 200 }}\r\n                />\r\n              ) : null}\r\n              <Descricao>{post.conteudo}</Descricao>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Footer>\r\n          <Click style={{ marginRight: \"1rem\" }}>\r\n            <Number style={{ color: \"#e80d0d\" }}>{likes}</Number>\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          </Click>\r\n          <Click>\r\n            <Number>{comentarios.length}</Number>\r\n            <AntDesign name=\"message1\" size={18} color=\"black\" />\r\n          </Click>\r\n        </Footer>\r\n        <CommentariosContainer>\r\n          <Comentar>\r\n            <InputIconText>\r\n              <AntDesign name=\"message1\" size={18} color=\"#127c82\" />\r\n              <Input\r\n                placeholder=\"Comentário...\"\r\n                placeholderTextColor=\"#127c82\"\r\n                value={comentario}\r\n                multiline={true}\r\n                numberOfLines={3}\r\n                onChangeText={setComentario}\r\n                maxLength={255}\r\n                style={{ height: 90, textAlignVertical: \"top\" }}\r\n              />\r\n              {!!comentario && (\r\n                <Click onPress={onComment} style={{ marginRight: \"1rem\" }}>\r\n                  <MaterialIcons name=\"send\" size={24} color=\"#127c82\" />\r\n                </Click>\r\n              )}\r\n            </InputIconText>\r\n          </Comentar>\r\n          <Comentarios>\r\n            {comentarios.map((comentario) => (\r\n              <Row key={comentario.id}>\r\n                <Click style={{ marginRight: \"1rem\" }}>\r\n                  {comentario.usuario.avatar ? (\r\n                    <Avatar.Image\r\n                      source={{ uri: comentario.usuario.avatar }}\r\n                      size={35}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      icon=\"account\"\r\n                      style={{ backgroundColor: \"#5ea6a9\" }}\r\n                      size={35}\r\n                    />\r\n                  )}\r\n                </Click>\r\n                <Comentario>{comentario.comentario}</Comentario>\r\n              </Row>\r\n            ))}\r\n          </Comentarios>\r\n        </CommentariosContainer>\r\n        <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n          {message}\r\n        </Snackbar>\r\n      </Container>\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nconst Scroll = styled.ScrollView`\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  flex: 1;\r\n`;\r\n\r\nconst Comentario = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Comentarios = styled.View``;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst CommentariosContainer = styled.View`\r\n  margin-top: 1rem;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst Comentar = styled.View`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Descricao = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Number = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Devocional;\r\n","import React from \"react\";\r\nimport { Feather, Entypo } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\nimport Desafios from \"../Pages/Desafios\";\r\nimport Ranking from \"../Pages/Ranking\";\r\nimport Feed from \"../Pages/Feed\";\r\nimport Configuracoes from \"../Pages/Configuracoes\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Editar from \"../Pages/Editar\";\r\nimport Equipe from \"../Pages/Equipe\";\r\nimport EditarEquipe from \"../Pages/EditarEquipe\";\r\nimport Devocional from \"../Pages/Devocional\";\r\nimport { IDevocional } from \"../../declarations\";\r\n\r\nexport type RankingStackParamList = {\r\n  Ranking: undefined;\r\n  Equipe: {\r\n    id: number;\r\n  };\r\n  Editar: {\r\n    id: number;\r\n    nome: string;\r\n    instagram: string;\r\n    avatar: string;\r\n    igrejaId: number;\r\n  };\r\n};\r\n\r\nexport type ConfigStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\nexport type FeedStackParamList = {\r\n  Feed: undefined;\r\n  Devocional: IDevocional;\r\n};\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst ConfigStack = createStackNavigator();\r\n\r\nconst RankingStack = createStackNavigator();\r\n\r\nconst FeedStack = createStackNavigator();\r\n\r\nconst FeedRoutes = () => (\r\n  <FeedStack.Navigator initialRouteName=\"Feed\">\r\n    <FeedStack.Screen\r\n      name=\"Feed\"\r\n      component={Feed}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <FeedStack.Screen\r\n      name=\"Devocional\"\r\n      component={Devocional}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </FeedStack.Navigator>\r\n);\r\n\r\nconst RankingRoutes = () => (\r\n  <RankingStack.Navigator initialRouteName=\"Ranking\">\r\n    <RankingStack.Screen\r\n      name=\"Ranking\"\r\n      component={Ranking}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Equipe\"\r\n      component={Equipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Editar\"\r\n      component={EditarEquipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </RankingStack.Navigator>\r\n);\r\n\r\nconst ConfigRoutes = () => (\r\n  <ConfigStack.Navigator initialRouteName=\"Configuracao\">\r\n    <ConfigStack.Screen\r\n      name=\"Configuracao\"\r\n      component={Configuracoes}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <ConfigStack.Screen\r\n      name=\"Editar\"\r\n      component={Editar}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </ConfigStack.Navigator>\r\n);\r\n\r\nconst AppRoutes: React.FC = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      tabBarOptions={{\r\n        showLabel: false,\r\n        activeTintColor: \"#127C82\",\r\n        inactiveTintColor: \"#000\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={FeedRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Entypo name=\"open-book\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Ranking\"\r\n        component={RankingRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"award\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Desafios\"\r\n        component={Desafios}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"calendar\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Configs\"\r\n        component={ConfigRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"settings\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\nexport default AppRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport { Feather, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components/native\";\r\nimport logo from \"../../assets/new.png\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { ActivityIndicator, Snackbar } from \"react-native-paper\";\r\nimport { AxiosError } from \"axios\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  ErrorText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Logo = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst LoginForm = styled.View`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-top-right-radius: 40px;\r\n  border-top-left-radius: 40px;\r\n`;\r\n\r\nconst TextButton = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TextButtonInside = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Login: undefined;\r\n  App: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Login\">;\r\n\r\nfunction Login({ navigation }: Props) {\r\n  const [recuperar, setRecuperar] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const { login } = useAuth();\r\n  const { control, handleSubmit, reset } = useForm({ mode: \"all\" });\r\n\r\n  const onRecuperar = async (data: { email: string }) => {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/recuperar\", data)\r\n      .then(() => {\r\n        setDisplay(true);\r\n        reset({});\r\n        setMessage(\"Siga as instruções enviadas no seu email\");\r\n      })\r\n      .catch((e) => {\r\n        const { response } = e as AxiosError;\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n        setRecuperar(false);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: { email: string; password: string }) => {\r\n    setLoading(true);\r\n    await login(data.email, data.password)\r\n      .catch(({ response }: AxiosError) => {\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <Image\r\n          source={logo}\r\n          style={{ width: 350, height: 250 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Text>{recuperar ? \"Recuperar senha\" : \"Bem vindo!\"}</Text>\r\n      </Logo>\r\n      <LoginForm>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"O email deve ser informado\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({\r\n              field: { value, onBlur, onChange },\r\n              fieldState: { error },\r\n            }) => (\r\n              <>\r\n                <InputIconText>\r\n                  <Feather name=\"mail\" size={18} color=\"#127c82\" />\r\n                  <Input\r\n                    autoCompleteType=\"email\"\r\n                    placeholderTextColor=\"#127C82\"\r\n                    placeholder=\"Email\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </InputIconText>\r\n                {error && <ErrorText>{error.message}</ErrorText>}\r\n              </>\r\n            )}\r\n          />\r\n        </FormItem>\r\n        {!recuperar && (\r\n          <FormItem style={{ marginBottom: \"2.5rem\" }}>\r\n            <Label>Senha</Label>\r\n\r\n            <Controller\r\n              name=\"password\"\r\n              control={control}\r\n              rules={{\r\n                required: \"A senha precisa ser informada\",\r\n              }}\r\n              render={({\r\n                field: { value, onBlur, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <>\r\n                  <InputIconText>\r\n                    <SimpleLineIcons name=\"lock\" size={18} color=\"#127c82\" />\r\n                    <Input\r\n                      autoCompleteType=\"password\"\r\n                      secureTextEntry\r\n                      placeholderTextColor=\"#127C82\"\r\n                      placeholder=\"Senha\"\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      onBlur={onBlur}\r\n                    />\r\n                  </InputIconText>\r\n                  {error && <ErrorText>{error.message}</ErrorText>}\r\n                </>\r\n              )}\r\n            />\r\n          </FormItem>\r\n        )}\r\n        <FormItem style={{ marginBottom: 0 }}>\r\n          <Button\r\n            style={{\r\n              marginVertical: 10,\r\n              shadowColor: \"#000\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 1,\r\n              },\r\n              shadowOpacity: 0.22,\r\n              shadowRadius: 2.22,\r\n              elevation: 3,\r\n            }}\r\n            disabled={loading}\r\n            onPress={() => {\r\n              recuperar\r\n                ? handleSubmit(onRecuperar)()\r\n                : handleSubmit(onSubmit)();\r\n            }}\r\n          >\r\n            <ButtonInsideText>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Enviar\"\r\n              ) : (\r\n                \"Entrar\"\r\n              )}\r\n            </ButtonInsideText>\r\n          </Button>\r\n          <TextButton onPress={() => setRecuperar(!recuperar)}>\r\n            <TextButtonInside>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Voltar para login\"\r\n              ) : (\r\n                \"Esqueceu a senha?\"\r\n              )}\r\n            </TextButtonInside>\r\n          </TextButton>\r\n        </FormItem>\r\n      </LoginForm>\r\n      <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Login from \"../Pages/Login\";\r\nimport AppRoutes from \"./app.routes\";\r\n\r\nconst AppStack = createStackNavigator();\r\nconst { Navigator, Screen } = AppStack;\r\n\r\nconst AuthRoutes: React.FC = () => {\r\n  return (\r\n    <Navigator initialRouteName=\"Login\">\r\n      <Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\r\n      <Screen\r\n        name=\"App\"\r\n        component={AppRoutes}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport AppRoutes from \"./app.routes\";\r\nimport AuthRoutes from \"./auth.routes\";\r\n\r\nconst Routes = () => {\r\n  const { signed, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return signed ? <AppRoutes /> : <AuthRoutes />;\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { AuthProvider } from \"./Context/AuthContext\";\r\nimport Routes from \"./Routes/index.routes\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <AuthProvider>\r\n        <Routes />\r\n      </AuthProvider>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport App from \"./src\";\n\nexport default function Main() {\n  const [loaded] = useFonts({\n    Poppins: require(\"./assets/fonts/Poppins.ttf\"),\n  });\n\n  return !loaded ? <AppLoading /> : <App />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins.ttf\";"],"sourceRoot":""}