{"version":3,"sources":["assets/new.png","src/Services/api.tsx","src/Context/AuthContext.tsx","src/Pages/Desafios/Desafios.tsx","src/Components/VideoPlayer.tsx","src/Pages/Desafios/Desafio.tsx","src/Pages/Desafios/Resposta.tsx","src/Routes/desafios.routes.tsx","src/Components/index.tsx","src/Pages/Ranking/EditarEquipe.tsx","src/Pages/Ranking/Equipe.tsx","src/Pages/Ranking/Ranking.tsx","src/Routes/ranking.routes.tsx","src/Pages/Feed/Devocional.tsx","src/Components/Post.tsx","src/Pages/Feed/Feed.tsx","src/Routes/feed.routes.tsx","src/Pages/Configuracoes/Configuracoes.tsx","src/Pages/Configuracoes/Editar.tsx","src/Routes/config.routes.tsx","src/Routes/app.routes.tsx","src/Pages/Login.tsx","src/Routes/auth.routes.tsx","src/Routes/index.routes.tsx","src/index.tsx","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins.ttf"],"names":["module","exports","api","axios","create","baseURL","interceptors","request","use","config","a","async","AsyncStorage","getItem","headers","Authorization","common","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","storageUser","storageToken","JSON","parse","defaults","loadStorage","Provider","value","signed","login","email","password","resolve","post","then","response","data","token","setItem","stringify","catch","erro","logout","clear","useAuth","useContext","style","StyleSheet","shadowRanking","borderColor","borderWidth","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","backgroundColor","shadow","marginVertical","elevation","avatarBg","Container","styled","View","Text","EquipeContainer","Equipe","Pontuacao","Row","DesafiosContainer","ScrollView","Desafio","TouchableOpacity","Titulo","Tag","Valor","Desafios","navigation","desafios","setDesafios","addListener","get","equipeId","e","console","log","finally","equipe","avatar","Image","source","uri","size","Icon","icon","nome","color","animating","map","desafio","key","id","onPress","navigate","Feather","name","margin","titulo","pontos","MaterialIcons","VideoPlayer","video","videoRef","useRef","Video","ref","useNativeControls","resizeMode","Scroll","TextButton","Preencher","Action","Click","Content","Descricao","params","route","desafioId","marginRight","goBack","AntDesign","cover","conteudo","perfil","NomeArquivo","Envio","Salvar","Resposta","useForm","control","handleSubmit","reset","useFieldArray","fields","append","remove","onSubmit","respostas","popToTop","resposta","index","length","FAB","small","label","Picker","granted","alert","mediaTypes","All","quality","videoQuality","pickerResult","cancelled","block","fetch","res","blob","form","FormData","url","position","right","bottom","DesafioStack","createStackNavigator","DesafiosRoutes","Navigator","initialRouteName","Screen","component","options","headerShown","Input","TextInput","ErrorText","Button","ButtonInsideText","Label","FormItem","PerfilContainer","NomeText","InfoText","FormContainer","ClickButton","EditarEquipe","foto","setFoto","message","setMessage","display","setDisplay","put","ImagePicker","defaultValue","render","field","onBlur","onChange","placeholderTextColor","placeholder","instagram","marginBottom","Snackbar","visible","onDismiss","Membros","Membro","Nome","setEquipe","membros","membro","Posicao","Colocacao","PrimeiroContainer","RankingContainer","PosicaoAvatar","ColocacaoContainer","Ranking","equipes","setEquipes","undefined","primeiro","setPrimeiro","segundo","setSegundo","terceiro","setTerceiro","temp","shift","MaterialCommunityIcons","RankingStack","RankingRoutes","Comentario","Comentarios","CommentariosContainer","Comentar","InputIconText","Footer","Verso","Number","Devocional","comentario","setComentario","likes","setLikes","comentarios","setComentarios","verso","multiline","numberOfLines","onChangeText","maxLength","textAlignVertical","usuario","Header","Avatar","NullAvatar","LikeText","CommentText","ActionContainer","Post","useNavigation","curtidas","setCurtidas","comments","setComments","some","el","userId","liked","setLiked","autor","FontAwesome5","delete","FeedContainer","SafeAreaView","Feed","posts","setPosts","page","setPage","pageSize","setPageSize","concat","meta","lastPage","FlatList","paddingHorizontal","keyExtractor","item","toString","renderItem","refreshing","ListFooterComponent","onEndReachedThreshold","onEndReached","FeedStack","FeedRoutes","EquipeText","MenuContainer","Menu","Configuracoes","Editar","replace","rules","pattern","autoCompleteType","secureTextEntry","ConfigStack","ConfigRoutes","Tab","createBottomTabNavigator","AppRoutes","tabBarOptions","showLabel","activeTintColor","inactiveTintColor","tabBarIcon","Entypo","Ionicons","Logo","LoginForm","TextButtonInside","Login","recuperar","setRecuperar","mode","onRecuperar","logo","required","fieldState","SimpleLineIcons","disabled","AppStack","AuthRoutes","Routes","flex","justifyContent","alignItems","ActivityIndicator","App","NavigationContainer","Main","useFonts","Poppins","require","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,iC,oKCGrCC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAiD,8BAGnDH,EAAII,aAAaC,QAAQC,KACvB,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACiDE,IAAaC,QAC1D,eAFJ,0BACEJ,EAAOK,QAAQC,cADjB,0BAAAL,EAAA,MAIwDE,IAAaC,QACjE,eALJ,0BAIEJ,EAAOK,QAAQE,OAAOD,cAJxB,iCAQSN,GART,+DAUA,SAACQ,GACCC,QAAQC,OAAOF,MAIJf,QCRTkB,EAAcC,wBAAgC,IAEvCC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvC,EAAwBC,mBAA0B,MAAlD,WAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KAqDA,OAnDAC,qBAAU,YACR,qBAAAnB,EAAAC,OAAA,kEAAAD,EAAA,MAC4BE,IAAaC,QAAQ,cADjD,cACQiB,EADR,kBAAApB,EAAA,MAE6BE,IAAaC,QAAQ,eAFlD,QAEQkB,EAFR,SAGsBD,GAClBJ,EAAQM,KAAKC,MAAMH,IACnBF,GAAW,GACX1B,EAAIgC,SAASpB,QAAQC,cAArB,UAA+CgB,GACrCD,GACVF,GAAW,GARf,4DAWAO,KACC,IAuCD,kBAACf,EAAYgB,SAAb,CACEC,MAAO,CAAEC,SAAUb,EAAMA,OAAMC,UAASa,MAtC5C,SAAqBC,EAAeC,GAApC,SAAA/B,EAAAC,OAAA,yEACS,IAAIO,SAAuB,SAACwB,EAASvB,GAC1CjB,EACGyC,KAAK,SAAU,CAAEH,QAAOC,aACxBG,MAAK,SAAOC,GAAP,mBAAAnC,EAAAC,OAAA,yDACoBkC,EAASC,KAAzBC,EADJ,EACIA,MAAOtB,EADX,EACWA,KACfC,EAAQD,GAFJ,WAAAf,EAAA,MAIEE,IAAaoC,QAAQ,YAAahB,KAAKiB,UAAUxB,IAAOmB,MAC5D,oBAAAlC,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAaoC,QAAQ,aAAcD,GAAOH,MAAK,WACnD1C,EAAIgC,SAASpB,QAAQE,OAAOD,cAA5B,UAAsDgC,EACtD7C,EAAIgC,SAASpB,QAAQC,cAArB,UAA+CgC,EAE/CL,EAAQG,OALZ,gEALE,+DAeLK,OAAM,SAACC,GACNhC,EAAOgC,UApBf,6DAsCmDC,OAbnD,oBAAA1C,EAAAC,OAAA,yEACS,IAAIO,SAAuB,SAACwB,GACjCxC,EAAIyC,KAAK,WAAWC,MAAK,SAAOC,GAAP,SAAAnC,EAAAC,OAAA,kEAAAD,EAAA,MACjBE,IAAayC,QAAQT,MAAK,WAC9BlB,EAAQ,MACRgB,EAAQG,OAHa,mEAF7B,6DAa2DlB,YAEtDJ,IAKA,SAAS+B,IAEd,OADgBC,qBAAWnC,GAIdA,I,6LCXToC,GAAQC,KAAWrD,OAAO,CAC9BsD,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,GACdC,gBAAiB,WAEnBC,OAAQ,CACNC,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdI,UAAW,GAEbC,SAAU,CACRJ,gBAAiB,aAIfK,GAAYC,KAAOC,KAAV,oIAOTC,GAAOF,KAAOE,KAAV,6HAQJC,GAAkBH,KAAOC,KAAV,iOAWfG,GAASJ,KAAOE,KAAV,wGAMNG,GAAYL,KAAOE,KAAV,4GAOTI,GAAMN,KAAOC,KAAV,+DAKHM,GAAoBP,KAAOQ,WAAV,oGAOjBC,GAAUT,KAAOU,iBAAV,8MAWPC,GAASX,KAAOE,KAAV,0GAONU,GAAMZ,KAAOC,KAAV,6EAMHY,GAAQb,KAAOE,KAAV,+HAQIY,GA/KE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WACV/D,EAAS6B,IAAT7B,KACR,EAA8BD,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAqB,IAArD,WAAOiE,EAAP,KAAiBC,EAAjB,KAeA,OAbA7D,qBAAU,WACR2D,EAAWG,YAAY,SAAS,oBAAAjF,EAAAC,OAAA,uDAC9BiB,GAAW,GADmB,WAAAlB,EAAA,MAExBR,EACH0F,IADG,4BACsBnE,OADtB,EACsBA,EAAMoE,WAC/BjD,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACP4C,EAAY5C,MAEbI,OAAM,SAAC4C,GAAD,OAAOC,QAAQC,IAAIF,MACzBG,SAAQ,kBAAMrE,GAAW,OARE,iEAU/B,IAGD,kBAAC4C,GAAD,KACE,kBAACG,GAAD,iBACA,kBAACC,GAAD,CAAiBpB,MAAOA,GAAMY,QACvB,MAAJ3C,KAAMyE,OAAOC,OACZ,kBAAC,KAAOC,MAAR,CACE5C,MAAOA,GAAME,cACb2C,OAAQ,CAAEC,IAAG,MAAE7E,OAAF,EAAEA,EAAMyE,OAAOC,QAC5BI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CAAahD,MAAOA,GAAME,cAAe+C,KAAK,UAAUF,KAAM,KAEhE,kBAAC,GAAD,WAAS9E,OAAT,EAASA,EAAMyE,OAAOQ,MACtB,kBAAC5B,GAAD,WAEDnD,GACC,kBAAC,KAAD,CAAmB4E,KAAK,QAAQI,MAAM,OAAOC,WAAW,IAE1D,kBAAC5B,GAAD,KACGS,EAASoB,KAAI,SAACC,GAAD,OACZ,kBAAC/B,GAAD,CAAKgC,IAAKD,EAAQE,IAChB,kBAAC,GAAD,CACExD,MAAOA,GAAMY,OACb6C,QAAS,kBAAMzB,EAAW0B,SAAS,UAAWJ,KAE9C,kBAACK,EAAA,EAAD,CACEC,KAAK,QACLb,KAAM,GACN/C,MAAO,CAAE6D,OAAQ,QACjBV,MAAM,YAER,kBAACvB,GAAD,KAAS0B,EAAQQ,QACjB,kBAACjC,GAAD,KACE,kBAACC,GAAD,UAAUwB,EAAQS,SAEpB,kBAACC,GAAA,EAAD,CAAeJ,KAAK,cAAcb,KAAM,GAAII,MAAM,oB,6BC9CjDc,GAbK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACfC,EAAWC,iBAAc,MAE/B,OACE,kBAACC,GAAA,EAAD,CACEC,IAAKH,EACLtB,OAAQ,CAAEC,IAAKoB,GACfK,mBAAiB,EACjBC,WAAW,UACXxE,MAAO,CAAEM,MAAO,WC6ChBmE,GAASxD,KAAOQ,WAAV,sFAMNG,GAASX,KAAOC,KAAV,iCAINF,GAAYC,KAAOC,KAAV,0FAMTC,GAAOF,KAAOE,KAAV,+HAQJuD,GAAazD,KAAOE,KAAV,yGAOVwD,GAAY1D,KAAOU,iBAAV,6MAWTiD,GAAS3D,KAAOC,KAAV,uIAQN2D,GAAQ5D,KAAOU,iBAAV,uFAMLmD,GAAU7D,KAAOC,KAAV,oJAQP6D,GAAY9D,KAAOE,KAAV,4GAOAO,GAzHC,SAAC,GAA8C,IAA5CM,EAA2C,EAA3CA,WAAqBgD,EAAsB,EAA/BC,MAASD,OAC9B/G,EAAS6B,IAAT7B,KACFiH,EAAYF,EAAOxB,GACzB,OACE,kBAACiB,GAAD,KACE,kBAAC,GAAD,KACE,kBAACG,GAAD,KACE,kBAACC,GAAD,CACE7E,MAAO,CAAEmF,YAAa,QACtB1B,QAAS,kBAAMzB,EAAWoD,WAE1B,kBAACC,GAAA,EAAD,CAAWzB,KAAK,YAAYb,KAAM,GAAII,MAAM,aAE9C,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAO6B,EAAOlB,UAGlB,kBAACgB,GAAD,KACGE,EAAOd,MACN,kBAAC,GAAD,CAAaA,MAAOc,EAAOd,QAE3B,oCACGc,EAAOM,MACN,kBAAC1C,GAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKkC,EAAOM,OACtBd,WAAW,UACXxE,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAEhC,KACJ,kBAACwE,GAAD,KAAYC,EAAOO,YAIxBtH,IAAyB,UAAhBA,EAAKuH,QAAsC,UAAhBvH,EAAKuH,SACxC,kBAACb,GAAD,CACElB,QAAS,kBACPzB,EAAW0B,SAAS,WAAY,CAC9BwB,YACA7C,SAAUpE,EAAKoE,aAInB,kBAACqC,GAAD,8B,8nBCpCZ,I,kEA+GM9C,GAASX,KAAOC,KAAV,iCAINF,GAAYC,KAAOC,KAAV,2JASTC,GAAOF,KAAOE,KAAV,+HAQJsE,GAAcxE,KAAOE,KAAV,4GAOXuD,GAAazD,KAAOE,KAAV,yGAOVyD,GAAS3D,KAAOC,KAAV,uIAQN4D,GAAU7D,KAAOC,KAAV,qCAIP2D,GAAQ5D,KAAOU,iBAAV,uFAML+D,GAAQzE,KAAOC,KAAV,yOAWLyE,GAAS1E,KAAOU,iBAAV,6MAWGiE,GA1LE,SAAC,GAA8C,IAA5C5D,EAA2C,EAA3CA,WAAqBgD,EAAsB,EAA/BC,MAASD,OAC/B3C,EAAwB2C,EAAxB3C,SAAU6C,EAAcF,EAAdE,UAClB,EAA8BlH,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAyCyH,eAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAC/B,EAAmCC,aAAc,CAC/CH,UACAlC,KAAM,cAFAsC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,OAKlBC,EAAW,SAAO/G,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAETR,EACHyC,KAAK,YADF,SACoBG,GADpB,IAC0B+C,WAAU6C,eACvC9F,MAAK,WACJ4G,EAAM,CAAEM,UAAW,KACnBtE,EAAWuE,cAEZ7G,OAAM,SAAC4C,GACNC,QAAQC,IAAIF,MAEbG,SAAQ,kBAAMrE,GAAW,OAXb,6DAiDjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE4B,MAAO,CAAEmF,YAAa,QACtB1B,QAAS,kBAAMzB,EAAWoD,WAE1B,kBAACC,GAAA,EAAD,CAAWzB,KAAK,YAAYb,KAAM,GAAII,MAAM,aAE9C,kBAAC,GAAD,KACE,kBAAC,GAAD,oBAGJ,kBAAC,GAAD,KACG+C,EAAO7C,KAAI,SAACmD,EAAUC,GAAX,OACV,kBAACf,GAAD,CAAOnC,IAAKiD,EAAShD,IACnB,kBAACG,EAAA,EAAD,CAASC,KAAK,OAAOb,KAAM,GAAII,MAAM,YACrC,kBAACsC,GAAD,gBAAyBgB,GACzB,kBAAC,GAAD,CACEzG,MAAO,CAAEmF,YAAa,QACtB1B,QAAS,kBAAM2C,EAAOK,KAEtB,kBAACzC,GAAA,EAAD,CAAeJ,KAAK,SAASb,KAAM,GAAII,MAAM,cAKpD+C,EAAOQ,OAAS,GACf,kBAACf,GAAD,CAAQlC,QAAS,kBAAMsC,EAAaM,EAAbN,KACpB5H,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,SAE1C,kBAAC,GAAD,gBAIN,kBAACwD,GAAA,EAAD,CACEC,OAAK,EACL3D,KAAK,OACL4D,MAAM,YACNpD,QA3EqB,4BAAAvG,EAAAC,OAAA,kEAAAD,EAAA,MACI4J,QADJ,WAGQ,IAHR,OAGJC,QAHI,uBAIvBC,MAAM,iDAJiB,4CAAA9J,EAAA,MAQA4J,KAA+B,CACtDG,WAAYH,KAAwBI,IACpCC,QAAS,EACTC,aAAc,MAXS,WAaM,KAL3BC,EARqB,QAaRC,UAbQ,mDAiBnBC,EAAQF,EAAavE,IAC3B1E,GAAW,GACXoJ,MAAMD,GACHnI,MAAK,SAACqI,GAAD,OAASA,EAAIC,UAClBtI,MAAK,SAAOsI,GAAP,eAAAxK,EAAAC,OAAA,uDACEwK,EAAO,IAAIC,UACZzB,OAAO,OAAQuB,GACpBC,EAAKxB,OAAO,QAAS,qBAHjB,WAAAjJ,EAAA,MAIER,EACHyC,KAAK,UAAWwI,GAChBvI,MAAK,2BAAAlC,EAAAC,OAAA,gDAASmC,EAAT,EAASA,KACb6G,EAAO,CAAEK,SAAUlH,EAAKuI,MADpB,+DAGLnI,OAAM,SAAC4C,GAAD,OAAOC,QAAQC,IAAIF,MACzBG,SAAQ,kBAAMrE,GAAW,OAVxB,+DArBiB,8DA4ErBD,QAASA,EACT6B,MAAO,CACL8H,SAAU,WACVjE,OAAQ,OACRkE,MAAO,EACPC,OAAQ,OCzGZC,GAAeC,eAsBNC,GApBQ,kBACrB,kBAACF,GAAaG,UAAd,CAAwBC,iBAAiB,YACvC,kBAACJ,GAAaK,OAAd,CACE1E,KAAK,WACL2E,UAAWxG,GACXyG,QAAS,CAAEC,aAAa,KAE1B,kBAACR,GAAaK,OAAd,CACE1E,KAAK,UACL2E,UAAW7G,GACX8G,QAAS,CAAEC,aAAa,KAE1B,kBAACR,GAAaK,OAAd,CACE1E,KAAK,WACL2E,UAAW3C,GACX4C,QAAS,CAAEC,aAAa,O,+BC/BjBC,GAAQzH,KAAO0H,UAAV,8KAULC,GAAY3H,KAAOE,KAAV,qFAMT0H,GAAS5H,KAAOU,iBAAV,oLAUNmH,GAAmB7H,KAAOE,KAAV,mEAKhB4H,GAAQ9H,KAAOE,KAAV,oIAQL6H,GAAW/H,KAAOC,KAAV,wICoIfF,GAAYC,KAAOC,KAAV,0HAQT+H,GAAkBhI,KAAOC,KAAV,+GAOfgI,GAAWjI,KAAOE,KAAV,8GAORgI,GAAWlI,KAAOE,KAAV,8GAORiI,GAAgBnI,KAAOC,KAAV,+KAUb0D,GAAS3D,KAAOC,KAAV,yIAONmI,GAAcpI,KAAOU,iBAAV,qBAEX3B,GAAQC,KAAWrD,OAAO,CAC9BsD,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEhBE,OAAQ,CACNC,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdI,UAAW,GAEbC,SAAU,CACRJ,gBAAiB,aAIN2I,GAnOM,SAAC,GAA8C,IAA5CtH,EAA2C,EAA3CA,WAAqBgD,EAAsB,EAA/BC,MAASD,OAC3C,EAAwBhH,mBAASgH,EAAOrC,QAAxC,WAAO4G,EAAP,KAAaC,EAAb,KACA,EAAkC3D,eAA1BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACjB,EAA8B/H,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,WAAOyL,EAAP,KAAgBC,EAAhB,KACA,EAA8B1L,oBAAS,GAAvC,WAAO2L,EAAP,KAAgBC,EAAhB,KAkCMvD,EAAW,SAAO/G,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAETR,EACHmN,IADG,WACY7E,EAAOxB,GAAMlE,GAC5BF,MAAK,oBAAAlC,EAAAC,OAAA,gDACJyM,GAAW,GACXF,EAAW,kCACX1H,EAAWoD,SAHP,+DAKL1F,OAAM,SAAC4C,GACNC,QAAQC,IAAIF,MAEbG,SAAQ,WACPrE,GAAW,OAbA,6DAiBjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACiL,GAAD,CAAa5F,QAAS,kBAAMzB,EAAWoD,WACrC,kBAACC,GAAA,EAAD,CAAWzB,KAAK,YAAYb,KAAM,GAAII,MAAM,cAGhD,kBAAC8F,GAAD,KACE,kBAACI,GAAD,CAAa5F,QAzDQ,4BAAAvG,EAAAC,OAAA,kEAAAD,EAAA,MAEjB4M,QAFiB,WAIQ,IAJR,OAIJ/C,QAJI,uBAKvBC,MAAM,iDALiB,4CAAA9J,EAAA,MASA4M,QATA,WAUM,KAD3BzC,EATqB,QAURC,UAVQ,mDAcnBC,EAAQF,EAAavE,IAE3B0E,MAAMD,GACHnI,MAAK,SAACqI,GAAD,OAASA,EAAIC,UAClBtI,MAAK,SAAOsI,GAAP,eAAAxK,EAAAC,OAAA,uDACEwK,EAAO,IAAIC,MACZzB,OAAO,SAAUuB,GAFlB,WAAAxK,EAAA,MAGER,EACHmN,IADG,WACY7E,EAAOxB,GAAMmE,GAC5BvI,MAAK,2BAAAlC,EAAAC,OAAA,gDAASmC,EAAT,EAASA,KACbkK,EAAQlK,EAAKqD,QACbiH,GAAW,GACXF,EAAW,gCAHP,+DAKLhK,OAAM,SAAC4C,GAAD,OAAOC,QAAQC,IAAIF,OAVxB,+DAlBiB,+DA0DlBiH,EACC,kBAAC,KAAO3G,MAAR,CACEC,OAAQ,CACNC,IAAKyG,GAEPxG,KAAM,KAGR,kBAAC,KAAOC,KAAR,CAAahD,MAAOA,GAAMe,SAAUkC,KAAK,UAAUF,KAAM,MAG7D,kBAACmG,GAAD,KAAWlE,EAAO9B,MAClB,kBAACiG,GAAD,uBAEF,kBAACC,GAAD,KACE,kBAACJ,GAAD,KACE,kBAACD,GAAD,aACA,kBAAC,KAAD,CACEnF,KAAK,OACLkC,QAASA,EACTiE,aAAc/E,EAAO9B,KACrB8G,OAAQ,oBAAGC,MAASpL,EAAZ,EAAYA,MAAOqL,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACzB,GAAD,CACE0B,qBAAqB,UACrBC,YAAY,OACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,QAKhB,kBAAClB,GAAD,KACE,kBAACD,GAAD,cACA,kBAAC,KAAD,CACEnF,KAAK,YACLkC,QAASA,EACTiE,aAAc/E,EAAOsF,UACrBN,OAAQ,oBAAGC,MAASpL,EAAZ,EAAYA,MAAOqL,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACzB,GAAD,CACE0B,qBAAqB,UACrBC,YAAY,YACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,SAMlB,kBAAClB,GAAD,CAAUhJ,MAAO,CAAEuK,aAAc,IAC/B,kBAAC1B,GAAD,CACE7I,MAAO,CACLa,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdI,UAAW,IAGb,kBAACgI,GAAD,CAAkBrF,QAAS,kBAAMsC,EAAaM,EAAbN,KAC9B5H,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,SAE1C,YAKR,kBAACqH,GAAA,EAAD,CACEC,QAASd,EACTe,UAAW,WACTd,GAAW,GACXF,EAAW,MAGZD,K,+NC1JT,I,6LAsFMzI,GAAYC,KAAOC,KAAV,wJAST+H,GAAkBhI,KAAOC,KAAV,+GAOfgI,GAAWjI,KAAOE,KAAV,2GAORyD,GAAS3D,KAAOC,KAAV,yIAQNiI,GAAWlI,KAAOE,KAAV,2GAORwJ,GAAU1J,KAAOQ,WAAV,sGAOPmJ,GAAS3J,KAAOU,iBAAV,0MAUNkJ,GAAO5J,KAAOE,KAAV,uFAMJnB,GAAQC,KAAWrD,OAAO,CAC9BsD,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEhBE,OAAQ,CACNC,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdI,UAAW,GAEbC,SAAU,CACRJ,gBAAiB,aAIf0I,GAAcpI,KAAOU,iBAAV,qBAEFN,GAjLA,SAAC,GAKF,IAJZW,EAIW,EAJXA,WAEYwB,EAED,EAHXyB,MACED,OAAUxB,GAGJvF,EAAS6B,IAAT7B,KACR,EAA8BD,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAyB,MAArD,WAAO0E,EAAP,KAAeoI,EAAf,KAgBA,OAdAzM,qBAAU,WACR,EAAAnB,EAAAC,OAAA,uDACEiB,GAAW,GADb,WAAAlB,EAAA,MAEQR,EACH0F,IADG,WACYoB,GACfpE,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACPwL,EAAUxL,MAEXI,OAAM,SAAC4C,GAAD,OAAOC,QAAQC,IAAIF,MACzBG,SAAQ,kBAAMrE,GAAW,OAR9B,8DAWC,IAGD,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAaqF,QAAS,kBAAMzB,EAAWoD,WACrC,kBAACC,GAAA,EAAD,CAAWzB,KAAK,YAAYb,KAAM,GAAII,MAAM,WAG/ChF,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,SAE1C,oCACGT,GACC,kBAAC,GAAD,KACGA,EAAOC,OACN,kBAAC,KAAOC,MAAR,CACEC,OAAQ,CACNC,IAAKJ,EAAOC,QAEdI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CAAahD,MAAOA,GAAMe,SAAUkC,KAAK,UAAUF,KAAM,KAG3D,kBAAC,GAAD,KAAWL,EAAOQ,QACE,YAAb,MAAJjF,OAAA,EAAAA,EAAMuH,UAA2B,MAAJvH,OAAA,EAAAA,EAAMoE,YAAamB,IACjD,kBAAC,GAAD,CACEC,QAAS,kBAAMzB,EAAW0B,SAAS,S,oWAApB,IAAmChB,MAElD,kBAAC,GAAD,wBAKR,kBAACiI,GAAD,WACGjI,OADH,EACGA,EAAQqI,QAAQ1H,KAAI,SAAC2H,GAAD,OACnB,kBAACJ,GAAD,CAAQ5K,MAAOA,GAAMY,OAAQ2C,IAAKyH,EAAOxH,IACtCwH,EAAOrI,OACN,kBAAC,KAAOC,MAAR,CACEC,OAAQ,CACNC,IAAKkI,EAAOrI,QAEdI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CACEhD,MAAOA,GAAMe,SACbkC,KAAK,UACLF,KAAM,KAGV,kBAAC8H,GAAD,KAAOG,EAAO9H,MACd,kBAACS,EAAA,EAAD,CAASC,KAAK,gBAAgBb,KAAM,GAAII,MAAM,oB,UCuExDnC,GAAYC,KAAOC,KAAV,sIAUTC,IAFSF,KAAOQ,WAAV,qBAECR,KAAOE,KAAV,gIAQJ8J,GAAUhK,KAAOE,KAAV,uFAMPE,GAASJ,KAAOE,KAAV,uFAMN+J,GAAYjK,KAAOC,KAAV,wIAQTI,GAAYL,KAAOE,KAAV,8GAOTgK,GAAoBlK,KAAOC,KAAV,wIAQjBkK,GAAmBnK,KAAOC,KAAV,sGAOhBK,GAAMN,KAAOC,KAAV,iEAKHE,GAAkBH,KAAOU,iBAAV,gNAWf0J,GAAgBpK,KAAOC,KAAV,2IAQboK,GAAqBrK,KAAOC,KAAV,sLAUlBlB,GAAQC,KAAWrD,OAAO,CAC9BsD,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEhBE,OAAQ,CACNC,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdI,UAAW,GAEbC,SAAU,CACRJ,gBAAiB,aAIN4K,GA9QC,SAAC,GAA2B,IAAzBvJ,EAAwB,EAAxBA,WACjB,EAA8BhE,mBAAoB,IAAlD,WAAOwN,EAAP,KAAgBC,EAAhB,KACA,EAA8BzN,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,wBAA8B0N,GAA9D,WAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8B5N,wBAA8B0N,GAA5D,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgC9N,wBAA8B0N,GAA9D,WAAOK,EAAP,KAAiBC,EAAjB,KAsBA,OApBA3N,qBAAU,WACR,EAAAnB,EAAAC,OAAA,uDACEiB,GAAW,GADb,WAAAlB,EAAA,MAEQR,EACH0F,IAAI,WACJhD,MAAK,YAAe,IACf6M,EADc,EAAX3M,KAEH2M,EAAKvF,OAAS,IAChBkF,EAAYK,EAAKC,SACjBJ,EAAWG,EAAKC,SAChBF,EAAYC,EAAKC,UAEnBT,EAAWQ,MAEZvM,OAAM,SAAC4C,GAAD,OAAOC,QAAQC,IAAIF,MACzBG,SAAQ,kBAAMrE,GAAW,OAd9B,8DAiBC,IAGD,kBAAC,GAAD,KACE,kBAAC,GAAD,2BACCD,EACC,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,UAG5C,oCACGwI,GAAYE,GAAWE,GACtB,oCACE,kBAACZ,GAAD,KACE,kBAACE,GAAD,KACE,kBAACJ,GAAD,UACA,kBAACkB,GAAA,EAAD,CACEvI,KAAK,QACLb,KAAM,GACNI,MAAM,YAEPwI,EAAShJ,OACR,kBAAC,KAAOC,MAAR,CACE5C,MAAOA,GAAME,cACb2C,OAAQ,CAAEC,IAAK6I,EAAShJ,QACxBI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CACEhD,MAAOA,GAAME,cACb+C,KAAK,UACLF,KAAM,KAGV,kBAAC,GAAD,KAAS4I,EAASzI,MAClB,kBAAC,GAAD,YAGJ,kBAACoI,GAAD,KACE,kBAACD,GAAD,KACE,kBAACJ,GAAD,UACA,kBAACkB,GAAA,EAAD,CACEvI,KAAK,QACLb,KAAM,GACNI,MAAM,YAEP0I,EAAQlJ,OACP,kBAAC,KAAOC,MAAR,CACE5C,MAAOA,GAAME,cACb2C,OAAQ,CAAEC,IAAK+I,EAAQlJ,QACvBI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CACEhD,MAAOA,GAAME,cACb+C,KAAK,UACLF,KAAM,KAGV,kBAAC,GAAD,KAAS8I,EAAQ3I,MACjB,kBAAC,GAAD,WAEF,kBAACmI,GAAD,KACE,kBAACJ,GAAD,UACA,kBAACkB,GAAA,EAAD,CACEvI,KAAK,QACLb,KAAM,GACNI,MAAM,YAEP4I,EAASpJ,OACR,kBAAC,KAAOC,MAAR,CACE5C,MAAOA,GAAME,cACb2C,OAAQ,CAAEC,IAAKiJ,EAASpJ,QACxBI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CACEhD,MAAOA,GAAME,cACb+C,KAAK,UACLF,KAAM,KAGV,kBAACkI,GAAD,KAAUc,EAAS7I,MACnB,kBAAC,GAAD,aAKR,kBAACkI,GAAD,KACGI,EAAQnI,KAAI,WAAuBoD,GAAvB,IAAGjD,EAAH,EAAGA,GAAIb,EAAP,EAAOA,OAAQO,EAAf,EAAeA,KAAf,OACX,kBAAC,GAAD,CAAKK,IAAKC,GACR,kBAAC0H,GAAD,KACE,kBAACD,GAAD,KAAUxE,EAAQ,IAEpB,kBAAC,GAAD,CACEzG,MAAOA,GAAMY,OACb6C,QAAS,kBAAMzB,EAAW0B,SAAS,SAAU,CAAEF,SAE9Cb,EACC,kBAAC,KAAOC,MAAR,CACE5C,MAAOA,GAAMe,SACb8B,OAAQ,CAAEC,IAAKH,GACfI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CACEhD,MAAOA,GAAMe,SACbkC,KAAK,UACLF,KAAM,KAGV,kBAAC,GAAD,KAASG,GACT,kBAAC,GAAD,mBCjIZkJ,GAAelE,eAsBNmE,GApBO,kBACpB,kBAACD,GAAahE,UAAd,CAAwBC,iBAAiB,WACvC,kBAAC+D,GAAa9D,OAAd,CACE1E,KAAK,UACL2E,UAAWgD,GACX/C,QAAS,CAAEC,aAAa,KAE1B,kBAAC2D,GAAa9D,OAAd,CACE1E,KAAK,SACL2E,UAAWlH,GACXmH,QAAS,CAAEC,aAAa,KAE1B,kBAAC2D,GAAa9D,OAAd,CACE1E,KAAK,SACL2E,UAAWe,GACXd,QAAS,CAAEC,aAAa,OC0FxBhE,GAASxD,KAAOQ,WAAV,wFAMN6K,GAAarL,KAAOE,KAAV,8GAOVoL,GAActL,KAAOC,KAAV,qBAEXK,GAAMN,KAAOC,KAAV,2NAWHsL,GAAwBvL,KAAOC,KAAV,iIAQrBuL,GAAWxL,KAAOC,KAAV,uCAIRwL,GAAgBzL,KAAOC,KAAV,sLAUb4D,GAAU7D,KAAOC,KAAV,sJAQPyL,GAAS1L,KAAOC,KAAV,yGAON0L,GAAQ3L,KAAOE,KAAV,kIAQL4D,GAAY9D,KAAOE,KAAV,8GAOT0L,GAAS5L,KAAOE,KAAV,iIAQNyD,GAAS3D,KAAOC,KAAV,yIAQNU,GAASX,KAAOC,KAAV,mCAINF,GAAYC,KAAOC,KAAV,4FAMTC,GAAOF,KAAOE,KAAV,iIAQJ0D,GAAQ5D,KAAOU,iBAAV,yFAMImL,GAxOI,SAAC,GAAkC,IAAhC9K,EAA+B,EAA/BA,WACd7C,EAD6C,EAAnB8F,MACbD,OACnB,EAAoChH,mBAAS,IAA7C,WAAO+O,EAAP,KAAmBC,EAAnB,KACA,EAA8BhP,mBAAS,IAAvC,WAAOyL,EAAP,KAAgBC,EAAhB,KACA,EAA8B1L,oBAAS,GAAvC,WAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA0B5L,mBAASmB,EAAK8N,MAAMvG,QAA9C,WAAOuG,EAAP,KAAcC,EAAd,KACA,EAAsClP,mBAASmB,EAAKgO,aAApD,WAAOA,EAAP,KAAoBC,EAApB,KAgBA,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEpN,MAAO,CAAEmF,YAAa,QACtB1B,QAAS,kBAAMzB,EAAWoD,WAE1B,kBAACC,GAAA,EAAD,CAAWzB,KAAK,YAAYb,KAAM,GAAII,MAAM,aAE9C,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAOhE,EAAK2E,UAGhB,kBAAC,GAAD,KACG3E,EAAK+E,MACJ,kBAAC,GAAD,CAAaA,MAAO/E,EAAK+E,QAEzB,oCACE,kBAAC0I,GAAD,KAAQzN,EAAKkO,OACZlO,EAAKmG,MACJ,kBAAC1C,GAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK3D,EAAKmG,OACpBd,WAAW,UACXxE,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAEhC,KACJ,kBAAC,GAAD,KAAYpB,EAAKoG,YAIvB,kBAACoH,GAAD,KACE,kBAAC,GAAD,CAAO3M,MAAO,CAAEmF,YAAa,SAC3B,kBAAC,GAAD,CAAQnF,MAAO,CAAEmD,MAAO,YAAc8J,GACtC,kBAACjJ,GAAA,EAAD,CAAeJ,KAAK,WAAWb,KAAM,GAAII,MAAM,aAEjD,kBAAC,GAAD,KACE,kBAAC,GAAD,KAASgK,EAAYzG,QACrB,kBAACrB,GAAA,EAAD,CAAWzB,KAAK,WAAWb,KAAM,GAAII,MAAM,YAG/C,kBAACqJ,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACrH,GAAA,EAAD,CAAWzB,KAAK,WAAWb,KAAM,GAAII,MAAM,YAC3C,kBAACuF,GAAD,CACE2B,YAAY,mBACZD,qBAAqB,UACrBvL,MAAOkO,EACPO,WAAW,EACXC,cAAe,EACfC,aAAcR,EACdS,UAAW,IACXzN,MAAO,CAAEO,OAAQ,GAAImN,kBAAmB,WAEvCX,GACD,kBAAC,GAAD,CAAOtJ,QAtEH,oBAAAvG,EAAAC,OAAA,kEAAAD,EAAA,MACVR,EACHmN,IADG,aACc1K,EAAKqE,GAAM,CAAEuJ,eAC9B3N,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACP8N,EAAe9N,EAAK6N,aACpBD,EAAS5N,EAAK2N,OACdD,EAAc,OAEftN,OAAM,YAA+B,IAA5BL,EAA2B,EAA3BA,SACRqK,EAAU,MAACrK,OAAD,EAACA,EAAUC,MACrBsK,GAAW,OAVC,6DAsEuB5J,MAAO,CAAEmF,YAAa,SAC/C,kBAACnB,GAAA,EAAD,CAAeJ,KAAK,OAAOb,KAAM,GAAII,MAAM,eAKnD,kBAACoJ,GAAD,KACGY,EAAY9J,KAAI,SAAC0J,GAAD,OACf,kBAAC,GAAD,CAAKxJ,IAAKwJ,EAAWvJ,IACnB,kBAAC,GAAD,CAAOxD,MAAO,CAAEmF,YAAa,SAC1B4H,EAAWY,QAAQhL,OAClB,kBAAC,KAAOC,MAAR,CACEC,OAAQ,CAAEC,IAAKiK,EAAWY,QAAQhL,QAClCI,KAAM,KAGR,kBAAC,KAAOC,KAAR,CACEC,KAAK,UACLjD,MAAO,CAAEW,gBAAiB,WAC1BoC,KAAM,MAIZ,kBAACuJ,GAAD,KAAaS,EAAWA,kBAKhC,kBAACvC,GAAA,EAAD,CAAUC,QAASd,EAASe,UAAW,kBAAMd,GAAW,KACrDH,M,4BC9GLzI,GAAYC,KAAOC,KAAV,6FAMT0M,GAAS3M,KAAOU,iBAAV,yKASNmD,GAAU7D,KAAOU,iBAAV,oJAQPgL,GAAS1L,KAAOC,KAAV,2GAON0L,GAAQ3L,KAAOE,KAAV,kIAQL2L,GAAa7L,KAAOE,KAAV,yFAMVS,GAASX,KAAOE,KAAV,8GAON0M,GAAS5M,KAAO2B,MAAV,uGAONkL,GAAa7M,KAAOC,KAAV,0MAWV6M,GAAW9M,KAAOE,KAAV,gHAOR6M,GAAc/M,KAAOE,KAAV,6GAOX8M,GAAkBhN,KAAOU,iBAAV,2GAgGNuM,GArFF,SAAC,GAAqB,IAAnB/O,EAAkB,EAAlBA,KACNlB,EAAS6B,IAAT7B,KACF+D,EAAamM,2BACnB,EAAgCnQ,mBAASmB,EAAK8N,MAAMvG,QAApD,WAAO0H,EAAP,KAAiBC,EAAjB,KACA,EAAgCrQ,mBAASmB,EAAKgO,YAAYzG,QAA1D,WAAO4H,EAAP,KAAiBC,EAAjB,KACA,EAA0BvQ,mBACxBmB,EAAK8N,MAAMuB,MAAK,SAACC,GAAD,OAAQA,EAAGC,UAAH,MAAczQ,OAAd,EAAcA,EAAMuF,QAD9C,WAAOmL,EAAP,KAAcC,EAAd,KAqBA,OACE,kBAAC,GAAD,CACE5O,MAAO,CACLa,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdI,UAAW,IAGb,kBAAC8M,GAAD,CAAQnK,QAAS,kBAAMzB,EAAW0B,SAAS,aAAcvE,KACtDA,EAAK0P,MAAMlM,OACV,kBAACkL,GAAD,CAAQhL,OAAQ,CAAEC,IAAK3D,EAAK0P,MAAMlM,UAElC,kBAACmL,GAAD,KACE,kBAACgB,GAAA,EAAD,CAAclL,KAAK,OAAOb,KAAM,GAAII,MAAM,WAG9C,kBAAC,GAAD,KAAShE,EAAK2E,SAEhB,kBAAC,GAAD,CAASL,QAAS,kBAAMzB,EAAW0B,SAAS,aAAcvE,KACvDA,EAAK+E,MACJ,kBAAC,GAAD,CAAaA,MAAO/E,EAAK+E,QAEzB,oCACE,kBAAC,GAAD,KAAQ/E,EAAKkO,OACZlO,EAAKmG,MACJ,kBAAC1C,GAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK3D,EAAKmG,OACpBd,WAAW,UACXxE,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAEhC,KACJ,kBAAC,GAAD,CAAYgN,cAAe,IAAKpO,EAAKoG,YAI3C,kBAAC,GAAD,KACE,kBAAC0I,GAAD,CAAiBxK,QAASkL,EAnDX,oBAAAzR,EAAAC,OAAA,kEAAAD,EAAA,MACbR,EAAIqS,OAAJ,YAAuB5P,EAAKqE,IAAMpE,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACtC2N,EAAoC3N,EAApC2N,MAAOE,EAA6B7N,EAA7B6N,YACfkB,EAAYpB,EAAMvG,QAClB6H,EAAYpB,EAAYzG,QACxBkI,EAAS3B,EAAMuB,MAAK,SAACC,GAAD,OAAQA,EAAGC,UAAH,MAAczQ,OAAd,EAAcA,EAAMuF,YAL/B,6DARA,oBAAAtG,EAAAC,OAAA,kEAAAD,EAAA,MACbR,EAAImN,IAAJ,WAAmB1K,EAAKqE,IAAMpE,MAAK,YAAe,IAAZE,EAAW,EAAXA,KAClC2N,EAAoC3N,EAApC2N,MAAOE,EAA6B7N,EAA7B6N,YACfkB,EAAYpB,EAAMvG,QAClB6H,EAAYpB,EAAYzG,QACxBkI,EAAS3B,EAAMuB,MAAK,SAACC,GAAD,OAAQA,EAAGC,UAAH,MAAczQ,OAAd,EAAcA,EAAMuF,YAL/B,8DA4Db,kBAACuK,GAAD,KAAWK,GACVO,EACC,kBAAC3K,GAAA,EAAD,CAAeJ,KAAK,WAAWb,KAAM,GAAII,MAAM,YAE/C,kBAACa,GAAA,EAAD,CAAeJ,KAAK,mBAAmBb,KAAM,GAAII,MAAM,aAG3D,kBAAC8K,GAAD,KACE,kBAACD,GAAD,KAAcM,GACd,kBAACjJ,GAAA,EAAD,CAAWzB,KAAK,WAAWb,KAAM,GAAII,MAAM,cC5K/C6L,GAAgB/N,KAAOgO,aAAV,iEAyEJC,GAlEF,SAAC,GAA2B,IAAzBlN,EAAwB,EAAxBA,WACd,EAA0BhE,mBAAwB,IAAlD,WAAOmR,EAAP,KAAcC,EAAd,KACA,EAAwBpR,mBAAS,GAAjC,WAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,GAAzC,WAAOuR,EAAP,KAAiBC,EAAjB,KACA,EAA8BxR,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,EAAAnB,EAAAC,OAAA,gEAEIiB,GAAW,GAFf,WAAAlB,EAAA,MAGUR,EACH0F,IADG,gCACiCiN,GACpCjQ,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACP8P,EAASD,EAAMM,OAAOnQ,EAAKA,OAC3BkQ,EAAYlQ,EAAKoQ,KAAKC,cAP9B,sDAUIpN,QAAQC,IAAR,MAVJ,uBAYIpE,GAAW,GAZf,mFAgBC,CAACiR,IAEJhR,qBAAU,WACR2D,EAAWG,YAAY,SAAS,oBAAAjF,EAAAC,OAAA,gEAE5BiB,GAAW,GAFiB,WAAAlB,EAAA,MAGtBR,EACH0F,IADG,gCACiCiN,GACpCjQ,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACP8P,EAAS9P,EAAKA,UANU,sDAS5BiD,QAAQC,IAAR,MAT4B,uBAW5BpE,GAAW,GAXiB,sFAc/B,IAQH,OACE,kBAAC4Q,GAAD,KACE,kBAACY,GAAA,EAAD,CACEtQ,KAAM6P,EACNnP,MAAO,CAAE6P,kBAAmB,IAC5BC,aAAc,SAACC,GAAD,OAAUA,EAAKvM,GAAGwM,YAChCC,WAAY,gBAAGF,EAAH,EAAGA,KAAH,OAAc,kBAAC,GAAD,CAAM5Q,KAAM4Q,KACtCG,WAAY/R,EACZgS,oBAAqB,kBACnBhS,EAAU,kBAAC,KAAD,CAAmB4E,KAAK,QAAQI,MAAM,SAAY,MAE9DiN,sBAAuB,GACvBC,aAlBW,WACXd,EAAWF,GACbC,EAAQD,EAAO,QClDfiB,GAAYpI,eAiBHqI,GAfI,kBACjB,kBAACD,GAAUlI,UAAX,CAAqBC,iBAAiB,QACpC,kBAACiI,GAAUhI,OAAX,CACE1E,KAAK,OACL2E,UAAW2G,GACX1G,QAAS,CAAEC,aAAa,KAE1B,kBAAC6H,GAAUhI,OAAX,CACE1E,KAAK,aACL2E,UAAWuE,GACXtE,QAAS,CAAEC,aAAa,OChBxBzH,GAAYC,KAAOC,KAAV,0HAQT+H,GAAkBhI,KAAOC,KAAV,+GAOfgI,GAAWjI,KAAOE,KAAV,8GAORqP,GAAavP,KAAOE,KAAV,8GAOVsP,GAAgBxP,KAAOC,KAAV,+KAUbwP,GAAOzP,KAAOU,iBAAV,4IAmFKgP,GApEO,SAAC,GAA2B,IAAzB3O,EAAwB,EAAxBA,WACvB,EAAyBlC,IAAjBF,EAAR,EAAQA,OAAQ3B,EAAhB,EAAgBA,KAChB,EAA8BD,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAOwE,MAAR,CACEC,OAAQ,CACNC,IAAG,MAAE7E,OAAF,EAAEA,EAAM0E,UAGf,kBAAC,GAAD,WAAW1E,OAAX,EAAWA,EAAMiF,MACjB,kBAACsN,GAAD,sBAAuBvS,OAAvB,EAAuBA,EAAMyE,OAAOQ,QAEtC,kBAACuN,GAAD,CACEzQ,MAAO,CACLa,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdI,UAAW,IAGb,kBAAC4P,GAAD,CAAMjN,QAAS,kBAAMzB,EAAW0B,SAAS,YACvC,kBAACC,EAAA,EAAD,CAASC,KAAK,OAAOb,KAAM,GAAII,MAAM,YACrC,kBAAC,GAAD,qBACA,kBAACkC,GAAA,EAAD,CAAWzB,KAAK,QAAQb,KAAM,GAAII,MAAM,cAG5C,kBAACsN,GAAD,CACEzQ,MAAO,CACLa,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdI,UAAW,IAGb,kBAAC4P,GAAD,CACEjN,QAAS,oBAAAvG,EAAAC,OAAA,uDACPiB,GAAW,GADJ,WAAAlB,EAAA,MAED0C,IAAS6C,SAAQ,kBAAMrE,GAAW,OAFjC,8DAKT,kBAACiH,GAAA,EAAD,CAAWzB,KAAK,SAASb,KAAM,GAAII,MAAM,QACzC,kBAAC,GAAD,CAAUnD,MAAO,CAAEmD,MAAO,QACvBhF,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,QAE1C,QAGJ,kBAACkC,GAAA,EAAD,CAAWzB,KAAK,QAAQb,KAAM,GAAII,MAAM,YCtG5CnC,GAAYC,KAAOC,KAAV,0HAQT+H,GAAkBhI,KAAOC,KAAV,+GAOfgI,GAAWjI,KAAOE,KAAV,8GAORgI,GAAWlI,KAAOE,KAAV,8GAORiI,GAAgBnI,KAAOC,KAAV,+KAUb0D,GAAS3D,KAAOC,KAAV,yIAONmI,GAAcpI,KAAOU,iBAAV,qBAwLFiP,GA/KA,SAAC,GAA2B,IAAzB5O,EAAwB,EAAxBA,WAChB,EAA0BlC,IAAlB7B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAkC2H,eAA1BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACjB,EAA8B/H,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,WAAOyL,EAAP,KAAgBC,EAAhB,KACA,EAA8B1L,oBAAS,GAAvC,WAAO2L,EAAP,KAAgBC,EAAhB,KAmCMvD,EAAW,SAAO/G,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAETR,EACHmN,IADG,mBACa5L,OADb,EACaA,EAAMuF,IAAMlE,GAC5BF,MAAK,2BAAAlC,EAAAC,OAAA,uDAASmC,EAAT,EAASA,KACbpB,EAAQoB,GADJ,WAAApC,EAAA,MAEEE,IAAaoC,QAAQ,YAAahB,KAAKiB,UAAUH,KAFnD,OAGJsK,GAAW,GACXF,EAAW,kCACX1H,EAAW6O,QAAQ,gBALf,+DAOLnR,OAAM,SAAC4C,GACNC,QAAQC,IAAIF,MAEbG,SAAQ,WACPrE,GAAW,OAfA,6DAmBjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAaqF,QAAS,kBAAMzB,EAAW6O,QAAQ,kBAC7C,kBAACxL,GAAA,EAAD,CAAWzB,KAAK,YAAYb,KAAM,GAAII,MAAM,cAGhD,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAaM,QA5DQ,4BAAAvG,EAAAC,OAAA,kEAAAD,EAAA,MAEjB4M,QAFiB,WAIQ,IAJR,OAIJ/C,QAJI,uBAKvBC,MAAM,iDALiB,4CAAA9J,EAAA,MASA4M,QATA,WAUM,KAD3BzC,EATqB,QAURC,UAVQ,mDAcnBC,EAAQF,EAAavE,IAE3B0E,MAAMD,GACHnI,MAAK,SAACqI,GAAD,OAASA,EAAIC,UAClBtI,MAAK,SAAOsI,GAAP,eAAAxK,EAAAC,OAAA,uDACEwK,EAAO,IAAIC,MACZzB,OAAO,SAAUuB,GAFlB,WAAAxK,EAAA,MAGER,EACHmN,IADG,mBACa5L,OADb,EACaA,EAAMuF,IAAMmE,GAC5BvI,MAAK,2BAAAlC,EAAAC,OAAA,uDAASmC,EAAT,EAASA,KACbpB,EAAQoB,GADJ,WAAApC,EAAA,MAEEE,IAAaoC,QAAQ,YAAahB,KAAKiB,UAAUH,KAFnD,OAGJsK,GAAW,GACXF,EAAW,gCAJP,+DAMLhK,OAAM,SAAC4C,GAAD,OAAOC,QAAQC,IAAIF,OAXxB,+DAlBiB,+DA6DnB,kBAAC,KAAOM,MAAR,CACEC,OAAQ,CACNC,IAAG,MAAE7E,OAAF,EAAEA,EAAM0E,QAEbI,KAAM,MAGV,kBAAC,GAAD,WAAW9E,OAAX,EAAWA,EAAMiF,MACjB,kBAAC,GAAD,uBAEF,kBAAC,GAAD,KACE,kBAAC8F,GAAD,KACE,kBAACD,GAAD,aACA,kBAAC,KAAD,CACEnF,KAAK,OACLkC,QAASA,EACTiE,aAAY,MAAE9L,OAAF,EAAEA,EAAMiF,KACpB8G,OAAQ,oBAAGC,MAASpL,EAAZ,EAAYA,MAAOqL,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACzB,GAAD,CACE0B,qBAAqB,UACrBC,YAAY,OACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,QAKhB,kBAAClB,GAAD,KACE,kBAACD,GAAD,cACA,kBAAC,KAAD,CACEnF,KAAK,QACLkC,QAASA,EACTiE,aAAY,MAAE9L,OAAF,EAAEA,EAAMe,MACpB8R,MAAO,CACLC,QAAS,CACPlS,MAAO,4CACP4K,QAAS,iCAGbO,OAAQ,oBAAGC,MAASpL,EAAZ,EAAYA,MAAOqL,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACzB,GAAD,CACEsI,iBAAiB,QACjB5G,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,QAKhB,kBAAClB,GAAD,KACE,kBAACD,GAAD,cACA,kBAAC,KAAD,CACEnF,KAAK,WACLkC,QAASA,EACTkE,OAAQ,oBAAGC,MAASpL,EAAZ,EAAYA,MAAOqL,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACzB,GAAD,CACEsI,iBAAiB,WACjBC,iBAAe,EACf7G,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,SAMlB,kBAAClB,GAAD,CAAUhJ,MAAO,CAAEuK,aAAc,IAC/B,kBAAC1B,GAAD,CACE7I,MAAO,CACLa,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdI,UAAW,IAGb,kBAACgI,GAAD,CAAkBrF,QAAS,kBAAMsC,EAAaM,EAAbN,KAC9B5H,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,SAE1C,YAKR,kBAACqH,GAAA,EAAD,CACEC,QAASd,EACTe,UAAW,WACTd,GAAW,GACXF,EAAW,MAGZD,KC1OHyH,GAAchJ,eAiBLiJ,GAfM,kBACnB,kBAACD,GAAY9I,UAAb,CAAuBC,iBAAiB,gBACtC,kBAAC6I,GAAY5I,OAAb,CACE1E,KAAK,eACL2E,UAAWoI,GACXnI,QAAS,CAAEC,aAAa,KAE1B,kBAACyI,GAAY5I,OAAb,CACE1E,KAAK,SACL2E,UAAWqI,GACXpI,QAAS,CAAEC,aAAa,OCdxB2I,GAAMC,eAuDGC,GArDa,WAC1B,OACE,kBAACF,GAAIhJ,UAAL,CACEC,iBAAiB,OACjBkJ,cAAe,CACbC,WAAW,EACXC,gBAAiB,UACjBC,kBAAmB,SAGrB,kBAACN,GAAI9I,OAAL,CACE1E,KAAK,OACL2E,UAAWgI,GACX/H,QAAS,CACPmJ,WAAY,gBAAGxO,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,KAAV,OACV,kBAAC6O,EAAA,EAAD,CAAQhO,KAAK,YAAYb,KAAMA,EAAMI,MAAOA,QAIlD,kBAACiO,GAAI9I,OAAL,CACE1E,KAAK,UACL2E,UAAW8D,GACX7D,QAAS,CACPmJ,WAAY,gBAAGxO,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,KAAV,OACV,kBAACY,EAAA,EAAD,CAASC,KAAK,QAAQb,KAAMA,EAAMI,MAAOA,QAI/C,kBAACiO,GAAI9I,OAAL,CACE1E,KAAK,WACL2E,UAAWJ,GACXK,QAAS,CACPmJ,WAAY,gBAAGxO,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,KAAV,OACV,kBAAC8O,GAAA,EAAD,CACEjO,KAAK,0BACLb,KAAMA,EACNI,MAAOA,QAKf,kBAACiO,GAAI9I,OAAL,CACE1E,KAAK,UACL2E,UAAW4I,GACX3I,QAAS,CACPmJ,WAAY,gBAAGxO,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,KAAV,OACV,kBAACY,EAAA,EAAD,CAASC,KAAK,WAAWb,KAAMA,EAAMI,MAAOA,U,+BCpClDnC,GAAYC,KAAOC,KAAV,sIAQT4Q,GAAO7Q,KAAOC,KAAV,yGAOJC,GAAOF,KAAOE,KAAV,4GAOJ4Q,GAAY9Q,KAAOC,KAAV,sNAWTwD,GAAazD,KAAOU,iBAAV,8HAQVqQ,GAAmB/Q,KAAOE,KAAV,yFAMhBuL,GAAgBzL,KAAOC,KAAV,sLAuLJ+Q,OAtKf,YAAsC,EAArBjQ,WAAsB,IACrC,EAAkChE,oBAAS,GAA3C,WAAOkU,EAAP,KAAkBC,EAAlB,KACA,EAA8BnU,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,WAAOyL,EAAP,KAAgBC,EAAhB,KACA,EAA8B1L,oBAAS,GAAvC,WAAO2L,EAAP,KAAgBC,EAAhB,KACQ7K,EAAUe,IAAVf,MACR,EAAyC8G,aAAQ,CAAEuM,KAAM,QAAjDtM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAEzBqM,EAAc,SAAO/S,GAAP,SAAApC,EAAAC,OAAA,uDAClBiB,GAAW,GADO,WAAAlB,EAAA,MAEZR,EACHyC,KAAK,aAAcG,GACnBF,MAAK,WACJwK,GAAW,GACX5D,EAAM,IACN0D,EAAW,qDAEZhK,OAAM,SAAC4C,GACN,IAAQjD,EAAaiD,EAAbjD,SACRuK,GAAW,GACXF,EAAU,MAACrK,OAAD,EAACA,EAAUC,KAAKmK,SAC1B0I,GAAa,MAEd1P,SAAQ,WACPrE,GAAW,OAhBG,6DAoBdiI,EAAW,SAAO/G,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAET6B,EAAMO,EAAKN,MAAOM,EAAKL,UAC1BS,OAAM,YAA+B,IAA5BL,EAA2B,EAA3BA,SACRuK,GAAW,GACXF,EAAU,MAACrK,OAAD,EAACA,EAAUC,KAAKmK,YAE3BhH,SAAQ,kBAAMrE,GAAW,OAPb,6DAUjB,OACE,kBAAC,GAAD,KACE,kBAAC0T,GAAD,KACE,kBAAClP,GAAA,EAAD,CACEC,OAAQyP,KACRtS,MAAO,CAAEM,MAAO,IAAKC,OAAQ,KAC7BiE,WAAW,YAEb,kBAAC,GAAD,KAAO0N,EAAY,kBAAoB,eAEzC,kBAACH,GAAD,KACE,kBAAC/I,GAAD,KACE,kBAACD,GAAD,cAEA,kBAAC,KAAD,CACEnF,KAAK,QACLkC,QAASA,EACTgL,MAAO,CACLyB,SAAU,6BACVxB,QAAS,CACPlS,MAAO,4CACP4K,QAAS,iCAGbO,OAAQ,oBACNC,MAASpL,EADH,EACGA,MAAOqL,EADV,EACUA,OAAQC,EADlB,EACkBA,SACV1M,EAFR,EAEN+U,WAAc/U,MAFR,OAIN,oCACE,kBAAC,GAAD,KACE,kBAACkG,EAAA,EAAD,CAASC,KAAK,OAAOb,KAAM,GAAII,MAAM,YACrC,kBAACuF,GAAD,CACEsI,iBAAiB,QACjB5G,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,KAGXzM,GAAS,kBAACmL,GAAD,KAAYnL,EAAMgM,eAKlCyI,GACA,kBAAClJ,GAAD,CAAUhJ,MAAO,CAAEuK,aAAc,WAC/B,kBAACxB,GAAD,cAEA,kBAAC,KAAD,CACEnF,KAAK,WACLkC,QAASA,EACTgL,MAAO,CACLyB,SAAU,iCAEZvI,OAAQ,oBACNC,MAASpL,EADH,EACGA,MAAOqL,EADV,EACUA,OAAQC,EADlB,EACkBA,SACV1M,EAFR,EAEN+U,WAAc/U,MAFR,OAIN,oCACE,kBAAC,GAAD,KACE,kBAACgV,GAAA,EAAD,CAAiB7O,KAAK,OAAOb,KAAM,GAAII,MAAM,YAC7C,kBAACuF,GAAD,CACEsI,iBAAiB,WACjBC,iBAAe,EACf7G,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACVtL,MAAOA,EACPqL,OAAQA,KAGXzM,GAAS,kBAACmL,GAAD,KAAYnL,EAAMgM,cAMtC,kBAACT,GAAD,CAAUhJ,MAAO,CAAEuK,aAAc,IAC/B,kBAAC1B,GAAD,CACE7I,MAAO,CACLa,eAAgB,GAChBL,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdI,UAAW,GAEb4R,SAAUvU,EACVsF,QAAS,WACPyO,EACInM,EAAasM,EAAbtM,GACAA,EAAaM,EAAbN,KAGN,kBAAC+C,GAAD,KACG3K,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,SACxC+O,EACF,SAEA,WAIN,kBAAC,GAAD,CAAYzO,QAAS,kBAAM0O,GAAcD,KACvC,kBAACF,GAAD,KACG7T,EACC,kBAAC,KAAD,CAAmBiF,WAAW,EAAMD,MAAM,SACxC+O,EACF,oBAEA,wBAMV,kBAAC1H,GAAA,EAAD,CAAUC,QAASd,EAASe,UAAW,kBAAMd,GAAW,KACrDH,KC/OHkJ,GAAWzK,eACTE,GAAsBuK,GAAtBvK,UAAWE,GAAWqK,GAAXrK,OAeJsK,GAbc,WAC3B,OACE,kBAACxK,GAAD,CAAWC,iBAAiB,SAC1B,kBAACC,GAAD,CAAQ1E,KAAK,QAAQ2E,UAAW0J,GAAOzJ,QAAS,CAAEC,aAAa,KAC/D,kBAACH,GAAD,CACE1E,KAAK,MACL2E,UAAW+I,GACX9I,QAAS,CAAEC,aAAa,OCWjBoK,GApBA,WACb,MAA4B/S,IAApBhB,EAAR,EAAQA,OAER,OAFA,EAAgBX,QAIZ,kBAAC+C,EAAA,EAAD,CACElB,MAAO,CACL8S,KAAM,EACNC,eAAgB,SAChBC,WAAY,WAGd,kBAACC,EAAA,EAAD,CAAmBlQ,KAAK,WAKvBjE,EAAS,kBAAC,GAAD,MAAgB,kBAAC,GAAD,OCRnBoU,GAVO,WACpB,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SCJO,SAASC,KACtB,MAAiBC,YAAS,CACxBC,QAASC,EAAQ,OAGnB,OAJA,YAIkC,kBAAC,GAAD,MAAjB,kBAAC,IAAD,Q,+DCRf,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CzU,MAAK,SAAS0U,OAGdpU,OAAM,SAASjC,GACd8E,QAAQuR,KAAK,oCAAqCrW,U,oBCV1DjB,EAAOC,QAAU,IAA0B,wB","file":"static/js/app.1c6ab105.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new.fffe9f1a.png\";","import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst api = axios.create({\r\n  baseURL: __DEV__ ? \"http://192.168.15.23:3333\" : \"https://api.calebe.online\",\r\n});\r\n\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n    config.headers.common.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport api from \"../Services/api\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { IUsuario } from \"../../declarations\";\r\n\r\ninterface AuthContextProps {\r\n  signed: boolean;\r\n  user: IUsuario | null;\r\n  setUser: React.Dispatch<React.SetStateAction<IUsuario | null>>;\r\n  login(email: string, password: string): Promise<AxiosResponse>;\r\n  logout(): Promise<AxiosResponse>;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({} as AuthContextProps);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUsuario | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadStorage() {\r\n      const storageUser = await AsyncStorage.getItem(\"auth:user\");\r\n      const storageToken = await AsyncStorage.getItem(\"auth:token\");\r\n      if (storageToken && storageUser) {\r\n        setUser(JSON.parse(storageUser));\r\n        setLoading(false);\r\n        api.defaults.headers.Authorization = `Bearer ${storageToken}`;\r\n      } else if (!storageUser) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadStorage();\r\n  }, []);\r\n\r\n  async function login(email: string, password: string) {\r\n    return new Promise<AxiosResponse>((resolve, reject) => {\r\n      api\r\n        .post(\"/login\", { email, password })\r\n        .then(async (response) => {\r\n          const { token, user } = response.data;\r\n          setUser(user);\r\n\r\n          await AsyncStorage.setItem(\"auth:user\", JSON.stringify(user)).then(\r\n            async () => {\r\n              await AsyncStorage.setItem(\"auth:token\", token).then(() => {\r\n                api.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n                api.defaults.headers.Authorization = `Bearer ${token}`;\r\n\r\n                resolve(response);\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          reject(erro);\r\n        });\r\n    });\r\n  }\r\n\r\n  async function logout() {\r\n    return new Promise<AxiosResponse>((resolve) => {\r\n      api.post(\"/logout\").then(async (response) => {\r\n        await AsyncStorage.clear().then(() => {\r\n          setUser(null);\r\n          resolve(response);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ signed: !!user, user, setUser, login, logout, loading }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  return context;\r\n}\r\n\r\nexport default AuthContext;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../Services/api\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDesafio } from \"../../../declarations\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { Feather, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { DesafiosStackParamsList } from \"../../Routes/desafios.routes\";\r\n\r\ntype Props = StackScreenProps<DesafiosStackParamsList, \"Desafios\">;\r\nconst Desafios = ({ navigation }: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [desafios, setDesafios] = useState<IDesafio[]>([] as IDesafio[]);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      setLoading(true);\r\n      await api\r\n        .get(`/desafio?equipeId=${user?.equipeId}`)\r\n        .then(({ data }) => {\r\n          setDesafios(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Text>Desafios</Text>\r\n      <EquipeContainer style={style.shadow}>\r\n        {user?.equipe.avatar ? (\r\n          <Avatar.Image\r\n            style={style.shadowRanking}\r\n            source={{ uri: user?.equipe.avatar }}\r\n            size={80}\r\n          />\r\n        ) : (\r\n          <Avatar.Icon style={style.shadowRanking} icon=\"account\" size={80} />\r\n        )}\r\n        <Equipe>{user?.equipe.nome}</Equipe>\r\n        <Pontuacao>0</Pontuacao>\r\n      </EquipeContainer>\r\n      {loading && (\r\n        <ActivityIndicator size=\"large\" color=\"#FFF\" animating={true} />\r\n      )}\r\n      <DesafiosContainer>\r\n        {desafios.map((desafio) => (\r\n          <Row key={desafio.id}>\r\n            <Desafio\r\n              style={style.shadow}\r\n              onPress={() => navigation.navigate(\"Desafio\", desafio)}\r\n            >\r\n              <Feather\r\n                name=\"award\"\r\n                size={20}\r\n                style={{ margin: \"1rem\" }}\r\n                color=\"#127c82\"\r\n              />\r\n              <Titulo>{desafio.titulo}</Titulo>\r\n              <Tag>\r\n                <Valor>+ {desafio.pontos}</Valor>\r\n              </Tag>\r\n              <MaterialIcons name=\"arrow-right\" size={28} color=\"#5CEAA0\" />\r\n            </Desafio>\r\n          </Row>\r\n        ))}\r\n      </DesafiosContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst EquipeContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  margin: 0.5rem;\r\n`;\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst DesafiosContainer = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Desafio = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 200;\r\n  font-size: 14px;\r\n  color: white;\r\n`;\r\n\r\nconst Tag = styled.View`\r\n  background-color: #5ceaa0;\r\n\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Valor = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  color: white;\r\n  font-size: 12px;\r\n  margin: 5px 10px;\r\n`;\r\n\r\nexport default Desafios;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Video } from \"expo-av\";\r\n\r\ninterface Props {\r\n  video: string;\r\n}\r\n\r\nconst VideoPlayer = ({ video }: Props) => {\r\n  const videoRef = useRef<Video>(null);\r\n\r\n  return (\r\n    <Video\r\n      ref={videoRef}\r\n      source={{ uri: video }}\r\n      useNativeControls\r\n      resizeMode=\"contain\"\r\n      style={{ width: \"100%\" }}\r\n    />\r\n  );\r\n};\r\nexport default VideoPlayer;\r\n","import React from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport VideoPlayer from \"../../Components/VideoPlayer\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { DesafiosStackParamsList } from \"../../Routes/desafios.routes\";\r\n\r\ntype Props = StackScreenProps<DesafiosStackParamsList, \"Desafio\">;\r\n\r\nconst Desafio = ({ navigation, route: { params } }: Props) => {\r\n  const { user } = useAuth();\r\n  const desafioId = params.id;\r\n  return (\r\n    <Scroll>\r\n      <Container>\r\n        <Action>\r\n          <Click\r\n            style={{ marginRight: \"1rem\" }}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n          </Click>\r\n          <Titulo>\r\n            <Text>{params.titulo}</Text>\r\n          </Titulo>\r\n        </Action>\r\n        <Content>\r\n          {params.video ? (\r\n            <VideoPlayer video={params.video} />\r\n          ) : (\r\n            <>\r\n              {params.cover ? (\r\n                <Image\r\n                  source={{ uri: params.cover }}\r\n                  resizeMode=\"contain\"\r\n                  style={{ width: \"100%\", height: 200 }}\r\n                />\r\n              ) : null}\r\n              <Descricao>{params.conteudo}</Descricao>\r\n            </>\r\n          )}\r\n        </Content>\r\n        {user && (user.perfil === \"lider\" || user.perfil === \"admin\") && (\r\n          <Preencher\r\n            onPress={() =>\r\n              navigation.navigate(\"Resposta\", {\r\n                desafioId,\r\n                equipeId: user.equipeId,\r\n              })\r\n            }\r\n          >\r\n            <TextButton>Preencher Desafio</TextButton>\r\n          </Preencher>\r\n        )}\r\n      </Container>\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nconst Scroll = styled.ScrollView`\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  flex: 1;\r\n`;\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst TextButton = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Preencher = styled.TouchableOpacity`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Descricao = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Desafio;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, MaterialIcons, Feather } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, FAB } from \"react-native-paper\";\r\nimport * as Picker from \"expo-image-picker\";\r\nimport api from \"../../Services/api\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { DesafiosStackParamsList } from \"../../Routes/desafios.routes\";\r\nimport { AxiosError } from \"axios\";\r\n\r\ntype RespostaType = {\r\n  resposta: string;\r\n};\r\n\r\ntype Props = StackScreenProps<DesafiosStackParamsList, \"Resposta\">;\r\n\r\nconst Resposta = ({ navigation, route: { params } }: Props) => {\r\n  const { equipeId, desafioId } = params;\r\n  const [loading, setLoading] = useState(false);\r\n  const { control, handleSubmit, reset } = useForm();\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"respostas\",\r\n  });\r\n\r\n  const onSubmit = async (data: RespostaType[]) => {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/resposta\", { ...data, equipeId, desafioId })\r\n      .then(() => {\r\n        reset({ respostas: [] });\r\n        navigation.popToTop();\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult = await Picker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await Picker.launchImageLibraryAsync({\r\n      mediaTypes: Picker.MediaTypeOptions.All,\r\n      quality: 1,\r\n      videoQuality: 0.7,\r\n    });\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n    setLoading(true);\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"file\", blob);\r\n        form.append(\"pasta\", \"desafios/resposta\");\r\n        await api\r\n          .post(\"/upload\", form)\r\n          .then(async ({ data }) => {\r\n            append({ resposta: data.url });\r\n          })\r\n          .catch((e) => console.log(e))\r\n          .finally(() => setLoading(false));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <Click\r\n          style={{ marginRight: \"1rem\" }}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n        </Click>\r\n        <Titulo>\r\n          <Text>Desafio 1</Text>\r\n        </Titulo>\r\n      </Action>\r\n      <Content>\r\n        {fields.map((resposta, index) => (\r\n          <Envio key={resposta.id}>\r\n            <Feather name=\"file\" size={24} color=\"#127C82\" />\r\n            <NomeArquivo>{`Arquivo ${index}`}</NomeArquivo>\r\n            <Click\r\n              style={{ marginRight: \"1rem\" }}\r\n              onPress={() => remove(index)}\r\n            >\r\n              <MaterialIcons name=\"delete\" size={24} color=\"red\" />\r\n            </Click>\r\n          </Envio>\r\n        ))}\r\n      </Content>\r\n      {fields.length > 0 && (\r\n        <Salvar onPress={() => handleSubmit(onSubmit)()}>\r\n          {loading ? (\r\n            <ActivityIndicator animating={true} color=\"#FFF\" />\r\n          ) : (\r\n            <TextButton>Salvar</TextButton>\r\n          )}\r\n        </Salvar>\r\n      )}\r\n      <FAB\r\n        small\r\n        icon=\"plus\"\r\n        label=\"Adicionar\"\r\n        onPress={openImagePickerAsync}\r\n        loading={loading}\r\n        style={{\r\n          position: \"absolute\",\r\n          margin: \"1rem\",\r\n          right: 0,\r\n          bottom: 0,\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeArquivo = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst TextButton = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Envio = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Salvar = styled.TouchableOpacity`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border-radius: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nexport default Resposta;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Desafios from \"../Pages/Desafios/Desafios\";\r\nimport Desafio from \"../Pages/Desafios/Desafio\";\r\nimport Resposta from \"../Pages/Desafios/Resposta\";\r\nimport { IDesafio } from \"../../declarations\";\r\n\r\nexport type DesafiosStackParamsList = {\r\n  Desafios: undefined;\r\n  Desafio: IDesafio;\r\n  Resposta: {\r\n    desafioId: number;\r\n    equipeId: number;\r\n  };\r\n};\r\n\r\nconst DesafioStack = createStackNavigator<DesafiosStackParamsList>();\r\n\r\nconst DesafiosRoutes = () => (\r\n  <DesafioStack.Navigator initialRouteName=\"Desafios\">\r\n    <DesafioStack.Screen\r\n      name=\"Desafios\"\r\n      component={Desafios}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <DesafioStack.Screen\r\n      name=\"Desafio\"\r\n      component={Desafio}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <DesafioStack.Screen\r\n      name=\"Resposta\"\r\n      component={Resposta}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </DesafioStack.Navigator>\r\n);\r\n\r\nexport default DesafiosRoutes;\r\n","import styled from \"styled-components/native\";\r\n\r\nexport const Input = styled.TextInput`\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ErrorText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  color: red;\r\n`;\r\n\r\nexport const Button = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #5ea6a9;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ButtonInsideText = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n`;\r\n\r\nexport const Label = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nexport const FormItem = styled.View`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 1rem;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../../Components\";\r\nimport api from \"../../Services/api\";\r\nimport { IUsuario } from \"../../../declarations\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { RankingStackParamList } from \"../../Routes/ranking.routes\";\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Editar\">;\r\n\r\nconst EditarEquipe = ({ navigation, route: { params } }: Props) => {\r\n  const [foto, setFoto] = useState(params.avatar);\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/equipe/${params.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setFoto(data.avatar);\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/equipe/${params.id}`, data)\r\n      .then(async () => {\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.goBack();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          {foto ? (\r\n            <Avatar.Image\r\n              source={{\r\n                uri: foto,\r\n              }}\r\n              size={90}\r\n            />\r\n          ) : (\r\n            <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n          )}\r\n        </ClickButton>\r\n        <NomeText>{params.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={params.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"instagram\"\r\n            control={control}\r\n            defaultValue={params.instagram}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Instagram\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nexport default EditarEquipe;\r\n","import { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { IEquipe } from \"../../../declarations\";\r\nimport api from \"../../Services/api\";\r\nimport { RankingStackParamList } from \"../../Routes/ranking.routes\";\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Equipe\">;\r\n\r\nconst Equipe = ({\r\n  navigation,\r\n  route: {\r\n    params: { id },\r\n  },\r\n}: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [equipe, setEquipe] = useState<IEquipe | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function getEquipe() {\r\n      setLoading(true);\r\n      await api\r\n        .get(`/equipe/${id}`)\r\n        .then(({ data }) => {\r\n          setEquipe(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipe();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#FFF\" />\r\n        </ClickButton>\r\n      </Action>\r\n      {loading ? (\r\n        <ActivityIndicator animating={true} color=\"#fff\" />\r\n      ) : (\r\n        <>\r\n          {equipe && (\r\n            <PerfilContainer>\r\n              {equipe.avatar ? (\r\n                <Avatar.Image\r\n                  source={{\r\n                    uri: equipe.avatar,\r\n                  }}\r\n                  size={90}\r\n                />\r\n              ) : (\r\n                <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n              )}\r\n\r\n              <NomeText>{equipe.nome}</NomeText>\r\n              {!(user?.perfil === \"membro\" || user?.equipeId !== id) && (\r\n                <ClickButton\r\n                  onPress={() => navigation.navigate(\"Editar\", { ...equipe })}\r\n                >\r\n                  <InfoText>Editar Equipe</InfoText>\r\n                </ClickButton>\r\n              )}\r\n            </PerfilContainer>\r\n          )}\r\n          <Membros>\r\n            {equipe?.membros.map((membro) => (\r\n              <Membro style={style.shadow} key={membro.id}>\r\n                {membro.avatar ? (\r\n                  <Avatar.Image\r\n                    source={{\r\n                      uri: membro.avatar,\r\n                    }}\r\n                    size={50}\r\n                  />\r\n                ) : (\r\n                  <Avatar.Icon\r\n                    style={style.avatarBg}\r\n                    icon=\"account\"\r\n                    size={50}\r\n                  />\r\n                )}\r\n                <Nome>{membro.nome}</Nome>\r\n                <Feather name=\"chevron-right\" size={24} color=\"#5ea6a9\" />\r\n              </Membro>\r\n            ))}\r\n          </Membros>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Membros = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Membro = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nexport default Equipe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { IEquipe } from \"../../../declarations\";\r\nimport api from \"../../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { RankingStackParamList } from \"../../Routes/ranking.routes\";\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Ranking\">;\r\n\r\nconst Ranking = ({ navigation }: Props) => {\r\n  const [equipes, setEquipes] = useState<IEquipe[]>([] as IEquipe[]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [primeiro, setPrimeiro] = useState<IEquipe | undefined>(undefined);\r\n  const [segundo, setSegundo] = useState<IEquipe | undefined>(undefined);\r\n  const [terceiro, setTerceiro] = useState<IEquipe | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    async function getEquipes() {\r\n      setLoading(true);\r\n      await api\r\n        .get(\"/equipe\")\r\n        .then(({ data }) => {\r\n          let temp: IEquipe[] = data;\r\n          if (temp.length > 3) {\r\n            setPrimeiro(temp.shift());\r\n            setSegundo(temp.shift());\r\n            setTerceiro(temp.shift());\r\n          }\r\n          setEquipes(temp);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Text>Ranking de Equipes</Text>\r\n      {loading ? (\r\n        <Container>\r\n          <ActivityIndicator animating={true} color=\"#fff\" />\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          {primeiro && segundo && terceiro && (\r\n            <>\r\n              <PrimeiroContainer>\r\n                <PosicaoAvatar>\r\n                  <Posicao>1</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {primeiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: primeiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{primeiro.nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </PrimeiroContainer>\r\n              <ColocacaoContainer>\r\n                <PosicaoAvatar>\r\n                  <Posicao>2</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {segundo.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: segundo.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{segundo.nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n                <PosicaoAvatar>\r\n                  <Posicao>3</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {terceiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: terceiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Posicao>{terceiro.nome}</Posicao>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </ColocacaoContainer>\r\n            </>\r\n          )}\r\n          <RankingContainer>\r\n            {equipes.map(({ id, avatar, nome }, index) => (\r\n              <Row key={id}>\r\n                <Colocacao>\r\n                  <Posicao>{index + 1}</Posicao>\r\n                </Colocacao>\r\n                <EquipeContainer\r\n                  style={style.shadow}\r\n                  onPress={() => navigation.navigate(\"Equipe\", { id })}\r\n                >\r\n                  {avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.avatarBg}\r\n                      source={{ uri: avatar }}\r\n                      size={50}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.avatarBg}\r\n                      icon=\"account\"\r\n                      size={50}\r\n                    />\r\n                  )}\r\n                  <Equipe>{nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </EquipeContainer>\r\n              </Row>\r\n            ))}\r\n          </RankingContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Scroll = styled.ScrollView``;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Posicao = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Colocacao = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n`;\r\n\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst PrimeiroContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst RankingContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst EquipeContainer = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst PosicaoAvatar = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0.5rem;\r\n`;\r\n\r\nconst ColocacaoContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0 1rem;\r\n  margin-top: -120px;\r\n  width: 100%;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nexport default Ranking;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport EditarEquipe from \"../Pages/Ranking/EditarEquipe\";\r\nimport Equipe from \"../Pages/Ranking/Equipe\";\r\nimport Ranking from \"../Pages/Ranking/Ranking\";\r\n\r\nexport type RankingStackParamList = {\r\n  Ranking: undefined;\r\n  Equipe: {\r\n    id: number;\r\n  };\r\n  Editar: {\r\n    id: number;\r\n    nome: string;\r\n    instagram: string;\r\n    avatar: string;\r\n    igrejaId: number;\r\n  };\r\n};\r\n\r\nconst RankingStack = createStackNavigator<RankingStackParamList>();\r\n\r\nconst RankingRoutes = () => (\r\n  <RankingStack.Navigator initialRouteName=\"Ranking\">\r\n    <RankingStack.Screen\r\n      name=\"Ranking\"\r\n      component={Ranking}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Equipe\"\r\n      component={Equipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Editar\"\r\n      component={EditarEquipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </RankingStack.Navigator>\r\n);\r\n\r\nexport default RankingRoutes;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Input } from \"../../Components\";\r\nimport { Avatar, Snackbar } from \"react-native-paper\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport VideoPlayer from \"../../Components/VideoPlayer\";\r\nimport api from \"../../Services/api\";\r\nimport { AxiosError } from \"axios\";\r\nimport { Image } from \"react-native\";\r\nimport { FeedStackParamList } from \"../../Routes/feed.routes\";\r\n\r\ntype Props = StackScreenProps<FeedStackParamList, \"Devocional\">;\r\nconst Devocional = ({ navigation, route }: Props) => {\r\n  const post = route.params;\r\n  const [comentario, setComentario] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const [likes, setLikes] = useState(post.likes.length);\r\n  const [comentarios, setComentarios] = useState(post.comentarios);\r\n\r\n  const onComment = async () => {\r\n    await api\r\n      .put(`/comentar/${post.id}`, { comentario })\r\n      .then(({ data }) => {\r\n        setComentarios(data.comentarios);\r\n        setLikes(data.likes);\r\n        setComentario(\"\");\r\n      })\r\n      .catch(({ response }: AxiosError) => {\r\n        setMessage(response?.data);\r\n        setDisplay(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Scroll>\r\n      <Container>\r\n        <Action>\r\n          <Click\r\n            style={{ marginRight: \"1rem\" }}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n          </Click>\r\n          <Titulo>\r\n            <Text>{post.titulo}</Text>\r\n          </Titulo>\r\n        </Action>\r\n        <Content>\r\n          {post.video ? (\r\n            <VideoPlayer video={post.video} />\r\n          ) : (\r\n            <>\r\n              <Verso>{post.verso}</Verso>\r\n              {post.cover ? (\r\n                <Image\r\n                  source={{ uri: post.cover }}\r\n                  resizeMode=\"contain\"\r\n                  style={{ width: \"100%\", height: 200 }}\r\n                />\r\n              ) : null}\r\n              <Descricao>{post.conteudo}</Descricao>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Footer>\r\n          <Click style={{ marginRight: \"1rem\" }}>\r\n            <Number style={{ color: \"#e80d0d\" }}>{likes}</Number>\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          </Click>\r\n          <Click>\r\n            <Number>{comentarios.length}</Number>\r\n            <AntDesign name=\"message1\" size={18} color=\"black\" />\r\n          </Click>\r\n        </Footer>\r\n        <CommentariosContainer>\r\n          <Comentar>\r\n            <InputIconText>\r\n              <AntDesign name=\"message1\" size={18} color=\"#127c82\" />\r\n              <Input\r\n                placeholder=\"Comentário...\"\r\n                placeholderTextColor=\"#127c82\"\r\n                value={comentario}\r\n                multiline={true}\r\n                numberOfLines={3}\r\n                onChangeText={setComentario}\r\n                maxLength={255}\r\n                style={{ height: 90, textAlignVertical: \"top\" }}\r\n              />\r\n              {!!comentario && (\r\n                <Click onPress={onComment} style={{ marginRight: \"1rem\" }}>\r\n                  <MaterialIcons name=\"send\" size={24} color=\"#127c82\" />\r\n                </Click>\r\n              )}\r\n            </InputIconText>\r\n          </Comentar>\r\n          <Comentarios>\r\n            {comentarios.map((comentario) => (\r\n              <Row key={comentario.id}>\r\n                <Click style={{ marginRight: \"1rem\" }}>\r\n                  {comentario.usuario.avatar ? (\r\n                    <Avatar.Image\r\n                      source={{ uri: comentario.usuario.avatar }}\r\n                      size={35}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      icon=\"account\"\r\n                      style={{ backgroundColor: \"#5ea6a9\" }}\r\n                      size={35}\r\n                    />\r\n                  )}\r\n                </Click>\r\n                <Comentario>{comentario.comentario}</Comentario>\r\n              </Row>\r\n            ))}\r\n          </Comentarios>\r\n        </CommentariosContainer>\r\n        <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n          {message}\r\n        </Snackbar>\r\n      </Container>\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nconst Scroll = styled.ScrollView`\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  flex: 1;\r\n`;\r\n\r\nconst Comentario = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Comentarios = styled.View``;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst CommentariosContainer = styled.View`\r\n  margin-top: 1rem;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst Comentar = styled.View`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Descricao = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Number = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Devocional;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport { FontAwesome5, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Image } from \"react-native\";\r\n\r\nconst Container = styled.View`\r\n  background-color: #ffffff;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Header = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Content = styled.TouchableOpacity`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #000;\r\n  font-size: 12px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Devocional = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst NullAvatar = styled.View`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #bdbdbd;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LikeText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #e80d0d;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CommentText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ActionContainer = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n`;\r\n\r\ninterface Props {\r\n  post: IDevocional;\r\n}\r\n\r\nconst Post = ({ post }: Props) => {\r\n  const { user } = useAuth();\r\n  const navigation = useNavigation();\r\n  const [curtidas, setCurtidas] = useState(post.likes.length);\r\n  const [comments, setComments] = useState(post.comentarios.length);\r\n  const [liked, setLiked] = useState(\r\n    post.likes.some((el) => el.userId === user?.id)\r\n  );\r\n\r\n  const handleCurtir = async () => {\r\n    await api.put(`/curtir/${post.id}`).then(({ data }) => {\r\n      const { likes, comentarios }: IDevocional = data;\r\n      setCurtidas(likes.length);\r\n      setComments(comentarios.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n  const handleUnlike = async () => {\r\n    await api.delete(`/curtida/${post.id}`).then(({ data }) => {\r\n      const { likes, comentarios }: IDevocional = data;\r\n      setCurtidas(likes.length);\r\n      setComments(comentarios.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        marginVertical: 10,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n      }}\r\n    >\r\n      <Header onPress={() => navigation.navigate(\"Devocional\", post)}>\r\n        {post.autor.avatar ? (\r\n          <Avatar source={{ uri: post.autor.avatar }} />\r\n        ) : (\r\n          <NullAvatar>\r\n            <FontAwesome5 name=\"user\" size={16} color=\"black\" />\r\n          </NullAvatar>\r\n        )}\r\n        <Titulo>{post.titulo}</Titulo>\r\n      </Header>\r\n      <Content onPress={() => navigation.navigate(\"Devocional\", post)}>\r\n        {post.video ? (\r\n          <VideoPlayer video={post.video} />\r\n        ) : (\r\n          <>\r\n            <Verso>{post.verso}</Verso>\r\n            {post.cover ? (\r\n              <Image\r\n                source={{ uri: post.cover }}\r\n                resizeMode=\"contain\"\r\n                style={{ width: \"100%\", height: 250 }}\r\n              />\r\n            ) : null}\r\n            <Devocional numberOfLines={10}>{post.conteudo}</Devocional>\r\n          </>\r\n        )}\r\n      </Content>\r\n      <Footer>\r\n        <ActionContainer onPress={liked ? handleUnlike : handleCurtir}>\r\n          <LikeText>{curtidas}</LikeText>\r\n          {liked ? (\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          ) : (\r\n            <MaterialIcons name=\"favorite-outline\" size={18} color=\"#e80d0d\" />\r\n          )}\r\n        </ActionContainer>\r\n        <ActionContainer>\r\n          <CommentText>{comments}</CommentText>\r\n          <AntDesign name=\"message1\" size={18} color=\"black\" />\r\n        </ActionContainer>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, ListRenderItem } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../../declarations\";\r\nimport Post from \"../../Components/Post\";\r\nimport api from \"../../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport { FeedStackParamList } from \"../../Routes/feed.routes\";\r\n\r\nconst FeedContainer = styled.SafeAreaView`\r\n  flex: 1;\r\n  background-color: #127c82;\r\n`;\r\n\r\ntype Props = StackScreenProps<FeedStackParamList, \"Feed\">;\r\n\r\nconst Feed = ({ navigation }: Props) => {\r\n  const [posts, setPosts] = useState<IDevocional[]>([] as IDevocional[]);\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        setLoading(true);\r\n        await api\r\n          .get(`/devocional?status=true&page=${page}`)\r\n          .then(({ data }) => {\r\n            setPosts(posts.concat(data.data));\r\n            setPageSize(data.meta.lastPage);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getPosts();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      try {\r\n        setLoading(true);\r\n        await api\r\n          .get(`/devocional?status=true&page=${page}`)\r\n          .then(({ data }) => {\r\n            setPosts(data.data);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const loadMore = () => {\r\n    if (pageSize > page) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FeedContainer>\r\n      <FlatList\r\n        data={posts}\r\n        style={{ paddingHorizontal: 20 }}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => <Post post={item} />}\r\n        refreshing={loading}\r\n        ListFooterComponent={() =>\r\n          loading ? <ActivityIndicator size=\"large\" color=\"#fff\" /> : null\r\n        }\r\n        onEndReachedThreshold={0.1}\r\n        onEndReached={loadMore}\r\n      />\r\n    </FeedContainer>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport Devocional from \"../Pages/Feed/Devocional\";\r\nimport Feed from \"../Pages/Feed/Feed\";\r\n\r\nexport type FeedStackParamList = {\r\n  Feed: undefined;\r\n  Devocional: IDevocional;\r\n};\r\n\r\nconst FeedStack = createStackNavigator<FeedStackParamList>();\r\n\r\nconst FeedRoutes = () => (\r\n  <FeedStack.Navigator initialRouteName=\"Feed\">\r\n    <FeedStack.Screen\r\n      name=\"Feed\"\r\n      component={Feed}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <FeedStack.Screen\r\n      name=\"Devocional\"\r\n      component={Devocional}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </FeedStack.Navigator>\r\n);\r\n\r\nexport default FeedRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Feather, AntDesign } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport styled from \"styled-components/native\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst EquipeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst MenuContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Menu = styled.TouchableOpacity`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Configuracoes = ({ navigation }: Props) => {\r\n  const { logout, user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <PerfilContainer>\r\n        <Avatar.Image\r\n          source={{\r\n            uri: user?.avatar,\r\n          }}\r\n        />\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <EquipeText>{`Equipe ${user?.equipe.nome}`}</EquipeText>\r\n      </PerfilContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu onPress={() => navigation.navigate(\"Editar\")}>\r\n          <Feather name=\"user\" size={24} color=\"#127c82\" />\r\n          <NomeText>Editar conta</NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"#127c82\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu\r\n          onPress={async () => {\r\n            setLoading(true);\r\n            await logout().finally(() => setLoading(false));\r\n          }}\r\n        >\r\n          <AntDesign name=\"logout\" size={24} color=\"red\" />\r\n          <NomeText style={{ color: \"red\" }}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"red\" />\r\n            ) : (\r\n              \"Sair\"\r\n            )}\r\n          </NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"red\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Configuracoes;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../../Components\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport api from \"../../Services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { IUsuario } from \"../../../declarations\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Editar = ({ navigation }: Props) => {\r\n  const { user, setUser } = useAuth();\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/usuario/${user?.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setUser(data);\r\n            await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/usuario/${user?.id}`, data)\r\n      .then(async ({ data }) => {\r\n        setUser(data);\r\n        await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.replace(\"Configuracao\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.replace(\"Configuracao\")}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          <Avatar.Image\r\n            source={{\r\n              uri: user?.avatar,\r\n            }}\r\n            size={90}\r\n          />\r\n        </ClickButton>\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={user?.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue={user?.email}\r\n            rules={{\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"email\"\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Email\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Senha</Label>\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"password\"\r\n                secureTextEntry\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Senha\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Editar;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Configuracoes from \"../Pages/Configuracoes/Configuracoes\";\r\nimport Editar from \"../Pages/Configuracoes/Editar\";\r\n\r\nexport type ConfigStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\nconst ConfigStack = createStackNavigator<ConfigStackParamList>();\r\n\r\nconst ConfigRoutes = () => (\r\n  <ConfigStack.Navigator initialRouteName=\"Configuracao\">\r\n    <ConfigStack.Screen\r\n      name=\"Configuracao\"\r\n      component={Configuracoes}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <ConfigStack.Screen\r\n      name=\"Editar\"\r\n      component={Editar}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </ConfigStack.Navigator>\r\n);\r\n\r\nexport default ConfigRoutes;\r\n","import React from \"react\";\r\nimport { Feather, Entypo, Ionicons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport DesafiosRoutes from \"./desafios.routes\";\r\nimport RankingRoutes from \"./ranking.routes\";\r\nimport FeedRoutes from \"./feed.routes\";\r\nimport ConfigRoutes from \"./config.routes\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst AppRoutes: React.FC = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      tabBarOptions={{\r\n        showLabel: false,\r\n        activeTintColor: \"#127C82\",\r\n        inactiveTintColor: \"#000\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={FeedRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Entypo name=\"open-book\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Ranking\"\r\n        component={RankingRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"award\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Desafios\"\r\n        component={DesafiosRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons\r\n              name=\"game-controller-outline\"\r\n              size={size}\r\n              color={color}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Configs\"\r\n        component={ConfigRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"settings\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\nexport default AppRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport { Feather, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components/native\";\r\nimport logo from \"../../assets/new.png\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { ActivityIndicator, Snackbar } from \"react-native-paper\";\r\nimport { AxiosError } from \"axios\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  ErrorText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Logo = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst LoginForm = styled.View`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-top-right-radius: 40px;\r\n  border-top-left-radius: 40px;\r\n`;\r\n\r\nconst TextButton = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TextButtonInside = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Login: undefined;\r\n  App: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Login\">;\r\n\r\nfunction Login({ navigation }: Props) {\r\n  const [recuperar, setRecuperar] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const { login } = useAuth();\r\n  const { control, handleSubmit, reset } = useForm({ mode: \"all\" });\r\n\r\n  const onRecuperar = async (data: { email: string }) => {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/recuperar\", data)\r\n      .then(() => {\r\n        setDisplay(true);\r\n        reset({});\r\n        setMessage(\"Siga as instruções enviadas no seu email\");\r\n      })\r\n      .catch((e) => {\r\n        const { response } = e as AxiosError;\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n        setRecuperar(false);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: { email: string; password: string }) => {\r\n    setLoading(true);\r\n    await login(data.email, data.password)\r\n      .catch(({ response }: AxiosError) => {\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <Image\r\n          source={logo}\r\n          style={{ width: 350, height: 250 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Text>{recuperar ? \"Recuperar senha\" : \"Bem vindo!\"}</Text>\r\n      </Logo>\r\n      <LoginForm>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"O email deve ser informado\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({\r\n              field: { value, onBlur, onChange },\r\n              fieldState: { error },\r\n            }) => (\r\n              <>\r\n                <InputIconText>\r\n                  <Feather name=\"mail\" size={18} color=\"#127c82\" />\r\n                  <Input\r\n                    autoCompleteType=\"email\"\r\n                    placeholderTextColor=\"#127C82\"\r\n                    placeholder=\"Email\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </InputIconText>\r\n                {error && <ErrorText>{error.message}</ErrorText>}\r\n              </>\r\n            )}\r\n          />\r\n        </FormItem>\r\n        {!recuperar && (\r\n          <FormItem style={{ marginBottom: \"2.5rem\" }}>\r\n            <Label>Senha</Label>\r\n\r\n            <Controller\r\n              name=\"password\"\r\n              control={control}\r\n              rules={{\r\n                required: \"A senha precisa ser informada\",\r\n              }}\r\n              render={({\r\n                field: { value, onBlur, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <>\r\n                  <InputIconText>\r\n                    <SimpleLineIcons name=\"lock\" size={18} color=\"#127c82\" />\r\n                    <Input\r\n                      autoCompleteType=\"password\"\r\n                      secureTextEntry\r\n                      placeholderTextColor=\"#127C82\"\r\n                      placeholder=\"Senha\"\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      onBlur={onBlur}\r\n                    />\r\n                  </InputIconText>\r\n                  {error && <ErrorText>{error.message}</ErrorText>}\r\n                </>\r\n              )}\r\n            />\r\n          </FormItem>\r\n        )}\r\n        <FormItem style={{ marginBottom: 0 }}>\r\n          <Button\r\n            style={{\r\n              marginVertical: 10,\r\n              shadowColor: \"#000\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 1,\r\n              },\r\n              shadowOpacity: 0.22,\r\n              shadowRadius: 2.22,\r\n              elevation: 3,\r\n            }}\r\n            disabled={loading}\r\n            onPress={() => {\r\n              recuperar\r\n                ? handleSubmit(onRecuperar)()\r\n                : handleSubmit(onSubmit)();\r\n            }}\r\n          >\r\n            <ButtonInsideText>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Enviar\"\r\n              ) : (\r\n                \"Entrar\"\r\n              )}\r\n            </ButtonInsideText>\r\n          </Button>\r\n          <TextButton onPress={() => setRecuperar(!recuperar)}>\r\n            <TextButtonInside>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Voltar para login\"\r\n              ) : (\r\n                \"Esqueceu a senha?\"\r\n              )}\r\n            </TextButtonInside>\r\n          </TextButton>\r\n        </FormItem>\r\n      </LoginForm>\r\n      <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Login from \"../Pages/Login\";\r\nimport AppRoutes from \"./app.routes\";\r\n\r\nconst AppStack = createStackNavigator();\r\nconst { Navigator, Screen } = AppStack;\r\n\r\nconst AuthRoutes: React.FC = () => {\r\n  return (\r\n    <Navigator initialRouteName=\"Login\">\r\n      <Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\r\n      <Screen\r\n        name=\"App\"\r\n        component={AppRoutes}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport AppRoutes from \"./app.routes\";\r\nimport AuthRoutes from \"./auth.routes\";\r\n\r\nconst Routes = () => {\r\n  const { signed, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return signed ? <AppRoutes /> : <AuthRoutes />;\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { AuthProvider } from \"./Context/AuthContext\";\r\nimport Routes from \"./Routes/index.routes\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <AuthProvider>\r\n        <Routes />\r\n      </AuthProvider>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport App from \"./src\";\n\nexport default function Main() {\n  const [loaded] = useFonts({\n    Poppins: require(\"./assets/fonts/Poppins.ttf\"),\n  });\n\n  return !loaded ? <AppLoading /> : <App />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins.ttf\";"],"sourceRoot":""}