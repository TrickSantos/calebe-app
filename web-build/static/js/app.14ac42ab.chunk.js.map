{"version":3,"sources":["assets/new.png","src/Services/api.tsx","src/Context/AuthContext.tsx","src/Pages/Desafios/Desafios.tsx","src/Components/VideoPlayer.tsx","src/Pages/Desafios/Desafio.tsx","src/Pages/Desafios/Resposta.tsx","src/Routes/desafios.routes.tsx","src/Components/index.tsx","src/Pages/Ranking/EditarEquipe.tsx","src/Pages/Ranking/Equipe.tsx","src/Pages/Ranking/Ranking.tsx","src/Routes/ranking.routes.tsx","src/Pages/Feed/Devocional.tsx","src/Components/Post.tsx","src/Pages/Feed/Feed.tsx","src/Routes/feed.routes.tsx","src/Pages/Configuracoes/Configuracoes.tsx","src/Pages/Configuracoes/Editar.tsx","src/Routes/config.routes.tsx","src/Components/FotoMural.tsx","src/Pages/Mural/Mural.tsx","src/Pages/Mural/Perfil.tsx","src/Pages/Mural/Adicionar.tsx","src/Routes/mural.routes.tsx","src/Routes/app.routes.tsx","src/Pages/Login.tsx","src/Routes/auth.routes.tsx","src/Routes/index.routes.tsx","src/index.tsx","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins.ttf"],"names":["module","exports","api","axios","create","baseURL","interceptors","request","use","config","a","async","AsyncStorage","getItem","headers","Authorization","common","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","storageUser","storageToken","JSON","parse","defaults","loadStorage","Provider","value","signed","login","email","password","resolve","post","then","response","data","token","setItem","stringify","catch","erro","logout","clear","useAuth","useContext","style","StyleSheet","shadowRanking","borderColor","borderWidth","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","backgroundColor","shadow","marginVertical","elevation","avatarBg","Container","styled","View","Text","EquipeContainer","Equipe","Pontuacao","Row","DesafiosContainer","ScrollView","Desafio","TouchableOpacity","Titulo","Tag","Valor","Desafios","navigation","equipe","setEquipe","desafios","setDesafios","addListener","get","equipeId","e","console","log","finally","StatusBar","animated","avatar","Image","source","uri","size","Icon","icon","nome","pontos","color","animating","map","desafio","key","id","onPress","navigate","Feather","name","margin","titulo","MaterialIcons","VideoPlayer","video","videoRef","useRef","Video","ref","useNativeControls","resizeMode","Scroll","TextButton","Preencher","Action","Click","Content","Descricao","params","route","desafioId","marginRight","goBack","AntDesign","cover","conteudo","perfil","NomeArquivo","Envio","Salvar","Resposta","useForm","control","handleSubmit","reset","useFieldArray","fields","append","remove","onSubmit","respostas","popToTop","resposta","index","length","FAB","small","label","Picker","granted","alert","mediaTypes","All","quality","videoQuality","pickerResult","cancelled","block","fetch","res","blob","form","FormData","url","position","right","bottom","DesafioStack","createStackNavigator","DesafiosRoutes","Navigator","initialRouteName","Screen","component","options","headerShown","Input","TextInput","ErrorText","Button","ButtonInsideText","Label","FormItem","PerfilContainer","NomeText","InfoText","FormContainer","ClickButton","EditarEquipe","foto","setFoto","message","setMessage","display","setDisplay","put","ImagePicker","defaultValue","render","field","onBlur","onChange","placeholderTextColor","placeholder","instagram","marginBottom","Snackbar","visible","onDismiss","Membros","Membro","Nome","membros","membro","Posicao","Colocacao","PrimeiroContainer","RankingContainer","PosicaoAvatar","ColocacaoContainer","Ranking","equipes","setEquipes","undefined","primeiro","setPrimeiro","segundo","setSegundo","terceiro","setTerceiro","temp","sort","b","shift","MaterialCommunityIcons","RankingStack","RankingRoutes","Dimensions","Comentario","Comentarios","CommentariosContainer","Comentar","InputIconText","Footer","Verso","Number","Devocional","comentario","setComentario","likes","setLikes","comentarios","setComentarios","showsVerticalScrollIndicator","verso","multiline","numberOfLines","onChangeText","maxLength","textAlignVertical","usuario","Header","Avatar","NullAvatar","LikeText","CommentText","ActionContainer","Post","useNavigation","curtidas","setCurtidas","comments","setComments","some","el","userId","liked","setLiked","autor","FontAwesome5","delete","FeedContainer","SafeAreaView","Links","LinkContainer","Link","Feed","posts","setPosts","page","setPage","pageSize","setPageSize","concat","meta","lastPage","Linking","FlatList","paddingHorizontal","keyExtractor","item","toString","renderItem","refreshing","ListFooterComponent","onEndReachedThreshold","onEndReached","FeedStack","FeedRoutes","EquipeText","MenuContainer","Menu","Configuracoes","Editar","replace","rules","pattern","autoCompleteType","secureTextEntry","ConfigStack","ConfigRoutes","Tempo","FotoMural","flexDirection","Mural","fotos","setFotos","alignItems","ActivityIndicator","Detail","Infos","Instagram","Distrito","Igreja","Perfil","igreja","distrito","Adicionar","MuralStack","MuralRoutes","Tab","createBottomTabNavigator","AppRoutes","tabBarOptions","showLabel","activeTintColor","inactiveTintColor","tabBarIcon","Entypo","Ionicons","SimpleLineIcons","Logo","LoginForm","TextButtonInside","Login","recuperar","setRecuperar","mode","onRecuperar","logo","required","fieldState","text","trim","disabled","AppStack","AuthRoutes","Routes","flex","justifyContent","App","NavigationContainer","Main","useFonts","Poppins","require","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.14ac42ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new.fffe9f1a.png\";","import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst api = axios.create({\r\n  /* baseURL: __DEV__ ? \"http://192.168.15.23:3333\" : \"https://api.calebe.online\", */\r\n  baseURL: \"https://api.calebe.online\",\r\n});\r\n\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n    config.headers.common.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport api from \"../Services/api\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { IUsuario } from \"../../declarations\";\r\n\r\ninterface AuthContextProps {\r\n  signed: boolean;\r\n  user: IUsuario | null;\r\n  setUser: React.Dispatch<React.SetStateAction<IUsuario | null>>;\r\n  login(email: string, password: string): Promise<AxiosResponse>;\r\n  logout(): Promise<AxiosResponse>;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({} as AuthContextProps);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUsuario | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadStorage() {\r\n      const storageUser = await AsyncStorage.getItem(\"auth:user\");\r\n      const storageToken = await AsyncStorage.getItem(\"auth:token\");\r\n      if (storageToken && storageUser) {\r\n        setUser(JSON.parse(storageUser));\r\n        setLoading(false);\r\n        api.defaults.headers.Authorization = `Bearer ${storageToken}`;\r\n      } else if (!storageUser) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadStorage();\r\n  }, []);\r\n\r\n  async function login(email: string, password: string) {\r\n    return new Promise<AxiosResponse>((resolve, reject) => {\r\n      api\r\n        .post(\"/login\", { email, password })\r\n        .then(async (response) => {\r\n          const { token, user } = response.data;\r\n          setUser(user);\r\n\r\n          await AsyncStorage.setItem(\"auth:user\", JSON.stringify(user)).then(\r\n            async () => {\r\n              await AsyncStorage.setItem(\"auth:token\", token).then(() => {\r\n                api.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n                api.defaults.headers.Authorization = `Bearer ${token}`;\r\n\r\n                resolve(response);\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          reject(erro);\r\n        });\r\n    });\r\n  }\r\n\r\n  async function logout() {\r\n    return new Promise<AxiosResponse>((resolve) => {\r\n      api.post(\"/logout\").then(async (response) => {\r\n        await AsyncStorage.clear().then(() => {\r\n          setUser(null);\r\n          resolve(response);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ signed: !!user, user, setUser, login, logout, loading }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  return context;\r\n}\r\n\r\nexport default AuthContext;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../Services/api\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDesafio, IEquipe } from \"../../../declarations\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { Feather, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { DesafiosStackParamsList } from \"../../Routes/desafios.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\ntype Props = StackScreenProps<DesafiosStackParamsList, \"Desafios\">;\r\nconst Desafios = ({ navigation }: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [equipe, setEquipe] = useState<IEquipe>({} as IEquipe);\r\n  const [desafios, setDesafios] = useState<IDesafio[]>([] as IDesafio[]);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      setLoading(true);\r\n      await api.get(`/equipe/${user?.equipeId}`).then(({ data }) => {\r\n        setEquipe(data);\r\n      });\r\n      await api\r\n        .get(`/desafio?equipeId=${user?.equipeId}`)\r\n        .then(({ data }) => {\r\n          setDesafios(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#127c82\" animated />\r\n      <Text>Desafios</Text>\r\n      <EquipeContainer style={style.shadow}>\r\n        {equipe.avatar ? (\r\n          <Avatar.Image\r\n            style={style.shadowRanking}\r\n            source={{ uri: equipe.avatar }}\r\n            size={80}\r\n          />\r\n        ) : (\r\n          <Avatar.Icon style={style.shadowRanking} icon=\"account\" size={80} />\r\n        )}\r\n        <Equipe>{equipe.nome}</Equipe>\r\n        <Pontuacao>{equipe.pontos}</Pontuacao>\r\n      </EquipeContainer>\r\n      {loading && (\r\n        <ActivityIndicator size=\"large\" color=\"#FFF\" animating={true} />\r\n      )}\r\n      <DesafiosContainer>\r\n        {desafios.map((desafio) => (\r\n          <Row key={desafio.id}>\r\n            <Desafio\r\n              style={style.shadow}\r\n              onPress={() => navigation.navigate(\"Desafio\", desafio)}\r\n            >\r\n              <Feather\r\n                name=\"award\"\r\n                size={20}\r\n                style={{ margin: \"1rem\" }}\r\n                color=\"#127c82\"\r\n              />\r\n              <Titulo>{desafio.titulo}</Titulo>\r\n              <Tag>\r\n                <Valor>+ {desafio.pontos}</Valor>\r\n              </Tag>\r\n              <MaterialIcons name=\"arrow-right\" size={28} color=\"#5CEAA0\" />\r\n            </Desafio>\r\n          </Row>\r\n        ))}\r\n      </DesafiosContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst EquipeContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  margin: 0.5rem;\r\n`;\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst DesafiosContainer = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Desafio = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 200;\r\n  font-size: 14px;\r\n  color: white;\r\n`;\r\n\r\nconst Tag = styled.View`\r\n  background-color: #5ceaa0;\r\n\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Valor = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  color: white;\r\n  font-size: 12px;\r\n  margin: 5px 10px;\r\n`;\r\n\r\nexport default Desafios;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Video } from \"expo-av\";\r\n\r\ninterface Props {\r\n  video: string;\r\n}\r\n\r\nconst VideoPlayer = ({ video }: Props) => {\r\n  const videoRef = useRef<Video>(null);\r\n\r\n  return (\r\n    <Video\r\n      ref={videoRef}\r\n      source={{ uri: video }}\r\n      useNativeControls\r\n      resizeMode=\"contain\"\r\n      style={{ width: \"100%\" }}\r\n    />\r\n  );\r\n};\r\nexport default VideoPlayer;\r\n","import React from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport VideoPlayer from \"../../Components/VideoPlayer\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { DesafiosStackParamsList } from \"../../Routes/desafios.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\ntype Props = StackScreenProps<DesafiosStackParamsList, \"Desafio\">;\r\n\r\nconst Desafio = ({ navigation, route: { params } }: Props) => {\r\n  const { user } = useAuth();\r\n  const desafioId = params.id;\r\n  return (\r\n    <Scroll>\r\n      <StatusBar backgroundColor=\"#127c82\" animated />\r\n      <Container>\r\n        <Action>\r\n          <Click\r\n            style={{ marginRight: \"1rem\" }}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n          </Click>\r\n          <Titulo>\r\n            <Text>{params.titulo}</Text>\r\n          </Titulo>\r\n        </Action>\r\n        <Content>\r\n          {params.video ? (\r\n            <VideoPlayer video={params.video} />\r\n          ) : (\r\n            <>\r\n              {params.cover ? (\r\n                <Image\r\n                  source={{ uri: params.cover }}\r\n                  resizeMode=\"contain\"\r\n                  style={{ width: \"100%\", height: 300 }}\r\n                />\r\n              ) : null}\r\n              <Descricao>{params.conteudo}</Descricao>\r\n            </>\r\n          )}\r\n        </Content>\r\n        {user && (user.perfil === \"lider\" || user.perfil === \"admin\") && (\r\n          <Preencher\r\n            onPress={() =>\r\n              navigation.navigate(\"Resposta\", {\r\n                desafioId,\r\n                equipeId: user.equipeId,\r\n              })\r\n            }\r\n          >\r\n            <TextButton>Preencher Desafio</TextButton>\r\n          </Preencher>\r\n        )}\r\n      </Container>\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nconst Scroll = styled.ScrollView`\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  flex: 1;\r\n`;\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst TextButton = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Preencher = styled.TouchableOpacity`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Descricao = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default Desafio;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, MaterialIcons, Feather } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, FAB } from \"react-native-paper\";\r\nimport * as Picker from \"expo-image-picker\";\r\nimport api from \"../../Services/api\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { DesafiosStackParamsList } from \"../../Routes/desafios.routes\";\r\nimport { AxiosError } from \"axios\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\ntype RespostaType = {\r\n  resposta: string;\r\n};\r\n\r\ntype Props = StackScreenProps<DesafiosStackParamsList, \"Resposta\">;\r\n\r\nconst Resposta = ({ navigation, route: { params } }: Props) => {\r\n  const { equipeId, desafioId } = params;\r\n  const [loading, setLoading] = useState(false);\r\n  const { control, handleSubmit, reset } = useForm();\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"respostas\",\r\n  });\r\n\r\n  const onSubmit = async (data: RespostaType[]) => {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/resposta\", { ...data, equipeId, desafioId })\r\n      .then(() => {\r\n        reset({ respostas: [] });\r\n        navigation.popToTop();\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult = await Picker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await Picker.launchImageLibraryAsync({\r\n      mediaTypes: Picker.MediaTypeOptions.All,\r\n      quality: 1,\r\n      videoQuality: 0.7,\r\n    });\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n    setLoading(true);\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"file\", blob);\r\n        form.append(\"pasta\", \"desafios/resposta\");\r\n        await api\r\n          .post(\"/upload\", form)\r\n          .then(async ({ data }) => {\r\n            append({ resposta: data.url });\r\n          })\r\n          .catch((e) => console.log(e))\r\n          .finally(() => setLoading(false));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#b1d2d6\" animated />\r\n      <Action>\r\n        <Click\r\n          style={{ marginRight: \"1rem\" }}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n        </Click>\r\n        <Titulo>\r\n          <Text>Desafio 1</Text>\r\n        </Titulo>\r\n      </Action>\r\n      <Content>\r\n        {fields.map((resposta, index) => (\r\n          <Envio key={resposta.id}>\r\n            <Feather name=\"file\" size={24} color=\"#127C82\" />\r\n            <NomeArquivo>{`Arquivo ${index + 1}`}</NomeArquivo>\r\n            <Click\r\n              style={{ marginRight: \"1rem\" }}\r\n              onPress={() => remove(index)}\r\n            >\r\n              <MaterialIcons name=\"delete\" size={24} color=\"red\" />\r\n            </Click>\r\n          </Envio>\r\n        ))}\r\n      </Content>\r\n      {fields.length > 0 && (\r\n        <Salvar onPress={() => handleSubmit(onSubmit)()}>\r\n          {loading ? (\r\n            <ActivityIndicator animating={true} color=\"#FFF\" />\r\n          ) : (\r\n            <TextButton>Salvar</TextButton>\r\n          )}\r\n        </Salvar>\r\n      )}\r\n      <FAB\r\n        small\r\n        icon=\"plus\"\r\n        label=\"Adicionar\"\r\n        onPress={openImagePickerAsync}\r\n        loading={loading}\r\n        style={{\r\n          position: \"absolute\",\r\n          margin: \"1rem\",\r\n          right: 0,\r\n          bottom: 0,\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeArquivo = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst TextButton = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Envio = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Salvar = styled.TouchableOpacity`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border-radius: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nexport default Resposta;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Desafios from \"../Pages/Desafios/Desafios\";\r\nimport Desafio from \"../Pages/Desafios/Desafio\";\r\nimport Resposta from \"../Pages/Desafios/Resposta\";\r\nimport { IDesafio } from \"../../declarations\";\r\n\r\nexport type DesafiosStackParamsList = {\r\n  Desafios: undefined;\r\n  Desafio: IDesafio;\r\n  Resposta: {\r\n    desafioId: number;\r\n    equipeId: number;\r\n  };\r\n};\r\n\r\nconst DesafioStack = createStackNavigator<DesafiosStackParamsList>();\r\n\r\nconst DesafiosRoutes = () => (\r\n  <DesafioStack.Navigator initialRouteName=\"Desafios\">\r\n    <DesafioStack.Screen\r\n      name=\"Desafios\"\r\n      component={Desafios}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <DesafioStack.Screen\r\n      name=\"Desafio\"\r\n      component={Desafio}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <DesafioStack.Screen\r\n      name=\"Resposta\"\r\n      component={Resposta}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </DesafioStack.Navigator>\r\n);\r\n\r\nexport default DesafiosRoutes;\r\n","import styled from \"styled-components/native\";\r\n\r\nexport const Input = styled.TextInput`\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ErrorText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  color: red;\r\n`;\r\n\r\nexport const Button = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #5ea6a9;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ButtonInsideText = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n`;\r\n\r\nexport const Label = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nexport const FormItem = styled.View`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 1rem;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../../Components\";\r\nimport api from \"../../Services/api\";\r\nimport { IEquipe, IUsuario } from \"../../../declarations\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { RankingStackParamList } from \"../../Routes/ranking.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Editar\">;\r\n\r\nconst EditarEquipe = ({ navigation, route: { params } }: Props) => {\r\n  const [foto, setFoto] = useState(params.avatar);\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/equipe/${params.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setFoto(data.avatar);\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IEquipe) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/equipe/${params.id}`, data)\r\n      .then(async () => {\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.goBack();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#127c82\" animated />\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          {foto ? (\r\n            <Avatar.Image\r\n              source={{\r\n                uri: foto,\r\n              }}\r\n              size={90}\r\n            />\r\n          ) : (\r\n            <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n          )}\r\n        </ClickButton>\r\n        <NomeText>{params.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={params.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Instagram</Label>\r\n          <Controller\r\n            name=\"instagram\"\r\n            control={control}\r\n            defaultValue={params.instagram}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Instagram\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nexport default EditarEquipe;\r\n","import { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { IEquipe } from \"../../../declarations\";\r\nimport api from \"../../Services/api\";\r\nimport { RankingStackParamList } from \"../../Routes/ranking.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Equipe\">;\r\n\r\nconst Equipe = ({\r\n  navigation,\r\n  route: {\r\n    params: { id },\r\n  },\r\n}: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [equipe, setEquipe] = useState<IEquipe | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function getEquipe() {\r\n      setLoading(true);\r\n      await api\r\n        .get(`/equipe/${id}`)\r\n        .then(({ data }) => {\r\n          setEquipe(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipe();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#127c82\" animated />\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#FFF\" />\r\n        </ClickButton>\r\n      </Action>\r\n      {loading ? (\r\n        <ActivityIndicator animating={true} color=\"#fff\" />\r\n      ) : (\r\n        <>\r\n          {equipe && (\r\n            <PerfilContainer>\r\n              {equipe.avatar ? (\r\n                <Avatar.Image\r\n                  source={{\r\n                    uri: equipe.avatar,\r\n                  }}\r\n                  size={90}\r\n                />\r\n              ) : (\r\n                <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n              )}\r\n\r\n              <NomeText>{equipe.nome}</NomeText>\r\n              {!(user?.perfil === \"membro\" || user?.equipeId !== id) && (\r\n                <ClickButton\r\n                  onPress={() => navigation.navigate(\"Editar\", { ...equipe })}\r\n                >\r\n                  <InfoText>Editar Equipe</InfoText>\r\n                </ClickButton>\r\n              )}\r\n            </PerfilContainer>\r\n          )}\r\n          <Membros>\r\n            {equipe?.membros.map((membro) => (\r\n              <Membro style={style.shadow} key={membro.id}>\r\n                {membro.avatar ? (\r\n                  <Avatar.Image\r\n                    source={{\r\n                      uri: membro.avatar,\r\n                    }}\r\n                    size={50}\r\n                  />\r\n                ) : (\r\n                  <Avatar.Icon\r\n                    style={style.avatarBg}\r\n                    icon=\"account\"\r\n                    size={50}\r\n                  />\r\n                )}\r\n                <Nome>{membro.nome}</Nome>\r\n                <Feather name=\"chevron-right\" size={24} color=\"#5ea6a9\" />\r\n              </Membro>\r\n            ))}\r\n          </Membros>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Membros = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Membro = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nexport default Equipe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { IEquipe } from \"../../../declarations\";\r\nimport api from \"../../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { RankingStackParamList } from \"../../Routes/ranking.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Ranking\">;\r\n\r\nconst Ranking = ({ navigation }: Props) => {\r\n  const [equipes, setEquipes] = useState<IEquipe[]>([] as IEquipe[]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [primeiro, setPrimeiro] = useState<IEquipe | undefined>(undefined);\r\n  const [segundo, setSegundo] = useState<IEquipe | undefined>(undefined);\r\n  const [terceiro, setTerceiro] = useState<IEquipe | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      setLoading(true);\r\n      await api\r\n        .get(\"/equipe?ranking=true\")\r\n        .then(({ data }) => {\r\n          let temp: IEquipe[] = data;\r\n          temp.sort((a, b) => b.pontos - a.pontos);\r\n          if (temp.length > 3) {\r\n            setPrimeiro(temp.shift());\r\n            setSegundo(temp.shift());\r\n            setTerceiro(temp.shift());\r\n          }\r\n          setEquipes(temp);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#127c82\" animated />\r\n      <Text>Ranking de Equipes</Text>\r\n      {loading ? (\r\n        <Container>\r\n          <ActivityIndicator animating={true} color=\"#fff\" />\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          {primeiro && segundo && terceiro && (\r\n            <>\r\n              <PrimeiroContainer>\r\n                <PosicaoAvatar\r\n                  onPress={() =>\r\n                    navigation.navigate(\"Equipe\", { id: primeiro.id })\r\n                  }\r\n                >\r\n                  <Posicao>1</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {primeiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: primeiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{primeiro.nome}</Equipe>\r\n                  <Pontuacao>{primeiro.pontos}</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </PrimeiroContainer>\r\n              <ColocacaoContainer>\r\n                <PosicaoAvatar\r\n                  onPress={() =>\r\n                    navigation.navigate(\"Equipe\", { id: segundo.id })\r\n                  }\r\n                >\r\n                  <Posicao>2</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {segundo.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: segundo.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{segundo.nome}</Equipe>\r\n                  <Pontuacao>{segundo.pontos}</Pontuacao>\r\n                </PosicaoAvatar>\r\n                <PosicaoAvatar\r\n                  onPress={() =>\r\n                    navigation.navigate(\"Equipe\", { id: terceiro.id })\r\n                  }\r\n                >\r\n                  <Posicao>3</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {terceiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: terceiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Posicao>{terceiro.nome}</Posicao>\r\n                  <Pontuacao>{terceiro.pontos}</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </ColocacaoContainer>\r\n            </>\r\n          )}\r\n          <RankingContainer>\r\n            {equipes.map(({ id, avatar, nome, pontos }, index) => (\r\n              <Row key={id}>\r\n                <Colocacao>\r\n                  <Posicao>{index + 4}</Posicao>\r\n                </Colocacao>\r\n                <EquipeContainer\r\n                  style={style.shadow}\r\n                  onPress={() => navigation.navigate(\"Equipe\", { id })}\r\n                >\r\n                  {avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.avatarBg}\r\n                      source={{ uri: avatar }}\r\n                      size={50}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.avatarBg}\r\n                      icon=\"account\"\r\n                      size={50}\r\n                    />\r\n                  )}\r\n                  <Equipe>{nome}</Equipe>\r\n                  <Pontuacao>{pontos}</Pontuacao>\r\n                </EquipeContainer>\r\n              </Row>\r\n            ))}\r\n          </RankingContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Posicao = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Colocacao = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n`;\r\n\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst PrimeiroContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  z-index: 2;\r\n`;\r\n\r\nconst RankingContainer = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst EquipeContainer = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst PosicaoAvatar = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0.5rem;\r\n`;\r\n\r\nconst ColocacaoContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 1rem;\r\n  margin-top: -120px;\r\n  width: 100%;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nexport default Ranking;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport EditarEquipe from \"../Pages/Ranking/EditarEquipe\";\r\nimport Equipe from \"../Pages/Ranking/Equipe\";\r\nimport Ranking from \"../Pages/Ranking/Ranking\";\r\n\r\nexport type RankingStackParamList = {\r\n  Ranking: undefined;\r\n  Equipe: {\r\n    id: number;\r\n  };\r\n  Editar: {\r\n    id: number;\r\n    nome: string;\r\n    instagram: string;\r\n    avatar: string;\r\n    igrejaId: number;\r\n  };\r\n};\r\n\r\nconst RankingStack = createStackNavigator<RankingStackParamList>();\r\n\r\nconst RankingRoutes = () => (\r\n  <RankingStack.Navigator initialRouteName=\"Ranking\">\r\n    <RankingStack.Screen\r\n      name=\"Ranking\"\r\n      component={Ranking}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Equipe\"\r\n      component={Equipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Editar\"\r\n      component={EditarEquipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </RankingStack.Navigator>\r\n);\r\n\r\nexport default RankingRoutes;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Input } from \"../../Components\";\r\nimport { Avatar, Snackbar } from \"react-native-paper\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport VideoPlayer from \"../../Components/VideoPlayer\";\r\nimport api from \"../../Services/api\";\r\nimport { AxiosError } from \"axios\";\r\nimport { Image, View, Dimensions } from \"react-native\";\r\nimport { FeedStackParamList } from \"../../Routes/feed.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\ntype Props = StackScreenProps<FeedStackParamList, \"Devocional\">;\r\nconst Devocional = ({ navigation, route }: Props) => {\r\n  const post = route.params;\r\n  const [comentario, setComentario] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const [likes, setLikes] = useState(post.likes.length);\r\n  const [comentarios, setComentarios] = useState(post.comentarios);\r\n\r\n  const onComment = async () => {\r\n    await api\r\n      .put(`/comentar/${post.id}`, { comentario })\r\n      .then(({ data }) => {\r\n        setComentarios(data.comentarios);\r\n        setLikes(data.likes);\r\n        setComentario(\"\");\r\n      })\r\n      .catch(({ response }: AxiosError) => {\r\n        setMessage(response?.data);\r\n        setDisplay(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Scroll showsVerticalScrollIndicator={false}>\r\n      <StatusBar backgroundColor=\"#b1d2d6\" animated />\r\n      <Container>\r\n        <Action>\r\n          <Click\r\n            style={{ marginRight: \"1rem\" }}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n          </Click>\r\n          <Titulo>\r\n            <Text>{post.titulo}</Text>\r\n          </Titulo>\r\n        </Action>\r\n        <Content>\r\n          {post.video ? (\r\n            <VideoPlayer video={post.video} />\r\n          ) : (\r\n            <>\r\n              <Verso>{post.verso}</Verso>\r\n              {post.cover ? (\r\n                <Image\r\n                  source={{ uri: post.cover }}\r\n                  resizeMode=\"contain\"\r\n                  style={{ width: \"100%\", height: 500 }}\r\n                />\r\n              ) : null}\r\n              <Descricao>{post.conteudo}</Descricao>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Footer>\r\n          <Click style={{ marginRight: \"1rem\" }}>\r\n            <Number style={{ color: \"#e80d0d\" }}>{likes}</Number>\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          </Click>\r\n          <Click>\r\n            <Number>{comentarios.length}</Number>\r\n            <AntDesign name=\"message1\" size={18} color=\"black\" />\r\n          </Click>\r\n        </Footer>\r\n        <CommentariosContainer>\r\n          <Comentar>\r\n            <InputIconText>\r\n              <AntDesign name=\"message1\" size={18} color=\"#127c82\" />\r\n              <Input\r\n                placeholder=\"Comentário...\"\r\n                placeholderTextColor=\"#127c82\"\r\n                value={comentario}\r\n                multiline={true}\r\n                numberOfLines={3}\r\n                onChangeText={setComentario}\r\n                maxLength={255}\r\n                style={{ height: 90, textAlignVertical: \"top\" }}\r\n              />\r\n              {!!comentario && (\r\n                <Click onPress={onComment} style={{ marginRight: \"1rem\" }}>\r\n                  <MaterialIcons name=\"send\" size={24} color=\"#127c82\" />\r\n                </Click>\r\n              )}\r\n            </InputIconText>\r\n          </Comentar>\r\n          <Comentarios>\r\n            {comentarios.map((comentario) => (\r\n              <Row key={comentario.id}>\r\n                <Click style={{ marginRight: \"1rem\" }}>\r\n                  {comentario.usuario.avatar ? (\r\n                    <Avatar.Image\r\n                      source={{ uri: comentario.usuario.avatar }}\r\n                      size={35}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      icon=\"account\"\r\n                      style={{ backgroundColor: \"#5ea6a9\" }}\r\n                      size={35}\r\n                    />\r\n                  )}\r\n                </Click>\r\n                <View>\r\n                  <Nome>{comentario.usuario.nome}</Nome>\r\n\r\n                  <Comentario>{comentario.comentario}</Comentario>\r\n                </View>\r\n              </Row>\r\n            ))}\r\n          </Comentarios>\r\n        </CommentariosContainer>\r\n        <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n          {message}\r\n        </Snackbar>\r\n      </Container>\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nconst Scroll = styled.ScrollView`\r\n  background-color: #b1d2d6;\r\n  padding: 1rem 2rem;\r\n  flex: 1;\r\n  width: ${width}px;\r\n`;\r\n\r\nconst Comentario = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  flex: 1;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Comentarios = styled.View``;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst CommentariosContainer = styled.View`\r\n  margin-top: 1rem;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst Comentar = styled.View`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 600;\r\n  color: #000;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Descricao = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Number = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Devocional;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport { FontAwesome5, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Image, Dimensions } from \"react-native\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nconst Container = styled.View`\r\n  background-color: #ffffff;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Header = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Content = styled.TouchableOpacity`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #000;\r\n  font-size: 12px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Devocional = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst NullAvatar = styled.View`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #bdbdbd;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LikeText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #e80d0d;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CommentText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ActionContainer = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n`;\r\n\r\ninterface Props {\r\n  post: IDevocional;\r\n}\r\n\r\nconst Post = ({ post }: Props) => {\r\n  const { user } = useAuth();\r\n  const navigation = useNavigation();\r\n  const [curtidas, setCurtidas] = useState(post.likes.length);\r\n  const [comments, setComments] = useState(post.comentarios.length);\r\n  const [liked, setLiked] = useState(\r\n    post.likes.some((el) => el.userId === user?.id)\r\n  );\r\n\r\n  const handleCurtir = async () => {\r\n    await api.put(`/curtir/${post.id}`).then(({ data }) => {\r\n      const { likes, comentarios }: IDevocional = data;\r\n      setCurtidas(likes.length);\r\n      setComments(comentarios.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n  const handleUnlike = async () => {\r\n    await api.delete(`/curtida/${post.id}`).then(({ data }) => {\r\n      const { likes, comentarios }: IDevocional = data;\r\n      setCurtidas(likes.length);\r\n      setComments(comentarios.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        marginVertical: 10,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n      }}\r\n    >\r\n      <Header onPress={() => navigation.navigate(\"Devocional\", post)}>\r\n        {post.autor.avatar ? (\r\n          <Avatar source={{ uri: post.autor.avatar }} />\r\n        ) : (\r\n          <NullAvatar>\r\n            <FontAwesome5 name=\"user\" size={16} color=\"black\" />\r\n          </NullAvatar>\r\n        )}\r\n        <Titulo>{post.titulo}</Titulo>\r\n      </Header>\r\n      <Content onPress={() => navigation.navigate(\"Devocional\", post)}>\r\n        {post.video ? (\r\n          <VideoPlayer video={post.video} />\r\n        ) : (\r\n          <>\r\n            <Verso>{post.verso}</Verso>\r\n            {post.cover ? (\r\n              <Image\r\n                source={{ uri: post.cover }}\r\n                resizeMode=\"contain\"\r\n                style={{ width: \"100%\", height: 400 }}\r\n              />\r\n            ) : null}\r\n            <Devocional numberOfLines={10}>{post.conteudo}</Devocional>\r\n          </>\r\n        )}\r\n      </Content>\r\n      <Footer>\r\n        <ActionContainer onPress={liked ? handleUnlike : handleCurtir}>\r\n          <LikeText>{curtidas}</LikeText>\r\n          {liked ? (\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          ) : (\r\n            <MaterialIcons name=\"favorite-outline\" size={18} color=\"#e80d0d\" />\r\n          )}\r\n        </ActionContainer>\r\n        <ActionContainer>\r\n          <CommentText>{comments}</CommentText>\r\n          <AntDesign name=\"message1\" size={18} color=\"black\" />\r\n        </ActionContainer>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, Dimensions } from \"react-native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport { Feather, FontAwesome5 } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../../declarations\";\r\nimport Post from \"../../Components/Post\";\r\nimport api from \"../../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport { FeedStackParamList } from \"../../Routes/feed.routes\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nconst FeedContainer = styled.SafeAreaView`\r\n  flex: 1;\r\n  width: ${width}px;\r\n  background-color: #127c82;\r\n`;\r\n\r\ntype Props = StackScreenProps<FeedStackParamList, \"Feed\">;\r\n\r\nconst Feed = ({ navigation }: Props) => {\r\n  const [posts, setPosts] = useState<IDevocional[]>([] as IDevocional[]);\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        setLoading(true);\r\n        await api\r\n          .get(`/devocional?status=true&page=${page}`)\r\n          .then(({ data }) => {\r\n            setPosts(posts.concat(data.data));\r\n            setPageSize(data.meta.lastPage);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getPosts();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      try {\r\n        setLoading(true);\r\n        await api\r\n          .get(`/devocional?status=true&page=${page}`)\r\n          .then(({ data }) => {\r\n            setPosts(data.data);\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const loadMore = () => {\r\n    if (pageSize > page) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FeedContainer>\r\n      <StatusBar backgroundColor=\"#127c82\" animated />\r\n      <Links>\r\n        <LinkContainer\r\n          onPress={() =>\r\n            Linking.openURL(\r\n              \"https://www.instagram.com/jovensadventistaslestemt/\"\r\n            )\r\n          }\r\n        >\r\n          <Feather name=\"instagram\" size={24} color=\"black\" />\r\n          <Link>Instagram</Link>\r\n        </LinkContainer>\r\n        <LinkContainer\r\n          onPress={() =>\r\n            Linking.openURL(\"https://www.bibliaonline.com.br/nvi/index\")\r\n          }\r\n        >\r\n          <FontAwesome5 name=\"bible\" size={24} color=\"black\" />\r\n          <Link>Biblia Online</Link>\r\n        </LinkContainer>\r\n      </Links>\r\n      <FlatList\r\n        data={posts}\r\n        style={{ paddingHorizontal: 20 }}\r\n        showsVerticalScrollIndicator={false}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => <Post post={item} />}\r\n        refreshing={loading}\r\n        ListFooterComponent={() =>\r\n          loading ? <ActivityIndicator size=\"large\" color=\"#fff\" /> : null\r\n        }\r\n        onEndReachedThreshold={0.1}\r\n        onEndReached={loadMore}\r\n      />\r\n    </FeedContainer>\r\n  );\r\n};\r\n\r\nconst Links = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  background-color: white;\r\n`;\r\n\r\nconst LinkContainer = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  padding: 20px;\r\n  flex: 1;\r\n`;\r\n\r\nconst Link = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport Devocional from \"../Pages/Feed/Devocional\";\r\nimport Feed from \"../Pages/Feed/Feed\";\r\n\r\nexport type FeedStackParamList = {\r\n  Feed: undefined;\r\n  Devocional: IDevocional;\r\n};\r\n\r\nconst FeedStack = createStackNavigator<FeedStackParamList>();\r\n\r\nconst FeedRoutes = () => (\r\n  <FeedStack.Navigator initialRouteName=\"Feed\">\r\n    <FeedStack.Screen\r\n      name=\"Feed\"\r\n      component={Feed}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <FeedStack.Screen\r\n      name=\"Devocional\"\r\n      component={Devocional}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </FeedStack.Navigator>\r\n);\r\n\r\nexport default FeedRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Feather, AntDesign } from \"@expo/vector-icons\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport styled from \"styled-components/native\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst EquipeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst MenuContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Menu = styled.TouchableOpacity`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Configuracoes = ({ navigation }: Props) => {\r\n  const { logout, user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#f2f2f2\" animated />\r\n      <PerfilContainer>\r\n        <Avatar.Image\r\n          source={{\r\n            uri: user?.avatar,\r\n          }}\r\n        />\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <EquipeText>{`Equipe ${user?.equipe.nome}`}</EquipeText>\r\n      </PerfilContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu onPress={() => navigation.navigate(\"Editar\")}>\r\n          <Feather name=\"user\" size={24} color=\"#127c82\" />\r\n          <NomeText>Editar conta</NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"#127c82\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu\r\n          onPress={async () => {\r\n            setLoading(true);\r\n            await logout().finally(() => setLoading(false));\r\n          }}\r\n        >\r\n          <AntDesign name=\"logout\" size={24} color=\"red\" />\r\n          <NomeText style={{ color: \"red\" }}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"red\" />\r\n            ) : (\r\n              \"Sair\"\r\n            )}\r\n          </NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"red\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Configuracoes;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../../Components\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport api from \"../../Services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { IUsuario } from \"../../../declarations\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Editar = ({ navigation }: Props) => {\r\n  const { user, setUser } = useAuth();\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/usuario/${user?.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setUser(data);\r\n            await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/usuario/${user?.id}`, data)\r\n      .then(async ({ data }) => {\r\n        setUser(data);\r\n        await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.replace(\"Configuracao\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <StatusBar backgroundColor=\"#f2f2f2\" animated />\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.replace(\"Configuracao\")}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          <Avatar.Image\r\n            source={{\r\n              uri: user?.avatar,\r\n            }}\r\n            size={90}\r\n          />\r\n        </ClickButton>\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={user?.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue={user?.email}\r\n            rules={{\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"email\"\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Email\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Senha</Label>\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"password\"\r\n                secureTextEntry\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Senha\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Editar;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Configuracoes from \"../Pages/Configuracoes/Configuracoes\";\r\nimport Editar from \"../Pages/Configuracoes/Editar\";\r\n\r\nexport type ConfigStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\nconst ConfigStack = createStackNavigator<ConfigStackParamList>();\r\n\r\nconst ConfigRoutes = () => (\r\n  <ConfigStack.Navigator initialRouteName=\"Configuracao\">\r\n    <ConfigStack.Screen\r\n      name=\"Configuracao\"\r\n      component={Configuracoes}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <ConfigStack.Screen\r\n      name=\"Editar\"\r\n      component={Editar}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </ConfigStack.Navigator>\r\n);\r\n\r\nexport default ConfigRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Image, View, Dimensions } from \"react-native\";\r\nimport { FontAwesome5, MaterialIcons } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { IFoto } from \"../../declarations\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport api from \"../Services/api\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nconst FotoMural = ({ foto, usuario, id, likes }: IFoto) => {\r\n  const navigation = useNavigation();\r\n  const { user } = useAuth();\r\n  const [curtidas, setCurtidas] = useState(likes.length);\r\n  const [liked, setLiked] = useState(\r\n    likes.some((el) => el.userId === user?.id)\r\n  );\r\n\r\n  const handleCurtir = async () => {\r\n    await api.put(`/curtir_foto/${id}`).then(({ data }) => {\r\n      const { likes }: IFoto = data;\r\n      setCurtidas(likes.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n\r\n  const handleUnlike = async () => {\r\n    await api.delete(`/curtida_foto/${id}`).then(({ data }) => {\r\n      const { likes }: IFoto = data;\r\n      setCurtidas(likes.length);\r\n      setLiked(likes.some((el) => el.userId === user?.id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Post>\r\n      <Header\r\n        onPress={() =>\r\n          navigation.navigate(\"Perfil\", { equipeId: usuario.equipeId })\r\n        }\r\n      >\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          {usuario.avatar ? (\r\n            <Avatar source={{ uri: usuario.avatar }} />\r\n          ) : (\r\n            <NullAvatar>\r\n              <FontAwesome5 name=\"user\" size={16} color=\"black\" />\r\n            </NullAvatar>\r\n          )}\r\n          <View>\r\n            <Nome>{usuario.nome}</Nome>\r\n            <Tempo>{`Equipe ${usuario.equipe.nome}`}</Tempo>\r\n          </View>\r\n        </View>\r\n        {user?.id === usuario.id ||\r\n        (user?.equipeId === usuario.equipeId && usuario.perfil === \"lider\") ? (\r\n          <ActionContainer\r\n            onPress={async () => {\r\n              await api\r\n                .delete(`/foto/${id}`)\r\n                .then(() => {\r\n                  navigation.goBack();\r\n                })\r\n                .catch((e) => console.log(e));\r\n            }}\r\n          >\r\n            <MaterialIcons name=\"delete-outline\" size={18} color=\"#e80d0d\" />\r\n          </ActionContainer>\r\n        ) : null}\r\n      </Header>\r\n      <Image\r\n        source={{\r\n          uri: foto,\r\n        }}\r\n        style={{ width, height: 400 }}\r\n        resizeMode=\"contain\"\r\n      />\r\n      <Footer>\r\n        <ActionContainer onPress={liked ? handleUnlike : handleCurtir}>\r\n          <LikeText>{curtidas}</LikeText>\r\n          {liked ? (\r\n            <MaterialIcons name=\"favorite\" size={18} color=\"#e80d0d\" />\r\n          ) : (\r\n            <MaterialIcons name=\"favorite-outline\" size={18} color=\"#e80d0d\" />\r\n          )}\r\n        </ActionContainer>\r\n      </Footer>\r\n    </Post>\r\n  );\r\n};\r\n\r\nconst Post = styled.View`\r\n  background-color: white;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Header = styled.TouchableOpacity`\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #127c82;\r\n`;\r\n\r\nconst Tempo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  color: #127c82;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst LikeText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #e80d0d;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CommentText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ActionContainer = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst NullAvatar = styled.View`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #bdbdbd;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport default FotoMural;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, View, ActivityIndicator, Dimensions } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { MuralStackParamList } from \"../../Routes/mural.routes\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { FAB } from \"react-native-paper\";\r\nimport { IFoto } from \"../../../declarations\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport api from \"../../Services/api\";\r\nimport FotoMural from \"../../Components/FotoMural\";\r\n\r\ntype Props = StackScreenProps<MuralStackParamList, \"Mural\">;\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nconst Mural = ({ navigation }: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(0);\r\n  const [fotos, setFotos] = useState<IFoto[]>([] as IFoto[]);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      try {\r\n        setLoading(true);\r\n        await api.get(`/foto?page=${page}`).then(({ data }) => {\r\n          setFotos(data.data);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        setLoading(true);\r\n        await api.get(`/foto?page=${page}`).then(({ data }) => {\r\n          setFotos(fotos.concat(data.data));\r\n          setPageSize(data.meta.lastPage);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getPosts();\r\n  }, [page]);\r\n\r\n  const loadMore = () => {\r\n    if (pageSize > page) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <Text>Mural das Equipes</Text>\r\n      </View>\r\n      <FlatList\r\n        data={fotos}\r\n        showsVerticalScrollIndicator={false}\r\n        keyExtractor={(foto) => foto.id.toString()}\r\n        refreshing={loading}\r\n        ListFooterComponent={() =>\r\n          loading ? <ActivityIndicator size=\"large\" color=\"#fff\" /> : null\r\n        }\r\n        onEndReachedThreshold={0.1}\r\n        onEndReached={loadMore}\r\n        renderItem={({ item }) => <FotoMural {...item} />}\r\n      />\r\n      {user ? (\r\n        <FAB\r\n          style={{ position: \"absolute\", margin: 25, right: 0, bottom: 0 }}\r\n          small\r\n          icon=\"plus\"\r\n          onPress={() => navigation.navigate(\"Adicionar\", { userId: user.id })}\r\n        />\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  width: ${width}px;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport default Mural;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, ActivityIndicator } from \"react-native\";\r\nimport { FontAwesome5, AntDesign } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { MuralStackParamList } from \"../../Routes/mural.routes\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { IEquipe } from \"../../../declarations\";\r\nimport * as Linking from \"expo-linking\";\r\nimport api from \"../../Services/api\";\r\nimport FotoMural from \"../../Components/FotoMural\";\r\n\r\ntype Props = StackScreenProps<MuralStackParamList, \"Perfil\">;\r\n\r\nconst Perfil = ({\r\n  navigation,\r\n  route: {\r\n    params: { equipeId },\r\n  },\r\n}: Props) => {\r\n  const [equipe, setEquipe] = useState<IEquipe | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getEquipe() {\r\n      setLoading(true);\r\n      await api\r\n        .get(`/equipe/${equipeId}`)\r\n        .then(({ data }) => {\r\n          setEquipe(data);\r\n          console.log(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipe();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Detail showsVerticalScrollIndicator={false}>\r\n        <ClickButton\r\n          style={{ margin: \"1rem 0\" }}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#FFF\" />\r\n        </ClickButton>\r\n        {loading ? (\r\n          <ActivityIndicator size=\"large\" color=\"#fff\" />\r\n        ) : (\r\n          <Header>\r\n            {equipe ? (\r\n              <>\r\n                {equipe.avatar ? (\r\n                  <Avatar source={{ uri: equipe.avatar }} />\r\n                ) : (\r\n                  <NullAvatar>\r\n                    <FontAwesome5 name=\"user\" size={24} color=\"#127c82\" />\r\n                  </NullAvatar>\r\n                )}\r\n                <Nome>{equipe.nome}</Nome>\r\n                <ClickButton\r\n                  onPress={() =>\r\n                    Linking.openURL(\r\n                      `https://www.instagram.com/${equipe.instagram}`\r\n                    )\r\n                  }\r\n                >\r\n                  <Instagram>Instagram: {equipe.instagram}</Instagram>\r\n                </ClickButton>\r\n                <Infos>\r\n                  <Distrito>{equipe.igreja.distrito.nome}</Distrito>\r\n                  <Igreja>{equipe.igreja.nome}</Igreja>\r\n                </Infos>\r\n              </>\r\n            ) : null}\r\n          </Header>\r\n        )}\r\n        <FlatList\r\n          data={equipe?.fotos}\r\n          showsVerticalScrollIndicator={false}\r\n          refreshing={loading}\r\n          ListFooterComponent={() =>\r\n            loading ? <ActivityIndicator size=\"large\" color=\"#fff\" /> : null\r\n          }\r\n          keyExtractor={(foto) => foto.id.toString()}\r\n          renderItem={({ item }) => <FotoMural {...item} />}\r\n        />\r\n      </Detail>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  background-color: #127c82;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Detail = styled.ScrollView`\r\n  flex: 1;\r\n`;\r\n\r\nconst Header = styled.View`\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: #fff;\r\n`;\r\n\r\nconst Infos = styled.View`\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Instagram = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 12px;\r\n  font-weight: 200;\r\n  color: #fff;\r\n`;\r\n\r\nconst Distrito = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #fff;\r\n`;\r\n\r\nconst Igreja = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #fff;\r\n`;\r\n\r\nconst NullAvatar = styled.View`\r\n  height: 70px;\r\n  width: 70px;\r\n  border-radius: 70px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #bdbdbd;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  height: 70px;\r\n  width: 70px;\r\n  border-radius: 70px;\r\n`;\r\n\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nexport default Perfil;\r\n","import { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport * as Picker from \"expo-image-picker\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { MuralStackParamList } from \"../../Routes/mural.routes\";\r\nimport { ActivityIndicator, Image, Dimensions } from \"react-native\";\r\nimport { FAB } from \"react-native-paper\";\r\nimport api from \"../../Services/api\";\r\n\r\ntype Props = StackScreenProps<MuralStackParamList, \"Adicionar\">;\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nconst Adicionar = ({\r\n  navigation,\r\n  route: {\r\n    params: { userId },\r\n  },\r\n}: Props) => {\r\n  const [foto, setFoto] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult = await Picker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await Picker.launchImageLibraryAsync({\r\n      mediaTypes: Picker.MediaTypeOptions.All,\r\n      quality: 1,\r\n      videoQuality: 0.7,\r\n    });\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n    setLoading(true);\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"file\", blob);\r\n        form.append(\"pasta\", \"mural\");\r\n        await api\r\n          .post(\"/upload\", form)\r\n          .then(async ({ data }) => {\r\n            setFoto(data.url);\r\n          })\r\n          .catch((e) => console.log(e))\r\n          .finally(() => setLoading(false));\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    await api\r\n      .post(\"/foto\", { userId, foto })\r\n      .then(() => {\r\n        setLoading(false);\r\n        navigation.popToTop();\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <Click\r\n          style={{ marginRight: \"1rem\" }}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127C82\" />\r\n        </Click>\r\n        <Titulo>\r\n          <Text>Foto para o mural da Equipe</Text>\r\n        </Titulo>\r\n      </Action>\r\n\r\n      {foto ? (\r\n        <Content>\r\n          <Envio>\r\n            <Image\r\n              source={{ uri: foto }}\r\n              style={{ width, height: 300 }}\r\n              resizeMode=\"cover\"\r\n            />\r\n          </Envio>\r\n        </Content>\r\n      ) : null}\r\n      {foto ? (\r\n        <Salvar onPress={handleSubmit}>\r\n          {loading ? (\r\n            <ActivityIndicator animating={true} color=\"#FFF\" />\r\n          ) : (\r\n            <TextButton>Postar</TextButton>\r\n          )}\r\n        </Salvar>\r\n      ) : null}\r\n\r\n      <FAB\r\n        small\r\n        icon=\"plus\"\r\n        label={foto ? \"Trocar Foto\" : \"Adicionar Foto\"}\r\n        onPress={openImagePickerAsync}\r\n        loading={loading}\r\n        style={{\r\n          position: \"absolute\",\r\n          margin: \"1rem\",\r\n          right: 0,\r\n          bottom: 0,\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Titulo = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  width: 100%;\r\n  background-color: #b1d2d6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst TextButton = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  width: 100%;\r\n`;\r\n\r\nconst Click = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Envio = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #5ea6a9;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n`;\r\n\r\nconst Salvar = styled.TouchableOpacity`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border-radius: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nexport default Adicionar;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Mural from \"../Pages/Mural/Mural\";\r\nimport Perfil from \"../Pages/Mural/Perfil\";\r\nimport Adicionar from \"../Pages/Mural/Adicionar\";\r\n\r\nexport type MuralStackParamList = {\r\n  Mural: undefined;\r\n  Perfil: {\r\n    equipeId: number;\r\n  };\r\n  Adicionar: {\r\n    userId: number;\r\n  };\r\n};\r\n\r\nconst MuralStack = createStackNavigator<MuralStackParamList>();\r\n\r\nconst MuralRoutes = () => (\r\n  <MuralStack.Navigator initialRouteName=\"Mural\">\r\n    <MuralStack.Screen\r\n      name=\"Mural\"\r\n      component={Mural}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <MuralStack.Screen\r\n      name=\"Perfil\"\r\n      component={Perfil}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <MuralStack.Screen\r\n      name=\"Adicionar\"\r\n      component={Adicionar}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </MuralStack.Navigator>\r\n);\r\n\r\nexport default MuralRoutes;\r\n","import React from \"react\";\r\nimport { Feather, Entypo, Ionicons, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport DesafiosRoutes from \"./desafios.routes\";\r\nimport RankingRoutes from \"./ranking.routes\";\r\nimport FeedRoutes from \"./feed.routes\";\r\nimport ConfigRoutes from \"./config.routes\";\r\nimport MuralRoutes from \"./mural.routes\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst AppRoutes: React.FC = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      tabBarOptions={{\r\n        showLabel: false,\r\n        activeTintColor: \"#127C82\",\r\n        inactiveTintColor: \"#000\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={FeedRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Entypo name=\"open-book\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Desafios\"\r\n        component={DesafiosRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons\r\n              name=\"game-controller-outline\"\r\n              size={size}\r\n              color={color}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Ranking\"\r\n        component={RankingRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"award\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Mural\"\r\n        component={MuralRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <SimpleLineIcons name=\"feed\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Configs\"\r\n        component={ConfigRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"settings\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\nexport default AppRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport { Feather, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components/native\";\r\nimport logo from \"../../assets/new.png\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { ActivityIndicator, Snackbar } from \"react-native-paper\";\r\nimport { AxiosError } from \"axios\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  ErrorText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Logo = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst LoginForm = styled.View`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-top-right-radius: 40px;\r\n  border-top-left-radius: 40px;\r\n`;\r\n\r\nconst TextButton = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TextButtonInside = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Login: undefined;\r\n  App: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Login\">;\r\n\r\nfunction Login({ navigation }: Props) {\r\n  const [recuperar, setRecuperar] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const { login } = useAuth();\r\n  const { control, handleSubmit, reset } = useForm({ mode: \"all\" });\r\n\r\n  const onRecuperar = async (data: { email: string }) => {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/recuperar\", data)\r\n      .then(() => {\r\n        setDisplay(true);\r\n        reset({});\r\n        setMessage(\"Siga as instruções enviadas no seu email\");\r\n      })\r\n      .catch((e) => {\r\n        const { response } = e as AxiosError;\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n        setRecuperar(false);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: { email: string; password: string }) => {\r\n    setLoading(true);\r\n    await login(data.email, data.password)\r\n      .catch(({ response }: AxiosError) => {\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <Image\r\n          source={logo}\r\n          style={{ width: 350, height: 250 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Text>{recuperar ? \"Recuperar senha\" : \"Bem vindo!\"}</Text>\r\n      </Logo>\r\n      <LoginForm>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"O email deve ser informado\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({\r\n              field: { value, onBlur, onChange },\r\n              fieldState: { error },\r\n            }) => (\r\n              <>\r\n                <InputIconText>\r\n                  <Feather name=\"mail\" size={18} color=\"#127c82\" />\r\n                  <Input\r\n                    autoCompleteType=\"email\"\r\n                    placeholderTextColor=\"#127C82\"\r\n                    placeholder=\"Email\"\r\n                    onChangeText={(text) => onChange(text.trim())}\r\n                    value={value}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </InputIconText>\r\n                {error && <ErrorText>{error.message}</ErrorText>}\r\n              </>\r\n            )}\r\n          />\r\n        </FormItem>\r\n        {!recuperar && (\r\n          <FormItem style={{ marginBottom: \"2rem\" }}>\r\n            <Label>Senha</Label>\r\n\r\n            <Controller\r\n              name=\"password\"\r\n              control={control}\r\n              rules={{\r\n                required: \"A senha precisa ser informada\",\r\n              }}\r\n              render={({\r\n                field: { value, onBlur, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <>\r\n                  <InputIconText>\r\n                    <SimpleLineIcons name=\"lock\" size={18} color=\"#127c82\" />\r\n                    <Input\r\n                      autoCompleteType=\"password\"\r\n                      secureTextEntry\r\n                      placeholderTextColor=\"#127C82\"\r\n                      placeholder=\"Senha\"\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      onBlur={onBlur}\r\n                    />\r\n                  </InputIconText>\r\n                  {error && <ErrorText>{error.message}</ErrorText>}\r\n                </>\r\n              )}\r\n            />\r\n          </FormItem>\r\n        )}\r\n        <FormItem style={{ marginBottom: 0 }}>\r\n          <Button\r\n            style={{\r\n              marginVertical: 10,\r\n              shadowColor: \"#000\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 1,\r\n              },\r\n              shadowOpacity: 0.22,\r\n              shadowRadius: 2.22,\r\n              elevation: 3,\r\n            }}\r\n            disabled={loading}\r\n            onPress={() => {\r\n              recuperar\r\n                ? handleSubmit(onRecuperar)()\r\n                : handleSubmit(onSubmit)();\r\n            }}\r\n          >\r\n            <ButtonInsideText>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Enviar\"\r\n              ) : (\r\n                \"Entrar\"\r\n              )}\r\n            </ButtonInsideText>\r\n          </Button>\r\n          <TextButton onPress={() => setRecuperar(!recuperar)}>\r\n            <TextButtonInside>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Voltar para login\"\r\n              ) : (\r\n                \"Esqueceu a senha?\"\r\n              )}\r\n            </TextButtonInside>\r\n          </TextButton>\r\n        </FormItem>\r\n      </LoginForm>\r\n      <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Login from \"../Pages/Login\";\r\nimport AppRoutes from \"./app.routes\";\r\n\r\nconst AppStack = createStackNavigator();\r\nconst { Navigator, Screen } = AppStack;\r\n\r\nconst AuthRoutes: React.FC = () => {\r\n  return (\r\n    <Navigator initialRouteName=\"Login\">\r\n      <Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\r\n      <Screen\r\n        name=\"App\"\r\n        component={AppRoutes}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport AppRoutes from \"./app.routes\";\r\nimport AuthRoutes from \"./auth.routes\";\r\n\r\nconst Routes = () => {\r\n  const { signed, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return signed ? <AppRoutes /> : <AuthRoutes />;\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { AuthProvider } from \"./Context/AuthContext\";\r\nimport Routes from \"./Routes/index.routes\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <AuthProvider>\r\n        <Routes />\r\n      </AuthProvider>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport App from \"./src\";\n\nexport default function Main() {\n  const [loaded] = useFonts({\n    Poppins: require(\"./assets/fonts/Poppins.ttf\"),\n  });\n\n  return !loaded ? <AppLoading /> : <App />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins.ttf\";"],"sourceRoot":""}