{"version":3,"sources":["assets/calebe.png","src/Services/api.tsx","src/Context/AuthContext.tsx","src/Pages/Feed.tsx","src/Pages/Desafios.tsx","src/Pages/Ranking.tsx","src/Components/Post.tsx","src/Pages/Configuracoes.tsx","src/Components/index.tsx","src/Pages/Editar.tsx","src/Pages/Equipe.tsx","src/Pages/EditarEquipe.tsx","src/Routes/app.routes.tsx","src/Pages/Login.tsx","src/Routes/auth.routes.tsx","src/Routes/index.routes.tsx","src/index.tsx","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins.ttf"],"names":["module","exports","api","axios","create","baseURL","interceptors","request","use","config","a","async","AsyncStorage","getItem","headers","Authorization","common","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","storageUser","storageToken","JSON","parse","defaults","loadStorage","Provider","value","signed","login","email","password","resolve","post","then","response","data","token","setItem","stringify","catch","erro","logout","clear","useAuth","useContext","Screens","Container","styled","View","Text","Desafios","ScrollView","Posicao","Equipe","Colocacao","Pontuacao","PrimeiroContainer","RankingContainer","Row","EquipeContainer","TouchableOpacity","PosicaoAvatar","ColocacaoContainer","style","StyleSheet","shadowRanking","borderColor","borderWidth","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","shadow","marginVertical","elevation","avatarBg","backgroundColor","Ranking","navigation","equipes","setEquipes","undefined","primeiro","setPrimeiro","segundo","setSegundo","terceiro","setTerceiro","get","temp","length","shift","e","console","log","finally","animating","color","MaterialCommunityIcons","name","size","avatar","Image","source","uri","Icon","icon","nome","map","index","id","key","onPress","navigate","Header","Content","Footer","Verso","Devocional","Titulo","Avatar","NullAvatar","LikeText","CommentText","ActionContainer","Post","item","verso","conteudo","titulo","autor","video","FontAwesome5","numberOfLines","MaterialIcons","FontAwesome","FeedContainer","SafeAreaView","Feed","posts","setPosts","addListener","FlatList","paddingHorizontal","keyExtractor","toString","renderItem","refreshing","PerfilContainer","NomeText","EquipeText","MenuContainer","Menu","Configuracoes","equipe","Feather","AntDesign","Input","TextInput","ErrorText","Button","ButtonInsideText","Label","FormItem","InfoText","FormContainer","Action","ClickButton","Editar","useForm","control","handleSubmit","message","setMessage","display","setDisplay","onSubmit","put","replace","ImagePicker","granted","alert","pickerResult","cancelled","block","fetch","res","blob","form","FormData","append","defaultValue","render","field","onBlur","onChange","placeholderTextColor","placeholder","rules","pattern","autoCompleteType","secureTextEntry","marginBottom","Snackbar","visible","onDismiss","Membros","Membro","Nome","route","params","setEquipe","goBack","perfil","equipeId","membros","membro","EditarEquipe","foto","setFoto","instagram","Tab","createBottomTabNavigator","ConfigStack","createStackNavigator","RankingStack","RankingRoutes","Navigator","initialRouteName","Screen","component","options","headerShown","ConfigRoutes","AppRoutes","tabBarOptions","showLabel","activeTintColor","inactiveTintColor","borderTopLeftRadius","borderTopRightRadius","tabBarIcon","Logo","LoginForm","TextButton","TextButtonInside","InputIconText","Login","recuperar","setRecuperar","mode","reset","onRecuperar","logo","resizeMode","required","fieldState","SimpleLineIcons","disabled","AppStack","AuthRoutes","Routes","flex","justifyContent","alignItems","ActivityIndicator","App","NavigationContainer","Main","useFonts","Poppins","require","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,oC,oKCGrCC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAiD,8BAGnDH,EAAII,aAAaC,QAAQC,KACvB,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACiDE,IAAaC,QAC1D,eAFJ,0BACEJ,EAAOK,QAAQC,cADjB,0BAAAL,EAAA,MAIwDE,IAAaC,QACjE,eALJ,0BAIEJ,EAAOK,QAAQE,OAAOD,cAJxB,iCAQSN,GART,+DAUA,SAACQ,GACCC,QAAQC,OAAOF,MAIJf,QCRTkB,EAAcC,wBAAgC,IAEvCC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvC,EAAwBC,mBAA0B,MAAlD,WAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KAqDA,OAnDAC,qBAAU,YACR,qBAAAnB,EAAAC,OAAA,kEAAAD,EAAA,MAC4BE,IAAaC,QAAQ,cADjD,cACQiB,EADR,kBAAApB,EAAA,MAE6BE,IAAaC,QAAQ,eAFlD,QAEQkB,EAFR,SAGsBD,GAClBJ,EAAQM,KAAKC,MAAMH,IACnBF,GAAW,GACX1B,EAAIgC,SAASpB,QAAQC,cAArB,UAA+CgB,GACrCD,GACVF,GAAW,GARf,4DAWAO,KACC,IAuCD,kBAACf,EAAYgB,SAAb,CACEC,MAAO,CAAEC,SAAUb,EAAMA,OAAMC,UAASa,MAtC5C,SAAqBC,EAAeC,GAApC,SAAA/B,EAAAC,OAAA,yEACS,IAAIO,SAAuB,SAACwB,EAASvB,GAC1CjB,EACGyC,KAAK,SAAU,CAAEH,QAAOC,aACxBG,MAAK,SAAOC,GAAP,mBAAAnC,EAAAC,OAAA,yDACoBkC,EAASC,KAAzBC,EADJ,EACIA,MAAOtB,EADX,EACWA,KACfC,EAAQD,GAFJ,WAAAf,EAAA,MAIEE,IAAaoC,QAAQ,YAAahB,KAAKiB,UAAUxB,IAAOmB,MAC5D,oBAAAlC,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAaoC,QAAQ,aAAcD,GAAOH,MAAK,WACnD1C,EAAIgC,SAASpB,QAAQE,OAAOD,cAA5B,UAAsDgC,EACtD7C,EAAIgC,SAASpB,QAAQC,cAArB,UAA+CgC,EAE/CL,EAAQG,OALZ,gEALE,+DAeLK,OAAM,SAACC,GACNhC,EAAOgC,UApBf,6DAsCmDC,OAbnD,oBAAA1C,EAAAC,OAAA,yEACS,IAAIO,SAAuB,SAACwB,GACjCxC,EAAIyC,KAAK,WAAWC,MAAK,SAAOC,GAAP,SAAAnC,EAAAC,OAAA,kEAAAD,EAAA,MACjBE,IAAayC,QAAQT,MAAK,WAC9BlB,EAAQ,MACRgB,EAAQG,OAHa,mEAF7B,6DAa2DlB,YAEtDJ,IAKA,SAAS+B,IAEd,OADgBC,qBAAWnC,GAIdA,I,wDClEHoC,E,2DCjBNC,GAAYC,KAAOC,KAAV,mIAOTC,GAAOF,KAAOE,KAAV,4HAmBKC,GAXE,WACf,OACE,kBAACJ,GAAD,KACE,kBAACG,GAAD,iBACA,kBAACH,GAAD,KACE,kBAACG,GAAD,4C,qCCbFH,GAAYC,KAAOC,KAAV,mIAUTC,IAFSF,KAAOI,WAAV,kBAECJ,KAAOE,KAAV,6HAQJG,GAAUL,KAAOE,KAAV,oFAMPI,GAASN,KAAOE,KAAV,oFAMNK,GAAYP,KAAOC,KAAV,qIAQTO,GAAYR,KAAOE,KAAV,2GAOTO,GAAoBT,KAAOC,KAAV,qIAQjBS,GAAmBV,KAAOC,KAAV,mGAOhBU,GAAMX,KAAOC,KAAV,8DAKHW,GAAkBZ,KAAOa,iBAAV,6MAWfC,GAAgBd,KAAOC,KAAV,wIAQbc,GAAqBf,KAAOC,KAAV,mLAUlBe,GAAQC,KAAWvE,OAAO,CAC9BwE,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEhBC,OAAQ,CACNC,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdG,UAAW,GAEbC,SAAU,CACRC,gBAAiB,aA0JNC,GApJC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WACjB,EAA8BnE,mBAAoB,IAAlD,WAAOoE,EAAP,KAAgBC,EAAhB,KACA,EAA8BrE,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,wBAA8BsE,GAA9D,WAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BxE,wBAA8BsE,GAA5D,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgC1E,wBAA8BsE,GAA9D,WAAOK,EAAP,KAAiBC,EAAjB,KAsBA,OApBAvE,qBAAU,WACR,EAAAnB,EAAAC,OAAA,uDACEiB,GAAW,GADb,WAAAlB,EAAA,MAEQR,EACHmG,IAAI,WACJzD,MAAK,YAAe,IACf0D,EADc,EAAXxD,KAEHwD,EAAKC,OAAS,IAChBP,EAAYM,EAAKE,SACjBN,EAAWI,EAAKE,SAChBJ,EAAYE,EAAKE,UAEnBX,EAAWS,MAEZpD,OAAM,SAACuD,GAAD,OAAOC,QAAQC,IAAIF,MACzBG,SAAQ,kBAAMhF,GAAW,OAd9B,8DAiBC,IAGD,kBAAC,GAAD,KACE,kBAAC,GAAD,2BACCD,EACC,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,UAG5C,oCACGf,GAAYE,GAAWE,GACtB,oCACE,kBAAChC,GAAD,KACE,kBAACK,GAAD,KACE,kBAACT,GAAD,UACA,kBAACgD,GAAA,EAAD,CACEC,KAAK,QACLC,KAAM,GACNH,MAAM,YAEPf,EAASmB,OACR,kBAAC,KAAOC,MAAR,CACEzC,MAAOA,GAAME,cACbwC,OAAQ,CAAEC,IAAKtB,EAASmB,QACxBD,KAAM,KAGR,kBAAC,KAAOK,KAAR,CACE5C,MAAOA,GAAME,cACb2C,KAAK,UACLN,KAAM,KAGV,kBAAC,GAAD,KAASlB,EAASyB,MAClB,kBAACtD,GAAD,YAGJ,kBAACO,GAAD,KACE,kBAACD,GAAD,KACE,kBAACT,GAAD,UACA,kBAACgD,GAAA,EAAD,CACEC,KAAK,QACLC,KAAM,GACNH,MAAM,YAEPb,EAAQiB,OACP,kBAAC,KAAOC,MAAR,CACEzC,MAAOA,GAAME,cACbwC,OAAQ,CAAEC,IAAKpB,EAAQiB,QACvBD,KAAM,KAGR,kBAAC,KAAOK,KAAR,CACE5C,MAAOA,GAAME,cACb2C,KAAK,UACLN,KAAM,KAGV,kBAAC,GAAD,KAAShB,EAAQuB,MACjB,kBAACtD,GAAD,WAEF,kBAACM,GAAD,KACE,kBAACT,GAAD,UACA,kBAACgD,GAAA,EAAD,CACEC,KAAK,QACLC,KAAM,GACNH,MAAM,YAEPX,EAASe,OACR,kBAAC,KAAOC,MAAR,CACEzC,MAAOA,GAAME,cACbwC,OAAQ,CAAEC,IAAKlB,EAASe,QACxBD,KAAM,KAGR,kBAAC,KAAOK,KAAR,CACE5C,MAAOA,GAAME,cACb2C,KAAK,UACLN,KAAM,KAGV,kBAAClD,GAAD,KAAUoC,EAASqB,MACnB,kBAACtD,GAAD,aAKR,kBAACE,GAAD,KACGwB,EAAQ6B,KAAI,WAAuBC,GAAvB,IAAGC,EAAH,EAAGA,GAAIT,EAAP,EAAOA,OAAQM,EAAf,EAAeA,KAAf,OACX,kBAACnD,GAAD,CAAKuD,IAAKD,GACR,kBAAC1D,GAAD,KACE,kBAACF,GAAD,KAAU2D,EAAQ,IAEpB,kBAACpD,GAAD,CACEI,MAAOA,GAAMW,OACbwC,QAAS,kBAAMlC,EAAWmC,SAAS,SAAU,CAAEH,SAE9CT,EACC,kBAAC,KAAOC,MAAR,CACEzC,MAAOA,GAAMc,SACb4B,OAAQ,CAAEC,IAAKH,GACfD,KAAM,KAGR,kBAAC,KAAOK,KAAR,CACE5C,MAAOA,GAAMc,SACb+B,KAAK,UACLN,KAAM,KAGV,kBAAC,GAAD,KAASO,GACT,kBAACtD,GAAD,mB,uCCzQZT,GAAYC,KAAOC,KAAV,0FAMToE,GAASrE,KAAOC,KAAV,sKASNqE,GAAUtE,KAAOC,KAAV,iJAQPsE,GAASvE,KAAOC,KAAV,wGAONuE,GAAQxE,KAAOE,KAAV,+HAQLuE,GAAazE,KAAOE,KAAV,sFAMVwE,GAAS1E,KAAOE,KAAV,2GAONyE,GAAS3E,KAAOyD,MAAV,oGAONmB,GAAa5E,KAAOC,KAAV,uMAWV4E,GAAW7E,KAAOE,KAAV,6GAOR4E,GAAc9E,KAAOE,KAAV,0GAOX6E,GAAkB/E,KAAOC,KAAV,wGAoDN+E,GA7C2B,SAAC,GAEpC,IAAD,IADJC,KAAQC,EACJ,EADIA,MAAOC,EACX,EADWA,SAAUC,EACrB,EADqBA,OAAQC,EAC7B,EAD6BA,MAC7B,EADoCC,MAExC,OACE,kBAAC,GAAD,CACEtE,MAAO,CACLY,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdG,UAAW,IAGb,kBAACwC,GAAD,KACGgB,EAAM7B,OACL,kBAACmB,GAAD,CAAQjB,OAAQ,CAAEC,IAAK0B,EAAM7B,UAE7B,kBAACoB,GAAD,KACE,kBAACW,GAAA,EAAD,CAAcjC,KAAK,OAAOC,KAAM,GAAIH,MAAM,WAG9C,kBAACsB,GAAD,KAASU,IAEX,kBAACd,GAAD,KACE,kBAACE,GAAD,KAAQU,GACR,kBAACT,GAAD,CAAYe,cAAe,IAAKL,IAElC,kBAACZ,GAAD,KACE,kBAACQ,GAAD,KACE,kBAACF,GAAD,WACA,kBAACY,GAAA,EAAD,CAAenC,KAAK,mBAAmBC,KAAM,GAAIH,MAAM,aAEzD,kBAAC2B,GAAD,KACE,kBAACD,GAAD,WACA,kBAACY,GAAA,EAAD,CAAapC,KAAK,eAAeC,KAAM,GAAIH,MAAM,cH9HrDuC,GAAgB3F,KAAO4F,aAAV,+D,SAYP9F,K,YAAAA,E,kBAAAA,E,oBAAAA,E,mBAAAA,M,KAWZ,I,oFAgDe+F,GAhDF,SAAC,GAAiC,IAA/B5D,EAA8B,EAA9BA,WACd,EAA0BnE,mBAAwB,IAAlD,WAAOgI,EAAP,KAAcC,EAAd,KACA,EAA8BjI,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KAiCA,OA/BAC,qBAAU,WACR,EAAAnB,EAAAC,OAAA,gEAEIiB,GAAW,GAFf,WAAAlB,EAAA,MAGUR,EAAImG,IAAI,eAAezD,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACnC2G,EAAS3G,OAJf,sDAOI4D,QAAQC,IAAR,MAPJ,uBASI/E,GAAW,GATf,mFAaC,IAEHC,qBAAU,WACR8D,EAAW+D,YAAY,SAAS,oBAAAhJ,EAAAC,OAAA,gEAE5BiB,GAAW,GAFiB,WAAAlB,EAAA,MAGtBR,EAAImG,IAAI,eAAezD,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACnC2G,EAAS3G,OAJiB,sDAO5B4D,QAAQC,IAAR,MAP4B,uBAS5B/E,GAAW,GATiB,sFAY/B,IAGD,kBAACyH,GAAD,KACE,kBAACM,GAAA,EAAD,CACE7G,KAAM0G,EACN9E,MAAO,CAAEkF,kBAAmB,IAC5BC,aAAc,SAAClB,GAAD,OAAUA,EAAKhB,GAAGmC,YAChCC,WAAYrB,GACZsB,WAAYrI,M,UIlEd8B,GAAYC,KAAOC,KAAV,yHAQTsG,GAAkBvG,KAAOC,KAAV,8GAOfuG,GAAWxG,KAAOE,KAAV,6GAORuG,GAAazG,KAAOE,KAAV,6GAOVwG,GAAgB1G,KAAOC,KAAV,8KAUb0G,GAAO3G,KAAOa,iBAAV,2IAmFK+F,GApEO,SAAC,GAA2B,IAAzB3E,EAAwB,EAAxBA,WACvB,EAAyBrC,IAAjBF,EAAR,EAAQA,OAAQ3B,EAAhB,EAAgBA,KAChB,EAA8BD,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACE,kBAAC,GAAD,KACE,kBAACqI,GAAD,KACE,kBAAC,KAAO9C,MAAR,CACEC,OAAQ,CACNC,IAAG,MAAE5F,OAAF,EAAEA,EAAMyF,UAGf,kBAACgD,GAAD,WAAWzI,OAAX,EAAWA,EAAM+F,MACjB,kBAAC2C,GAAD,sBAAuB1I,OAAvB,EAAuBA,EAAM8I,OAAO/C,QAEtC,kBAAC4C,GAAD,CACE1F,MAAO,CACLY,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdG,UAAW,IAGb,kBAAC8E,GAAD,CAAMxC,QAAS,kBAAMlC,EAAWmC,SAAS,YACvC,kBAAC0C,EAAA,EAAD,CAASxD,KAAK,OAAOC,KAAM,GAAIH,MAAM,YACrC,kBAACoD,GAAD,qBACA,kBAACO,GAAA,EAAD,CAAWzD,KAAK,QAAQC,KAAM,GAAIH,MAAM,cAG5C,kBAACsD,GAAD,CACE1F,MAAO,CACLY,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdG,UAAW,IAGb,kBAAC8E,GAAD,CACExC,QAAS,oBAAAnH,EAAAC,OAAA,uDACPiB,GAAW,GADJ,WAAAlB,EAAA,MAED0C,IAASwD,SAAQ,kBAAMhF,GAAW,OAFjC,8DAKT,kBAAC6I,GAAA,EAAD,CAAWzD,KAAK,SAASC,KAAM,GAAIH,MAAM,QACzC,kBAACoD,GAAD,CAAUxF,MAAO,CAAEoC,MAAO,QACvBnF,EACC,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,QAE1C,QAGJ,kBAAC2D,GAAA,EAAD,CAAWzD,KAAK,QAAQC,KAAM,GAAIH,MAAM,Y,2DCxHrC4D,GAAQhH,KAAOiH,UAAV,6KAULC,GAAYlH,KAAOE,KAAV,oFAMTiH,GAASnH,KAAOa,iBAAV,mLAUNuG,GAAmBpH,KAAOE,KAAV,kEAKhBmH,GAAQrH,KAAOE,KAAV,mIAQLoH,GAAWtH,KAAOC,KAAV,uICrBfF,GAAYC,KAAOC,KAAV,yHAQTsG,GAAkBvG,KAAOC,KAAV,8GAOfuG,GAAWxG,KAAOE,KAAV,6GAORqH,GAAWvH,KAAOE,KAAV,6GAORsH,GAAgBxH,KAAOC,KAAV,8KAUbwH,GAASzH,KAAOC,KAAV,wIAONyH,GAAc1H,KAAOa,iBAAV,oBAwLF8G,GA/KA,SAAC,GAA2B,IAAzB1F,EAAwB,EAAxBA,WAChB,EAA0BrC,IAAlB7B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAkC4J,eAA1BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACjB,EAA8BhK,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,WAAOiK,EAAP,KAAgBC,EAAhB,KACA,EAA8BlK,oBAAS,GAAvC,WAAOmK,EAAP,KAAgBC,EAAhB,KAmCMC,EAAW,SAAO/I,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAETR,EACH4L,IADG,mBACarK,OADb,EACaA,EAAMkG,IAAM7E,GAC5BF,MAAK,2BAAAlC,EAAAC,OAAA,uDAASmC,EAAT,EAASA,KACbpB,EAAQoB,GADJ,WAAApC,EAAA,MAEEE,IAAaoC,QAAQ,YAAahB,KAAKiB,UAAUH,KAFnD,OAGJ8I,GAAW,GACXF,EAAW,kCACX/F,EAAWoG,QAAQ,gBALf,+DAOL7I,OAAM,SAACuD,GACNC,QAAQC,IAAIF,MAEbG,SAAQ,WACPhF,GAAW,OAfA,6DAmBjB,OACE,kBAAC,GAAD,KACE,kBAACuJ,GAAD,KACE,kBAACC,GAAD,CAAavD,QAAS,kBAAMlC,EAAWoG,QAAQ,kBAC7C,kBAACtB,GAAA,EAAD,CAAWzD,KAAK,YAAYC,KAAM,GAAIH,MAAM,cAGhD,kBAAC,GAAD,KACE,kBAACsE,GAAD,CAAavD,QA5DQ,4BAAAnH,EAAAC,OAAA,kEAAAD,EAAA,MAEjBsL,QAFiB,WAIQ,IAJR,OAIJC,QAJI,uBAKvBC,MAAM,iDALiB,4CAAAxL,EAAA,MASAsL,QATA,WAUM,KAD3BG,EATqB,QAURC,UAVQ,mDAcnBC,EAAQF,EAAa9E,IAE3BiF,MAAMD,GACHzJ,MAAK,SAAC2J,GAAD,OAASA,EAAIC,UAClB5J,MAAK,SAAO4J,GAAP,eAAA9L,EAAAC,OAAA,uDACE8L,EAAO,IAAIC,MACZC,OAAO,SAAUH,GAFlB,WAAA9L,EAAA,MAGER,EACH4L,IADG,mBACarK,OADb,EACaA,EAAMkG,IAAM8E,GAC5B7J,MAAK,2BAAAlC,EAAAC,OAAA,uDAASmC,EAAT,EAASA,KACbpB,EAAQoB,GADJ,WAAApC,EAAA,MAEEE,IAAaoC,QAAQ,YAAahB,KAAKiB,UAAUH,KAFnD,OAGJ8I,GAAW,GACXF,EAAW,gCAJP,+DAMLxI,OAAM,SAACuD,GAAD,OAAOC,QAAQC,IAAIF,OAXxB,+DAlBiB,+DA6DnB,kBAAC,KAAOU,MAAR,CACEC,OAAQ,CACNC,IAAG,MAAE5F,OAAF,EAAEA,EAAMyF,QAEbD,KAAM,MAGV,kBAAC,GAAD,gBACA,kBAACgE,GAAD,uBAEF,kBAACC,GAAD,KACE,kBAACF,GAAD,KACE,kBAACD,GAAD,aACA,kBAAC,KAAD,CACE/D,KAAK,OACLuE,QAASA,EACTqB,aAAY,MAAEnL,OAAF,EAAEA,EAAM+F,KACpBqF,OAAQ,oBAAGC,MAASzK,EAAZ,EAAYA,MAAO0K,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACtC,GAAD,CACEuC,qBAAqB,UACrBC,YAAY,OACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,QAKhB,kBAAC/B,GAAD,KACE,kBAACD,GAAD,cACA,kBAAC,KAAD,CACE/D,KAAK,QACLuE,QAASA,EACTqB,aAAY,MAAEnL,OAAF,EAAEA,EAAMe,MACpB2K,MAAO,CACLC,QAAS,CACP/K,MAAO,4CACPoJ,QAAS,iCAGboB,OAAQ,oBAAGC,MAASzK,EAAZ,EAAYA,MAAO0K,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACtC,GAAD,CACE2C,iBAAiB,QACjBJ,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,QAKhB,kBAAC/B,GAAD,KACE,kBAACD,GAAD,cACA,kBAAC,KAAD,CACE/D,KAAK,WACLuE,QAASA,EACTsB,OAAQ,oBAAGC,MAASzK,EAAZ,EAAYA,MAAO0K,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACtC,GAAD,CACE2C,iBAAiB,WACjBC,iBAAe,EACfL,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,SAMlB,kBAAC/B,GAAD,CAAUtG,MAAO,CAAE6I,aAAc,IAC/B,kBAAC1C,GAAD,CACEnG,MAAO,CACLY,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdG,UAAW,IAGb,kBAACuF,GAAD,CAAkBjD,QAAS,kBAAM2D,EAAaK,EAAbL,KAC9B7J,EACC,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,SAE1C,YAKR,kBAAC0G,GAAA,EAAD,CACEC,QAAS9B,EACT+B,UAAW,WACT9B,GAAW,GACXF,EAAW,MAGZD,K,kPCzOT,I,0CAAMhI,GAAYC,KAAOC,KAAV,uJASTsG,GAAkBvG,KAAOC,KAAV,8GAOfuG,GAAWxG,KAAOE,KAAV,0GAORuH,GAASzH,KAAOC,KAAV,wIAQNsH,GAAWvH,KAAOE,KAAV,0GAOR+J,GAAUjK,KAAOI,WAAV,qGAOP8J,GAASlK,KAAOa,iBAAV,yMAUNsJ,GAAOnK,KAAOE,KAAV,sFAMJc,GAAQC,KAAWvE,OAAO,CAC9BwE,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEhBC,OAAQ,CACNC,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdG,UAAW,GAEbC,SAAU,CACRC,gBAAiB,aAIf2F,GAAc1H,KAAOa,iBAAV,oBA0FFP,GAtFA,SAAC,GAKF,IAJZ2B,EAIW,EAJXA,WAEYgC,EAED,EAHXmG,MACEC,OAAUpG,GAGJlG,EAAS6B,IAAT7B,KACR,EAA8BD,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAyB,MAArD,WAAO+I,EAAP,KAAeyD,EAAf,KAgBA,OAdAnM,qBAAU,WACR,EAAAnB,EAAAC,OAAA,uDACEiB,GAAW,GADb,WAAAlB,EAAA,MAEQR,EACHmG,IADG,WACYsB,GACf/E,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACPkL,EAAUlL,MAEXI,OAAM,SAACuD,GAAD,OAAOC,QAAQC,IAAIF,MACzBG,SAAQ,kBAAMhF,GAAW,OAR9B,8DAWC,IAGD,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAaiG,QAAS,kBAAMlC,EAAWsI,WACrC,kBAACxD,GAAA,EAAD,CAAWzD,KAAK,YAAYC,KAAM,GAAIH,MAAM,WAG/CnF,EACC,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,SAE1C,oCACGyD,GACC,kBAAC,GAAD,KACGA,EAAOrD,OACN,kBAAC,KAAOC,MAAR,CACEC,OAAQ,CACNC,IAAKkD,EAAOrD,QAEdD,KAAM,KAGR,kBAAC,KAAOK,KAAR,CAAa5C,MAAOA,GAAMc,SAAU+B,KAAK,UAAUN,KAAM,KAG3D,kBAAC,GAAD,KAAWsD,EAAO/C,QACE,YAAb,MAAJ/F,OAAA,EAAAA,EAAMyM,UAA2B,MAAJzM,OAAA,EAAAA,EAAM0M,YAAaxG,IACjD,kBAAC,GAAD,CACEE,QAAS,kBAAMlC,EAAWmC,SAAS,S,oWAApB,IAAmCyC,MAElD,kBAAC,GAAD,wBAKR,kBAACoD,GAAD,WACGpD,OADH,EACGA,EAAQ6D,QAAQ3G,KAAI,SAAC4G,GAAD,OACnB,kBAACT,GAAD,CAAQlJ,MAAOA,GAAMW,OAAQuC,IAAKyG,EAAO1G,IACtC0G,EAAOnH,OACN,kBAAC,KAAOC,MAAR,CACEC,OAAQ,CACNC,IAAKgH,EAAOnH,QAEdD,KAAM,KAGR,kBAAC,KAAOK,KAAR,CACE5C,MAAOA,GAAMc,SACb+B,KAAK,UACLN,KAAM,KAGV,kBAAC4G,GAAD,KAAOQ,EAAO7G,MACd,kBAACgD,EAAA,EAAD,CAASxD,KAAK,gBAAgBC,KAAM,GAAIH,MAAM,oBC9JxDrD,GAAYC,KAAOC,KAAV,yHAQTsG,GAAkBvG,KAAOC,KAAV,8GAOfuG,GAAWxG,KAAOE,KAAV,6GAORqH,GAAWvH,KAAOE,KAAV,6GAORsH,GAAgBxH,KAAOC,KAAV,8KAUbwH,GAASzH,KAAOC,KAAV,wIAONyH,GAAc1H,KAAOa,iBAAV,oBAEXG,GAAQC,KAAWvE,OAAO,CAC9BwE,cAAe,CACbC,YAAa,UACbC,YAAa,EACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEhBC,OAAQ,CACNC,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,GACfC,aAAc,EACdG,UAAW,GAEbC,SAAU,CACRC,gBAAiB,aA6JN6I,GAvJM,SAAC,GAA8C,IAA5C3I,EAA2C,EAA3CA,WAAqBoI,EAAsB,EAA/BD,MAASC,OAC3C,EAAwBvM,mBAASuM,EAAO7G,QAAxC,WAAOqH,EAAP,KAAaC,EAAb,KACA,EAAkClD,eAA1BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACjB,EAA8BhK,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,WAAOiK,EAAP,KAAgBC,EAAhB,KACA,EAA8BlK,oBAAS,GAAvC,WAAOmK,EAAP,KAAgBC,EAAhB,KAkCMC,EAAW,SAAO/I,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAETR,EACH4L,IADG,WACYiC,EAAOpG,GAAM7E,GAC5BF,MAAK,oBAAAlC,EAAAC,OAAA,gDACJiL,GAAW,GACXF,EAAW,kCACX/F,EAAWsI,SAHP,+DAKL/K,OAAM,SAACuD,GACNC,QAAQC,IAAIF,MAEbG,SAAQ,WACPhF,GAAW,OAbA,6DAiBjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAaiG,QAAS,kBAAMlC,EAAWsI,WACrC,kBAACxD,GAAA,EAAD,CAAWzD,KAAK,YAAYC,KAAM,GAAIH,MAAM,cAGhD,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAae,QAzDQ,4BAAAnH,EAAAC,OAAA,kEAAAD,EAAA,MAEjBsL,QAFiB,WAIQ,IAJR,OAIJC,QAJI,uBAKvBC,MAAM,iDALiB,4CAAAxL,EAAA,MASAsL,QATA,WAUM,KAD3BG,EATqB,QAURC,UAVQ,mDAcnBC,EAAQF,EAAa9E,IAE3BiF,MAAMD,GACHzJ,MAAK,SAAC2J,GAAD,OAASA,EAAIC,UAClB5J,MAAK,SAAO4J,GAAP,eAAA9L,EAAAC,OAAA,uDACE8L,EAAO,IAAIC,MACZC,OAAO,SAAUH,GAFlB,WAAA9L,EAAA,MAGER,EACH4L,IADG,WACYiC,EAAOpG,GAAM8E,GAC5B7J,MAAK,2BAAAlC,EAAAC,OAAA,gDAASmC,EAAT,EAASA,KACb0L,EAAQ1L,EAAKoE,QACb0E,GAAW,GACXF,EAAW,gCAHP,+DAKLxI,OAAM,SAACuD,GAAD,OAAOC,QAAQC,IAAIF,OAVxB,+DAlBiB,+DA0DlB8H,EACC,kBAAC,KAAOpH,MAAR,CACEC,OAAQ,CACNC,IAAKkH,GAEPtH,KAAM,KAGR,kBAAC,KAAOK,KAAR,CAAa5C,MAAOA,GAAMc,SAAU+B,KAAK,UAAUN,KAAM,MAG7D,kBAAC,GAAD,KAAW8G,EAAOvG,MAClB,kBAAC,GAAD,uBAEF,kBAAC,GAAD,KACE,kBAACwD,GAAD,KACE,kBAACD,GAAD,aACA,kBAAC,KAAD,CACE/D,KAAK,OACLuE,QAASA,EACTqB,aAAcmB,EAAOvG,KACrBqF,OAAQ,oBAAGC,MAASzK,EAAZ,EAAYA,MAAO0K,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACtC,GAAD,CACEuC,qBAAqB,UACrBC,YAAY,OACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,QAKhB,kBAAC/B,GAAD,KACE,kBAACD,GAAD,cACA,kBAAC,KAAD,CACE/D,KAAK,YACLuE,QAASA,EACTqB,aAAcmB,EAAOU,UACrB5B,OAAQ,oBAAGC,MAASzK,EAAZ,EAAYA,MAAO0K,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAA3B,OACN,kBAACtC,GAAD,CACEuC,qBAAqB,UACrBC,YAAY,YACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,SAMlB,kBAAC/B,GAAD,CAAUtG,MAAO,CAAE6I,aAAc,IAC/B,kBAAC1C,GAAD,CACEnG,MAAO,CACLY,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdG,UAAW,IAGb,kBAACuF,GAAD,CAAkBjD,QAAS,kBAAM2D,EAAaK,EAAbL,KAC9B7J,EACC,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,SAE1C,YAKR,kBAAC0G,GAAA,EAAD,CACEC,QAAS9B,EACT+B,UAAW,WACT9B,GAAW,GACXF,EAAW,MAGZD,KCrNHiD,GAAMC,cAENC,GAAcC,eAEdC,GAAeD,eAEfE,GAAgB,kBACpB,kBAACD,GAAaE,UAAd,CAAwBC,iBAAiB,WACvC,kBAACH,GAAaI,OAAd,CACElI,KAAK,UACLmI,UAAWzJ,GACX0J,QAAS,CAAEC,aAAa,KAE1B,kBAACP,GAAaI,OAAd,CACElI,KAAK,SACLmI,UAAWnL,GACXoL,QAAS,CAAEC,aAAa,KAE1B,kBAACP,GAAaI,OAAd,CACElI,KAAK,SACLmI,UAAWb,GACXc,QAAS,CAAEC,aAAa,OAKxBC,GAAe,kBACnB,kBAACV,GAAYI,UAAb,CAAuBC,iBAAiB,gBACtC,kBAACL,GAAYM,OAAb,CACElI,KAAK,eACLmI,UAAW7E,GACX8E,QAAS,CAAEC,aAAa,KAE1B,kBAACT,GAAYM,OAAb,CACElI,KAAK,SACLmI,UAAW9D,GACX+D,QAAS,CAAEC,aAAa,OA2DfE,GAtDa,WAC1B,OACE,kBAACb,GAAIM,UAAL,CACEC,iBAAiB,OACjBO,cAAe,CACbC,WAAW,EACXC,gBAAiB,UACjBC,kBAAmB,OACnBjL,MAAO,CACLe,gBAAiB,OACjBmK,oBAAqB,GACrBC,qBAAsB,MAI1B,kBAACnB,GAAIQ,OAAL,CACElI,KAAK,OACLmI,UAAW5F,GACX6F,QAAS,CACPU,WAAY,gBAAGhJ,EAAH,EAAGA,MAAOG,EAAV,EAAUA,KAAV,OACV,kBAACuD,EAAA,EAAD,CAASxD,KAAK,OAAOC,KAAMA,EAAMH,MAAOA,QAI9C,kBAAC4H,GAAIQ,OAAL,CACElI,KAAK,UACLmI,UAAWJ,GACXK,QAAS,CACPU,WAAY,gBAAGhJ,EAAH,EAAGA,MAAOG,EAAV,EAAUA,KAAV,OACV,kBAACuD,EAAA,EAAD,CAASxD,KAAK,QAAQC,KAAMA,EAAMH,MAAOA,QAI/C,kBAAC4H,GAAIQ,OAAL,CACElI,KAAK,WACLmI,UAAWtL,GACXuL,QAAS,CACPU,WAAY,gBAAGhJ,EAAH,EAAGA,MAAOG,EAAV,EAAUA,KAAV,OACV,kBAACuD,EAAA,EAAD,CAASxD,KAAK,WAAWC,KAAMA,EAAMH,MAAOA,QAIlD,kBAAC4H,GAAIQ,OAAL,CACElI,KAAK,UACLmI,UAAWG,GACXF,QAAS,CACPU,WAAY,gBAAGhJ,EAAH,EAAGA,MAAOG,EAAV,EAAUA,KAAV,OACV,kBAACuD,EAAA,EAAD,CAASxD,KAAK,WAAWC,KAAMA,EAAMH,MAAOA,U,wCCpGlDrD,GAAYC,KAAOC,KAAV,qIAQToM,GAAOrM,KAAOC,KAAV,wGAOJC,GAAOF,KAAOE,KAAV,2GAOJoM,GAAYtM,KAAOC,KAAV,qNAWTsM,GAAavM,KAAOa,iBAAV,6HAQV2L,GAAmBxM,KAAOE,KAAV,wFAMhBuM,GAAgBzM,KAAOC,KAAV,qLAuLJyM,OAtKf,YAAsC,EAArBzK,WAAsB,IACrC,EAAkCnE,oBAAS,GAA3C,WAAO6O,EAAP,KAAkBC,EAAlB,KACA,EAA8B9O,oBAAS,GAAvC,WAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,WAAOiK,EAAP,KAAgBC,EAAhB,KACA,EAA8BlK,oBAAS,GAAvC,WAAOmK,EAAP,KAAgBC,EAAhB,KACQrJ,EAAUe,IAAVf,MACR,EAAyC+I,aAAQ,CAAEiF,KAAM,QAAjDhF,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcgF,EAA/B,EAA+BA,MAEzBC,EAAc,SAAO3N,GAAP,SAAApC,EAAAC,OAAA,uDAClBiB,GAAW,GADO,WAAAlB,EAAA,MAEZR,EACHyC,KAAK,aAAcG,GACnBF,MAAK,WACJgJ,GAAW,GACX4E,EAAM,IACN9E,EAAW,qDAEZxI,OAAM,SAACuD,GACN,IAAQ5D,EAAa4D,EAAb5D,SACR+I,GAAW,GACXF,EAAU,MAAC7I,OAAD,EAACA,EAAUC,KAAK2I,SAC1B6E,GAAa,MAEd1J,SAAQ,WACPhF,GAAW,OAhBG,6DAoBdiK,EAAW,SAAO/I,GAAP,SAAApC,EAAAC,OAAA,uDACfiB,GAAW,GADI,WAAAlB,EAAA,MAET6B,EAAMO,EAAKN,MAAOM,EAAKL,UAC1BS,OAAM,YAA+B,IAA5BL,EAA2B,EAA3BA,SACR+I,GAAW,GACXF,EAAU,MAAC7I,OAAD,EAACA,EAAUC,KAAK2I,YAE3B7E,SAAQ,kBAAMhF,GAAW,OAPb,6DAUjB,OACE,kBAAC,GAAD,KACE,kBAACmO,GAAD,KACE,kBAAC5I,GAAA,EAAD,CACEC,OAAQsJ,KACRhM,MAAO,CAAEM,MAAO,IAAKC,OAAQ,KAC7B0L,WAAW,YAEb,kBAAC,GAAD,KAAON,EAAY,kBAAoB,eAEzC,kBAACL,GAAD,KACE,kBAAChF,GAAD,KACE,kBAACD,GAAD,cAEA,kBAAC,KAAD,CACE/D,KAAK,QACLuE,QAASA,EACT4B,MAAO,CACLyD,SAAU,6BACVxD,QAAS,CACP/K,MAAO,4CACPoJ,QAAS,iCAGboB,OAAQ,oBACNC,MAASzK,EADH,EACGA,MAAO0K,EADV,EACUA,OAAQC,EADlB,EACkBA,SACV/L,EAFR,EAEN4P,WAAc5P,MAFR,OAIN,oCACE,kBAACkP,GAAD,KACE,kBAAC3F,EAAA,EAAD,CAASxD,KAAK,OAAOC,KAAM,GAAIH,MAAM,YACrC,kBAAC4D,GAAD,CACE2C,iBAAiB,QACjBJ,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,KAGX9L,GAAS,kBAAC2J,GAAD,KAAY3J,EAAMwK,eAKlC4E,GACA,kBAACrF,GAAD,CAAUtG,MAAO,CAAE6I,aAAc,WAC/B,kBAACxC,GAAD,cAEA,kBAAC,KAAD,CACE/D,KAAK,WACLuE,QAASA,EACT4B,MAAO,CACLyD,SAAU,iCAEZ/D,OAAQ,oBACNC,MAASzK,EADH,EACGA,MAAO0K,EADV,EACUA,OAAQC,EADlB,EACkBA,SACV/L,EAFR,EAEN4P,WAAc5P,MAFR,OAIN,oCACE,kBAACkP,GAAD,KACE,kBAACW,GAAA,EAAD,CAAiB9J,KAAK,OAAOC,KAAM,GAAIH,MAAM,YAC7C,kBAAC4D,GAAD,CACE2C,iBAAiB,WACjBC,iBAAe,EACfL,qBAAqB,UACrBC,YAAY,QACZF,SAAUA,EACV3K,MAAOA,EACP0K,OAAQA,KAGX9L,GAAS,kBAAC2J,GAAD,KAAY3J,EAAMwK,cAMtC,kBAACT,GAAD,CAAUtG,MAAO,CAAE6I,aAAc,IAC/B,kBAAC1C,GAAD,CACEnG,MAAO,CACLY,eAAgB,GAChBJ,YAAa,OACbH,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVE,cAAe,IACfC,aAAc,KACdG,UAAW,GAEbwL,SAAUpP,EACVkG,QAAS,WACPwI,EACI7E,EAAaiF,EAAbjF,GACAA,EAAaK,EAAbL,KAGN,kBAACV,GAAD,KACGnJ,EACC,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,SACxCuJ,EACF,SAEA,WAIN,kBAACJ,GAAD,CAAYpI,QAAS,kBAAMyI,GAAcD,KACvC,kBAACH,GAAD,KACGvO,EACC,kBAAC,KAAD,CAAmBkF,WAAW,EAAMC,MAAM,SACxCuJ,EACF,oBAEA,wBAMV,kBAAC7C,GAAA,EAAD,CAAUC,QAAS9B,EAAS+B,UAAW,kBAAM9B,GAAW,KACrDH,KC/OHuF,GAAWnC,eACTG,GAAsBgC,GAAtBhC,UAAWE,GAAW8B,GAAX9B,OAeJ+B,GAbc,WAC3B,OACE,kBAACjC,GAAD,CAAWC,iBAAiB,SAC1B,kBAACC,GAAD,CAAQlI,KAAK,QAAQmI,UAAWiB,GAAOhB,QAAS,CAAEC,aAAa,KAC/D,kBAACH,GAAD,CACElI,KAAK,MACLmI,UAAWI,GACXH,QAAS,CAAEC,aAAa,OCWjB6B,GApBA,WACb,MAA4B5N,IAApBhB,EAAR,EAAQA,OAER,OAFA,EAAgBX,QAIZ,kBAACgC,EAAA,EAAD,CACEe,MAAO,CACLyM,KAAM,EACNC,eAAgB,SAChBC,WAAY,WAGd,kBAACC,EAAA,EAAD,CAAmBrK,KAAK,WAKvB3E,EAAS,kBAAC,GAAD,MAAgB,kBAAC,GAAD,OCRnBiP,GAVO,WACpB,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SCJO,SAASC,KACtB,MAAiBC,YAAS,CACxBC,QAASC,EAAQ,OAGnB,OAJA,YAIkC,kBAAC,GAAD,MAAjB,kBAAC,IAAD,Q,+DCRf,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CtP,MAAK,SAASuP,OAGdjP,OAAM,SAASjC,GACdyF,QAAQyL,KAAK,oCAAqClR,U,oBCV1DjB,EAAOC,QAAU,IAA0B,wB","file":"static/js/app.c0b0a2d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calebe.3e8e158c.png\";","import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst api = axios.create({\r\n  baseURL: __DEV__ ? \"http://192.168.15.23:3333\" : \"https://api.calebe.online\",\r\n});\r\n\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n    config.headers.common.Authorization = `Bearer ${await AsyncStorage.getItem(\r\n      \"auth:token\"\r\n    )}`;\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport api from \"../Services/api\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { IUsuario } from \"../../declarations\";\r\n\r\ninterface AuthContextProps {\r\n  signed: boolean;\r\n  user: IUsuario | null;\r\n  setUser: React.Dispatch<React.SetStateAction<IUsuario | null>>;\r\n  login(email: string, password: string): Promise<AxiosResponse>;\r\n  logout(): Promise<AxiosResponse>;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextProps>({} as AuthContextProps);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState<IUsuario | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function loadStorage() {\r\n      const storageUser = await AsyncStorage.getItem(\"auth:user\");\r\n      const storageToken = await AsyncStorage.getItem(\"auth:token\");\r\n      if (storageToken && storageUser) {\r\n        setUser(JSON.parse(storageUser));\r\n        setLoading(false);\r\n        api.defaults.headers.Authorization = `Bearer ${storageToken}`;\r\n      } else if (!storageUser) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadStorage();\r\n  }, []);\r\n\r\n  async function login(email: string, password: string) {\r\n    return new Promise<AxiosResponse>((resolve, reject) => {\r\n      api\r\n        .post(\"/login\", { email, password })\r\n        .then(async (response) => {\r\n          const { token, user } = response.data;\r\n          setUser(user);\r\n\r\n          await AsyncStorage.setItem(\"auth:user\", JSON.stringify(user)).then(\r\n            async () => {\r\n              await AsyncStorage.setItem(\"auth:token\", token).then(() => {\r\n                api.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n                api.defaults.headers.Authorization = `Bearer ${token}`;\r\n\r\n                resolve(response);\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((erro) => {\r\n          reject(erro);\r\n        });\r\n    });\r\n  }\r\n\r\n  async function logout() {\r\n    return new Promise<AxiosResponse>((resolve) => {\r\n      api.post(\"/logout\").then(async (response) => {\r\n        await AsyncStorage.clear().then(() => {\r\n          setUser(null);\r\n          resolve(response);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ signed: !!user, user, setUser, login, logout, loading }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  return context;\r\n}\r\n\r\nexport default AuthContext;\r\n","import { BottomTabNavigationProp } from \"@react-navigation/bottom-tabs\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FlatList } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport Post from \"../Components/Post\";\r\nimport api from \"../Services/api\";\r\n\r\nconst FeedContainer = styled.SafeAreaView`\r\n  flex: 1;\r\n  background-color: #b1d2d6;\r\n`;\r\n\r\ntype TabParamList = {\r\n  Home: undefined;\r\n  Ranking: undefined;\r\n  Desafios: undefined;\r\n  Configs: undefined;\r\n};\r\n\r\nexport enum Screens {\r\n  HOME = \"Home\",\r\n  RANKING = \"Ranking\",\r\n  DESAFIOS = \"Desafios\",\r\n  CONFIGS = \"Configs\",\r\n}\r\n\r\nexport interface TabBarProps {\r\n  navigation: BottomTabNavigationProp<TabParamList, Screens>;\r\n}\r\n\r\nconst Feed = ({ navigation }: TabBarProps) => {\r\n  const [posts, setPosts] = useState<IDevocional[]>([] as IDevocional[]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      try {\r\n        setLoading(true);\r\n        await api.get(\"/devocional\").then(({ data }) => {\r\n          setPosts(data);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    navigation.addListener(\"focus\", async () => {\r\n      try {\r\n        setLoading(true);\r\n        await api.get(\"/devocional\").then(({ data }) => {\r\n          setPosts(data);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <FeedContainer>\r\n      <FlatList\r\n        data={posts}\r\n        style={{ paddingHorizontal: 20 }}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={Post}\r\n        refreshing={loading}\r\n      />\r\n    </FeedContainer>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/native\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Desafios = () => {\r\n  return (\r\n    <Container>\r\n      <Text>Desafios</Text>\r\n      <Container>\r\n        <Text>Desafios ainda não liberados!</Text>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Desafios;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { IEquipe } from \"../../declarations\";\r\nimport api from \"../Services/api\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { RankingStackParamList } from \"../Routes/app.routes\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Scroll = styled.ScrollView``;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Posicao = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Equipe = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Colocacao = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n`;\r\n\r\nconst Pontuacao = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #5ceaa0;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst PrimeiroContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst RankingContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Row = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst EquipeContainer = styled.TouchableOpacity`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst PosicaoAvatar = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0.5rem;\r\n`;\r\n\r\nconst ColocacaoContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0 1rem;\r\n  margin-top: -120px;\r\n  width: 100%;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Ranking\">;\r\n\r\nconst Ranking = ({ navigation }: Props) => {\r\n  const [equipes, setEquipes] = useState<IEquipe[]>([] as IEquipe[]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [primeiro, setPrimeiro] = useState<IEquipe | undefined>(undefined);\r\n  const [segundo, setSegundo] = useState<IEquipe | undefined>(undefined);\r\n  const [terceiro, setTerceiro] = useState<IEquipe | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    async function getEquipes() {\r\n      setLoading(true);\r\n      await api\r\n        .get(\"/equipe\")\r\n        .then(({ data }) => {\r\n          let temp: IEquipe[] = data;\r\n          if (temp.length > 3) {\r\n            setPrimeiro(temp.shift());\r\n            setSegundo(temp.shift());\r\n            setTerceiro(temp.shift());\r\n          }\r\n          setEquipes(temp);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipes();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Text>Ranking de Equipes</Text>\r\n      {loading ? (\r\n        <Container>\r\n          <ActivityIndicator animating={true} color=\"#fff\" />\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          {primeiro && segundo && terceiro && (\r\n            <>\r\n              <PrimeiroContainer>\r\n                <PosicaoAvatar>\r\n                  <Posicao>1</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {primeiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: primeiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{primeiro.nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </PrimeiroContainer>\r\n              <ColocacaoContainer>\r\n                <PosicaoAvatar>\r\n                  <Posicao>2</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {segundo.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: segundo.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Equipe>{segundo.nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n                <PosicaoAvatar>\r\n                  <Posicao>3</Posicao>\r\n                  <MaterialCommunityIcons\r\n                    name=\"crown\"\r\n                    size={24}\r\n                    color=\"#CCB464\"\r\n                  />\r\n                  {terceiro.avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.shadowRanking}\r\n                      source={{ uri: terceiro.avatar }}\r\n                      size={80}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.shadowRanking}\r\n                      icon=\"account\"\r\n                      size={80}\r\n                    />\r\n                  )}\r\n                  <Posicao>{terceiro.nome}</Posicao>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </PosicaoAvatar>\r\n              </ColocacaoContainer>\r\n            </>\r\n          )}\r\n          <RankingContainer>\r\n            {equipes.map(({ id, avatar, nome }, index) => (\r\n              <Row key={id}>\r\n                <Colocacao>\r\n                  <Posicao>{index + 1}</Posicao>\r\n                </Colocacao>\r\n                <EquipeContainer\r\n                  style={style.shadow}\r\n                  onPress={() => navigation.navigate(\"Equipe\", { id })}\r\n                >\r\n                  {avatar ? (\r\n                    <Avatar.Image\r\n                      style={style.avatarBg}\r\n                      source={{ uri: avatar }}\r\n                      size={50}\r\n                    />\r\n                  ) : (\r\n                    <Avatar.Icon\r\n                      style={style.avatarBg}\r\n                      icon=\"account\"\r\n                      size={50}\r\n                    />\r\n                  )}\r\n                  <Equipe>{nome}</Equipe>\r\n                  <Pontuacao>0</Pontuacao>\r\n                </EquipeContainer>\r\n              </Row>\r\n            ))}\r\n          </RankingContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ranking;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ListRenderItem } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { IDevocional } from \"../../declarations\";\r\nimport { FontAwesome5, FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nconst Container = styled.View`\r\n  background-color: #ffffff;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Header = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Content = styled.View`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom-color: #5ea6a9;\r\n  border-bottom-width: 1px;\r\n`;\r\n\r\nconst Footer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Verso = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-weight: 500;\r\n  color: #000;\r\n  font-size: 12px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Devocional = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Titulo = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst NullAvatar = styled.View`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #bdbdbd;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LikeText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #e80d0d;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CommentText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #000;\r\n  font-weight: 700;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ActionContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst Post: ListRenderItem<IDevocional> = ({\r\n  item: { verso, conteudo, titulo, autor, video },\r\n}) => {\r\n  return (\r\n    <Container\r\n      style={{\r\n        marginVertical: 10,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n      }}\r\n    >\r\n      <Header>\r\n        {autor.avatar ? (\r\n          <Avatar source={{ uri: autor.avatar }} />\r\n        ) : (\r\n          <NullAvatar>\r\n            <FontAwesome5 name=\"user\" size={16} color=\"black\" />\r\n          </NullAvatar>\r\n        )}\r\n        <Titulo>{titulo}</Titulo>\r\n      </Header>\r\n      <Content>\r\n        <Verso>{verso}</Verso>\r\n        <Devocional numberOfLines={10}>{conteudo}</Devocional>\r\n      </Content>\r\n      <Footer>\r\n        <ActionContainer>\r\n          <LikeText>26</LikeText>\r\n          <MaterialIcons name=\"favorite-outline\" size={18} color=\"#e80d0d\" />\r\n        </ActionContainer>\r\n        <ActionContainer>\r\n          <CommentText>26</CommentText>\r\n          <FontAwesome name=\"commenting-o\" size={18} color=\"black\" />\r\n        </ActionContainer>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport { Feather, AntDesign } from \"@expo/vector-icons\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport styled from \"styled-components/native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst EquipeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst MenuContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Menu = styled.TouchableOpacity`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Configuracoes = ({ navigation }: Props) => {\r\n  const { logout, user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <PerfilContainer>\r\n        <Avatar.Image\r\n          source={{\r\n            uri: user?.avatar,\r\n          }}\r\n        />\r\n        <NomeText>{user?.nome}</NomeText>\r\n        <EquipeText>{`Equipe ${user?.equipe.nome}`}</EquipeText>\r\n      </PerfilContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu onPress={() => navigation.navigate(\"Editar\")}>\r\n          <Feather name=\"user\" size={24} color=\"#127c82\" />\r\n          <NomeText>Editar conta</NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"#127c82\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n      <MenuContainer\r\n        style={{\r\n          marginVertical: 10,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n          },\r\n          shadowOpacity: 0.22,\r\n          shadowRadius: 2.22,\r\n          elevation: 3,\r\n        }}\r\n      >\r\n        <Menu\r\n          onPress={async () => {\r\n            setLoading(true);\r\n            await logout().finally(() => setLoading(false));\r\n          }}\r\n        >\r\n          <AntDesign name=\"logout\" size={24} color=\"red\" />\r\n          <NomeText style={{ color: \"red\" }}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"red\" />\r\n            ) : (\r\n              \"Sair\"\r\n            )}\r\n          </NomeText>\r\n          <AntDesign name=\"right\" size={24} color=\"red\" />\r\n        </Menu>\r\n      </MenuContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Configuracoes;\r\n","import styled from \"styled-components/native\";\r\n\r\nexport const Input = styled.TextInput`\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ErrorText = styled.Text`\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  color: red;\r\n`;\r\n\r\nexport const Button = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #5ea6a9;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ButtonInsideText = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n`;\r\n\r\nexport const Label = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nexport const FormItem = styled.View`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 1rem;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { IUsuario } from \"../../declarations\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\ntype RootStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Configuracao\">;\r\n\r\nconst Editar = ({ navigation }: Props) => {\r\n  const { user, setUser } = useAuth();\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/usuario/${user?.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setUser(data);\r\n            await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/usuario/${user?.id}`, data)\r\n      .then(async ({ data }) => {\r\n        setUser(data);\r\n        await AsyncStorage.setItem(\"auth:user\", JSON.stringify(data));\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.replace(\"Configuracao\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.replace(\"Configuracao\")}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          <Avatar.Image\r\n            source={{\r\n              uri: user?.avatar,\r\n            }}\r\n            size={90}\r\n          />\r\n        </ClickButton>\r\n        <NomeText>Patrick</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={user?.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue={user?.email}\r\n            rules={{\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"email\"\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Email\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Senha</Label>\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                autoCompleteType=\"password\"\r\n                secureTextEntry\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Senha\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Editar;\r\n","import { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\r\nimport styled from \"styled-components/native\";\r\nimport { ActivityIndicator, Avatar } from \"react-native-paper\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { RankingStackParamList } from \"../Routes/app.routes\";\r\nimport { IEquipe } from \"../../declarations\";\r\nimport api from \"../Services/api\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #fff;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Membros = styled.ScrollView`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Membro = styled.TouchableOpacity`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: #5ea6a9;\r\n  border-radius: 30px;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst Nome = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n`;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Equipe\">;\r\n\r\nconst Equipe = ({\r\n  navigation,\r\n  route: {\r\n    params: { id },\r\n  },\r\n}: Props) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [equipe, setEquipe] = useState<IEquipe | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function getEquipe() {\r\n      setLoading(true);\r\n      await api\r\n        .get(`/equipe/${id}`)\r\n        .then(({ data }) => {\r\n          setEquipe(data);\r\n        })\r\n        .catch((e) => console.log(e))\r\n        .finally(() => setLoading(false));\r\n    }\r\n    getEquipe();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#FFF\" />\r\n        </ClickButton>\r\n      </Action>\r\n      {loading ? (\r\n        <ActivityIndicator animating={true} color=\"#fff\" />\r\n      ) : (\r\n        <>\r\n          {equipe && (\r\n            <PerfilContainer>\r\n              {equipe.avatar ? (\r\n                <Avatar.Image\r\n                  source={{\r\n                    uri: equipe.avatar,\r\n                  }}\r\n                  size={90}\r\n                />\r\n              ) : (\r\n                <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n              )}\r\n\r\n              <NomeText>{equipe.nome}</NomeText>\r\n              {!(user?.perfil === \"membro\" || user?.equipeId !== id) && (\r\n                <ClickButton\r\n                  onPress={() => navigation.navigate(\"Editar\", { ...equipe })}\r\n                >\r\n                  <InfoText>Editar Equipe</InfoText>\r\n                </ClickButton>\r\n              )}\r\n            </PerfilContainer>\r\n          )}\r\n          <Membros>\r\n            {equipe?.membros.map((membro) => (\r\n              <Membro style={style.shadow} key={membro.id}>\r\n                {membro.avatar ? (\r\n                  <Avatar.Image\r\n                    source={{\r\n                      uri: membro.avatar,\r\n                    }}\r\n                    size={50}\r\n                  />\r\n                ) : (\r\n                  <Avatar.Icon\r\n                    style={style.avatarBg}\r\n                    icon=\"account\"\r\n                    size={50}\r\n                  />\r\n                )}\r\n                <Nome>{membro.nome}</Nome>\r\n                <Feather name=\"chevron-right\" size={24} color=\"#5ea6a9\" />\r\n              </Membro>\r\n            ))}\r\n          </Membros>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Equipe;\r\n","import React, { useState } from \"react\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ActivityIndicator, Avatar, Snackbar } from \"react-native-paper\";\r\nimport FormData from \"form-data\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport styled from \"styled-components/native\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { IUsuario } from \"../../declarations\";\r\nimport { RankingStackParamList } from \"../Routes/app.routes\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst PerfilContainer = styled.View`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst NomeText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InfoText = styled.Text`\r\n  color: #127c82;\r\n  font-family: \"Poppins\";\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst FormContainer = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Action = styled.View`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\nconst ClickButton = styled.TouchableOpacity``;\r\n\r\nconst style = StyleSheet.create({\r\n  shadowRanking: {\r\n    borderColor: \"#5CEAA0\",\r\n    borderWidth: 2,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowColor: \"#5CEAA0\",\r\n    shadowOpacity: 1.0,\r\n    shadowRadius: 20,\r\n  },\r\n  shadow: {\r\n    marginVertical: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    elevation: 4,\r\n  },\r\n  avatarBg: {\r\n    backgroundColor: \"#5ea6a9\",\r\n  },\r\n});\r\n\r\ntype Props = StackScreenProps<RankingStackParamList, \"Editar\">;\r\n\r\nconst EditarEquipe = ({ navigation, route: { params } }: Props) => {\r\n  const [foto, setFoto] = useState(params.avatar);\r\n  const { control, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    if (pickerResult.cancelled === true) {\r\n      return;\r\n    }\r\n\r\n    const block = pickerResult.uri;\r\n\r\n    fetch(block)\r\n      .then((res) => res.blob())\r\n      .then(async (blob) => {\r\n        const form = new FormData();\r\n        form.append(\"avatar\", blob);\r\n        await api\r\n          .put(`/equipe/${params.id}`, form)\r\n          .then(async ({ data }) => {\r\n            setFoto(data.avatar);\r\n            setDisplay(true);\r\n            setMessage(\"Foto atualizada com sucesso!\");\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: IUsuario) => {\r\n    setLoading(true);\r\n    await api\r\n      .put(`/equipe/${params.id}`, data)\r\n      .then(async () => {\r\n        setDisplay(true);\r\n        setMessage(\"Dados atualizados com sucesso!\");\r\n        navigation.goBack();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Action>\r\n        <ClickButton onPress={() => navigation.goBack()}>\r\n          <AntDesign name=\"arrowleft\" size={24} color=\"#127c82\" />\r\n        </ClickButton>\r\n      </Action>\r\n      <PerfilContainer>\r\n        <ClickButton onPress={openImagePickerAsync}>\r\n          {foto ? (\r\n            <Avatar.Image\r\n              source={{\r\n                uri: foto,\r\n              }}\r\n              size={90}\r\n            />\r\n          ) : (\r\n            <Avatar.Icon style={style.avatarBg} icon=\"account\" size={90} />\r\n          )}\r\n        </ClickButton>\r\n        <NomeText>{params.nome}</NomeText>\r\n        <InfoText>Editar Perfil</InfoText>\r\n      </PerfilContainer>\r\n      <FormContainer>\r\n        <FormItem>\r\n          <Label>Nome</Label>\r\n          <Controller\r\n            name=\"nome\"\r\n            control={control}\r\n            defaultValue={params.nome}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Nome\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n          <Controller\r\n            name=\"instagram\"\r\n            control={control}\r\n            defaultValue={params.instagram}\r\n            render={({ field: { value, onBlur, onChange } }) => (\r\n              <Input\r\n                placeholderTextColor=\"#127C82\"\r\n                placeholder=\"Instagram\"\r\n                onChange={onChange}\r\n                value={value}\r\n                onBlur={onBlur}\r\n              />\r\n            )}\r\n          />\r\n        </FormItem>\r\n      </FormContainer>\r\n      <FormItem style={{ marginBottom: 0 }}>\r\n        <Button\r\n          style={{\r\n            marginVertical: 10,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 1,\r\n            },\r\n            shadowOpacity: 0.22,\r\n            shadowRadius: 2.22,\r\n            elevation: 3,\r\n          }}\r\n        >\r\n          <ButtonInsideText onPress={() => handleSubmit(onSubmit)()}>\r\n            {loading ? (\r\n              <ActivityIndicator animating={true} color=\"#FFF\" />\r\n            ) : (\r\n              \"Salvar\"\r\n            )}\r\n          </ButtonInsideText>\r\n        </Button>\r\n      </FormItem>\r\n      <Snackbar\r\n        visible={display}\r\n        onDismiss={() => {\r\n          setDisplay(false);\r\n          setMessage(\"\");\r\n        }}\r\n      >\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditarEquipe;\r\n","import React from \"react\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\nimport Desafios from \"../Pages/Desafios\";\r\nimport Ranking from \"../Pages/Ranking\";\r\nimport Feed from \"../Pages/Feed\";\r\nimport Configuracoes from \"../Pages/Configuracoes\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Editar from \"../Pages/Editar\";\r\nimport Equipe from \"../Pages/Equipe\";\r\nimport EditarEquipe from \"../Pages/EditarEquipe\";\r\n\r\nexport type RankingStackParamList = {\r\n  Ranking: undefined;\r\n  Equipe: {\r\n    id: number;\r\n  };\r\n  Editar: {\r\n    id: number;\r\n    nome: string;\r\n    instagram: string;\r\n    avatar: string;\r\n    igrejaId: number;\r\n  };\r\n};\r\n\r\nexport type ConfigStackParamList = {\r\n  Configuracao: undefined;\r\n  Editar: undefined;\r\n};\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst ConfigStack = createStackNavigator();\r\n\r\nconst RankingStack = createStackNavigator();\r\n\r\nconst RankingRoutes = () => (\r\n  <RankingStack.Navigator initialRouteName=\"Ranking\">\r\n    <RankingStack.Screen\r\n      name=\"Ranking\"\r\n      component={Ranking}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Equipe\"\r\n      component={Equipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <RankingStack.Screen\r\n      name=\"Editar\"\r\n      component={EditarEquipe}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </RankingStack.Navigator>\r\n);\r\n\r\nconst ConfigRoutes = () => (\r\n  <ConfigStack.Navigator initialRouteName=\"Configuracao\">\r\n    <ConfigStack.Screen\r\n      name=\"Configuracao\"\r\n      component={Configuracoes}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <ConfigStack.Screen\r\n      name=\"Editar\"\r\n      component={Editar}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </ConfigStack.Navigator>\r\n);\r\n\r\nconst AppRoutes: React.FC = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      tabBarOptions={{\r\n        showLabel: false,\r\n        activeTintColor: \"#127C82\",\r\n        inactiveTintColor: \"#000\",\r\n        style: {\r\n          backgroundColor: \"#FFF\",\r\n          borderTopLeftRadius: 20,\r\n          borderTopRightRadius: 20,\r\n        },\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={Feed}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Ranking\"\r\n        component={RankingRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"award\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Desafios\"\r\n        component={Desafios}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"calendar\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Configs\"\r\n        component={ConfigRoutes}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"settings\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\nexport default AppRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport { Feather, SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components/native\";\r\nimport logo from \"../../assets/calebe.png\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../Services/api\";\r\nimport { ActivityIndicator, Snackbar } from \"react-native-paper\";\r\nimport { AxiosError } from \"axios\";\r\nimport {\r\n  Button,\r\n  ButtonInsideText,\r\n  ErrorText,\r\n  FormItem,\r\n  Input,\r\n  Label,\r\n} from \"../Components\";\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #127c82;\r\n`;\r\n\r\nconst Logo = styled.View`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-family: \"Poppins\";\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst LoginForm = styled.View`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-top-right-radius: 40px;\r\n  border-top-left-radius: 40px;\r\n`;\r\n\r\nconst TextButton = styled.TouchableOpacity`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TextButtonInside = styled.Text`\r\n  font-family: \"Poppins\";\r\n  color: #127c82;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst InputIconText = styled.View`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #86bcbe;\r\n  border-radius: 20px;\r\n  padding-left: 1rem;\r\n`;\r\n\r\ntype RootStackParamList = {\r\n  Login: undefined;\r\n  App: undefined;\r\n};\r\n\r\ntype Props = StackScreenProps<RootStackParamList, \"Login\">;\r\n\r\nfunction Login({ navigation }: Props) {\r\n  const [recuperar, setRecuperar] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [display, setDisplay] = useState(false);\r\n  const { login } = useAuth();\r\n  const { control, handleSubmit, reset } = useForm({ mode: \"all\" });\r\n\r\n  const onRecuperar = async (data: { email: string }) => {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/recuperar\", data)\r\n      .then(() => {\r\n        setDisplay(true);\r\n        reset({});\r\n        setMessage(\"Siga as instruções enviadas no seu email\");\r\n      })\r\n      .catch((e) => {\r\n        const { response } = e as AxiosError;\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n        setRecuperar(false);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data: { email: string; password: string }) => {\r\n    setLoading(true);\r\n    await login(data.email, data.password)\r\n      .catch(({ response }: AxiosError) => {\r\n        setDisplay(true);\r\n        setMessage(response?.data.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Logo>\r\n        <Image\r\n          source={logo}\r\n          style={{ width: 350, height: 200 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Text>{recuperar ? \"Recuperar senha\" : \"Bem vindo!\"}</Text>\r\n      </Logo>\r\n      <LoginForm>\r\n        <FormItem>\r\n          <Label>Email</Label>\r\n\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"O email deve ser informado\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Entre com um email válido\",\r\n              },\r\n            }}\r\n            render={({\r\n              field: { value, onBlur, onChange },\r\n              fieldState: { error },\r\n            }) => (\r\n              <>\r\n                <InputIconText>\r\n                  <Feather name=\"mail\" size={18} color=\"#127c82\" />\r\n                  <Input\r\n                    autoCompleteType=\"email\"\r\n                    placeholderTextColor=\"#127C82\"\r\n                    placeholder=\"Email\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </InputIconText>\r\n                {error && <ErrorText>{error.message}</ErrorText>}\r\n              </>\r\n            )}\r\n          />\r\n        </FormItem>\r\n        {!recuperar && (\r\n          <FormItem style={{ marginBottom: \"2.5rem\" }}>\r\n            <Label>Senha</Label>\r\n\r\n            <Controller\r\n              name=\"password\"\r\n              control={control}\r\n              rules={{\r\n                required: \"A senha precisa ser informada\",\r\n              }}\r\n              render={({\r\n                field: { value, onBlur, onChange },\r\n                fieldState: { error },\r\n              }) => (\r\n                <>\r\n                  <InputIconText>\r\n                    <SimpleLineIcons name=\"lock\" size={18} color=\"#127c82\" />\r\n                    <Input\r\n                      autoCompleteType=\"password\"\r\n                      secureTextEntry\r\n                      placeholderTextColor=\"#127C82\"\r\n                      placeholder=\"Senha\"\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      onBlur={onBlur}\r\n                    />\r\n                  </InputIconText>\r\n                  {error && <ErrorText>{error.message}</ErrorText>}\r\n                </>\r\n              )}\r\n            />\r\n          </FormItem>\r\n        )}\r\n        <FormItem style={{ marginBottom: 0 }}>\r\n          <Button\r\n            style={{\r\n              marginVertical: 10,\r\n              shadowColor: \"#000\",\r\n              shadowOffset: {\r\n                width: 0,\r\n                height: 1,\r\n              },\r\n              shadowOpacity: 0.22,\r\n              shadowRadius: 2.22,\r\n              elevation: 3,\r\n            }}\r\n            disabled={loading}\r\n            onPress={() => {\r\n              recuperar\r\n                ? handleSubmit(onRecuperar)()\r\n                : handleSubmit(onSubmit)();\r\n            }}\r\n          >\r\n            <ButtonInsideText>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Enviar\"\r\n              ) : (\r\n                \"Entrar\"\r\n              )}\r\n            </ButtonInsideText>\r\n          </Button>\r\n          <TextButton onPress={() => setRecuperar(!recuperar)}>\r\n            <TextButtonInside>\r\n              {loading ? (\r\n                <ActivityIndicator animating={true} color=\"#FFF\" />\r\n              ) : recuperar ? (\r\n                \"Voltar para login\"\r\n              ) : (\r\n                \"Esqueceu a senha?\"\r\n              )}\r\n            </TextButtonInside>\r\n          </TextButton>\r\n        </FormItem>\r\n      </LoginForm>\r\n      <Snackbar visible={display} onDismiss={() => setDisplay(false)}>\r\n        {message}\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Login from \"../Pages/Login\";\r\nimport AppRoutes from \"./app.routes\";\r\n\r\nconst AppStack = createStackNavigator();\r\nconst { Navigator, Screen } = AppStack;\r\n\r\nconst AuthRoutes: React.FC = () => {\r\n  return (\r\n    <Navigator initialRouteName=\"Login\">\r\n      <Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\r\n      <Screen\r\n        name=\"App\"\r\n        component={AppRoutes}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport AppRoutes from \"./app.routes\";\r\nimport AuthRoutes from \"./auth.routes\";\r\n\r\nconst Routes = () => {\r\n  const { signed, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return signed ? <AppRoutes /> : <AuthRoutes />;\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { AuthProvider } from \"./Context/AuthContext\";\r\nimport Routes from \"./Routes/index.routes\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <AuthProvider>\r\n        <Routes />\r\n      </AuthProvider>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport App from \"./src\";\n\nexport default function Main() {\n  const [loaded] = useFonts({\n    Poppins: require(\"./assets/fonts/Poppins.ttf\"),\n  });\n\n  return !loaded ? <AppLoading /> : <App />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins.ttf\";"],"sourceRoot":""}